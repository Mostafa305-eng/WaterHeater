

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jul 18 22:38:15 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	intentry,global,class=CODE,delta=2
    96                           	psect	text72,local,class=CODE,merge=1,delta=2
    97                           	psect	text73,local,class=CODE,merge=1,delta=2
    98                           	psect	text74,local,class=CODE,merge=1,delta=2
    99                           	psect	text75,local,class=CODE,merge=1,delta=2
   100                           	psect	text76,local,class=CODE,merge=1,delta=2
   101                           	psect	text77,local,class=CODE,merge=1,delta=2
   102                           	psect	functab,global,class=ENTRY,delta=2
   103                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   104                           	dabs	1,0x7E,2
   105  0000                     
   106                           ; Version 2.20
   107                           ; Generated 12/02/2020 GMT
   108                           ; 
   109                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC16F877A Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  000E                     	;# 
   216  000F                     	;# 
   217  0010                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0013                     	;# 
   221  0014                     	;# 
   222  0015                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001D                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0086                     	;# 
   238  0087                     	;# 
   239  0088                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0088                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0094                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  018C                     	;# 
   439  018D                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  000E                     	;# 
   456  000F                     	;# 
   457  0010                     	;# 
   458  0011                     	;# 
   459  0012                     	;# 
   460  0013                     	;# 
   461  0014                     	;# 
   462  0015                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0017                     	;# 
   466  0018                     	;# 
   467  0019                     	;# 
   468  001A                     	;# 
   469  001B                     	;# 
   470  001B                     	;# 
   471  001C                     	;# 
   472  001D                     	;# 
   473  001E                     	;# 
   474  001F                     	;# 
   475  0081                     	;# 
   476  0085                     	;# 
   477  0086                     	;# 
   478  0087                     	;# 
   479  0088                     	;# 
   480  0089                     	;# 
   481  008C                     	;# 
   482  008D                     	;# 
   483  008E                     	;# 
   484  0091                     	;# 
   485  0092                     	;# 
   486  0093                     	;# 
   487  0094                     	;# 
   488  0098                     	;# 
   489  0099                     	;# 
   490  009C                     	;# 
   491  009D                     	;# 
   492  009E                     	;# 
   493  009F                     	;# 
   494  010C                     	;# 
   495  010D                     	;# 
   496  010E                     	;# 
   497  010F                     	;# 
   498  018C                     	;# 
   499  018D                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000D                     	;# 
   514  000E                     	;# 
   515  000E                     	;# 
   516  000F                     	;# 
   517  0010                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0013                     	;# 
   521  0014                     	;# 
   522  0015                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001B                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  001D                     	;# 
   533  001E                     	;# 
   534  001F                     	;# 
   535  0081                     	;# 
   536  0085                     	;# 
   537  0086                     	;# 
   538  0087                     	;# 
   539  0088                     	;# 
   540  0089                     	;# 
   541  008C                     	;# 
   542  008D                     	;# 
   543  008E                     	;# 
   544  0091                     	;# 
   545  0092                     	;# 
   546  0093                     	;# 
   547  0094                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009E                     	;# 
   553  009F                     	;# 
   554  010C                     	;# 
   555  010D                     	;# 
   556  010E                     	;# 
   557  010F                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0008                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000D                     	;# 
   574  000E                     	;# 
   575  000E                     	;# 
   576  000F                     	;# 
   577  0010                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  0081                     	;# 
   596  0085                     	;# 
   597  0086                     	;# 
   598  0087                     	;# 
   599  0088                     	;# 
   600  0089                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  009F                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  000E                     	;# 
   636  000F                     	;# 
   637  0010                     	;# 
   638  0011                     	;# 
   639  0012                     	;# 
   640  0013                     	;# 
   641  0014                     	;# 
   642  0015                     	;# 
   643  0015                     	;# 
   644  0016                     	;# 
   645  0017                     	;# 
   646  0018                     	;# 
   647  0019                     	;# 
   648  001A                     	;# 
   649  001B                     	;# 
   650  001B                     	;# 
   651  001C                     	;# 
   652  001D                     	;# 
   653  001E                     	;# 
   654  001F                     	;# 
   655  0081                     	;# 
   656  0085                     	;# 
   657  0086                     	;# 
   658  0087                     	;# 
   659  0088                     	;# 
   660  0089                     	;# 
   661  008C                     	;# 
   662  008D                     	;# 
   663  008E                     	;# 
   664  0091                     	;# 
   665  0092                     	;# 
   666  0093                     	;# 
   667  0094                     	;# 
   668  0098                     	;# 
   669  0099                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  009F                     	;# 
   674  010C                     	;# 
   675  010D                     	;# 
   676  010E                     	;# 
   677  010F                     	;# 
   678  018C                     	;# 
   679  018D                     	;# 
   680                           
   681                           	psect	idataCOMMON
   682  07FF                     __pidataCOMMON:
   683                           
   684                           ;initializer for _u8_WaterHeaterStatus
   685  07FF  340B               	retlw	11
   686                           
   687                           	psect	idataBANK0
   688  1ADD                     __pidataBANK0:
   689                           
   690                           ;initializer for _u8_Mode
   691  1ADD  3419               	retlw	25
   692                           
   693                           ;initializer for _u8_MainLoopStatus
   694  1ADE  3410               	retlw	16
   695                           
   696                           	psect	idataBANK1
   697  1C1B                     __pidataBANK1:
   698                           
   699                           ;initializer for _au8_SSD_DataMask
   700  1C1B  343F               	retlw	63
   701  1C1C  3406               	retlw	6
   702  1C1D  345B               	retlw	91
   703  1C1E  344F               	retlw	79
   704  1C1F  3466               	retlw	102
   705  1C20  346D               	retlw	109
   706  1C21  347D               	retlw	125
   707  1C22  3407               	retlw	7
   708  1C23  347F               	retlw	127
   709  1C24  346F               	retlw	111
   710                           
   711                           ;initializer for App_init@F166
   712  1C25  3401               	retlw	1
   713  1C26  3400               	retlw	0
   714  1C27  3401               	retlw	1
   715  1C28  3406               	retlw	6
   716  1C29  3401               	retlw	low (fp__Timer_Callbk-i1fpbase)
   717                           
   718                           ;initializer for App_init@F162
   719  1C2A  3400               	retlw	0
   720  1C2B  3402               	retlw	2
   721  1C2C  3404               	retlw	low (fp__EXT_INT_Callbk-i1fpbase)
   722                           
   723                           ;initializer for _u8_DisplayMode
   724  1C2D  3402               	retlw	2
   725                           
   726                           	psect	idataBANK3
   727  1F7A                     __pidataBANK3:
   728                           
   729                           ;initializer for _au8_PrescalerValueTable
   730  1F7A  3400               	retlw	0
   731  1F7B  3400               	retlw	0
   732  1F7C  3401               	retlw	1
   733  1F7D  3400               	retlw	0
   734  1F7E  3402               	retlw	2
   735  1F7F  3400               	retlw	0
   736  1F80  3404               	retlw	4
   737  1F81  3400               	retlw	0
   738  1F82  3408               	retlw	8
   739  1F83  3400               	retlw	0
   740  1F84  3410               	retlw	16
   741  1F85  3400               	retlw	0
   742  1F86  3420               	retlw	32
   743  1F87  3400               	retlw	0
   744  1F88  3440               	retlw	64
   745  1F89  3400               	retlw	0
   746  1F8A  3480               	retlw	128
   747  1F8B  3400               	retlw	0
   748  1F8C  3400               	retlw	0
   749  1F8D  3401               	retlw	1
   750                           
   751                           ;initializer for _au8_Timer1_PrescalerTable
   752  1F8E  3400               	retlw	0
   753  1F8F  3400               	retlw	0
   754  1F90  3400               	retlw	0
   755  1F91  3400               	retlw	0
   756  1F92  3410               	retlw	16
   757  1F93  3420               	retlw	32
   758  1F94  3430               	retlw	48
   759  1F95  3400               	retlw	0
   760  1F96  3400               	retlw	0
   761  1F97  3400               	retlw	0
   762                           
   763                           ;initializer for _au8_Timer0_PrescalerTable
   764  1F98  3400               	retlw	0
   765  1F99  3400               	retlw	0
   766  1F9A  3400               	retlw	0
   767  1F9B  3401               	retlw	1
   768  1F9C  3402               	retlw	2
   769  1F9D  3403               	retlw	3
   770  1F9E  3404               	retlw	4
   771  1F9F  3405               	retlw	5
   772  1FA0  3406               	retlw	6
   773  1FA1  3407               	retlw	7
   774                           
   775                           ;initializer for _STA_buttons
   776  1FA2  3401               	retlw	1
   777  1FA3  3401               	retlw	1
   778  1FA4  3410               	retlw	16
   779  1FA5  3401               	retlw	1
   780  1FA6  34FF               	retlw	255
   781  1FA7  34FF               	retlw	255
   782  1FA8  3401               	retlw	1
   783  1FA9  3402               	retlw	2
   784  1FAA  3410               	retlw	16
   785  1FAB  3401               	retlw	1
   786  1FAC  34FF               	retlw	255
   787  1FAD  34FF               	retlw	255
   788  1FAE  3401               	retlw	1
   789  1FAF  3404               	retlw	4
   790  1FB0  3410               	retlw	16
   791  1FB1  3401               	retlw	1
   792  1FB2  34FF               	retlw	255
   793  1FB3  34FF               	retlw	255
   794  1FB4  3400               	retlw	0
   795  1FB5  3408               	retlw	8
   796  1FB6  3410               	retlw	16
   797  1FB7  3401               	retlw	1
   798  1FB8  34FF               	retlw	255
   799  1FB9  34FF               	retlw	255
   800  0013                     _SSPBUF	set	19
   801  0014                     _SSPCON	set	20
   802  0011                     _TMR2	set	17
   803  000F                     _TMR1H	set	15
   804  000E                     _TMR1L	set	14
   805  0001                     _TMR0	set	1
   806  0012                     _T2CON	set	18
   807  0010                     _T1CON	set	16
   808  0009                     _PORTE	set	9
   809  0008                     _PORTD	set	8
   810  0007                     _PORTC	set	7
   811  0006                     _PORTB	set	6
   812  0005                     _PORTA	set	5
   813  001E                     _ADRESH	set	30
   814  001F                     _ADCON0	set	31
   815  000C                     _PIR1	set	12
   816  000B                     _INTCON	set	11
   817  0093                     _SSPADD	set	147
   818  0091                     _SSPCON2	set	145
   819  0094                     _SSPSTAT	set	148
   820  008C                     _PIE1	set	140
   821  0081                     _OPTION_REG	set	129
   822  0089                     _TRISE	set	137
   823  0088                     _TRISD	set	136
   824  0087                     _TRISC	set	135
   825  0086                     _TRISB	set	134
   826  0085                     _TRISA	set	133
   827  009E                     _ADRESL	set	158
   828  009F                     _ADCON1	set	159
   829                           
   830                           	psect	cinit
   831  0015                     start_initialization:	
   832                           ; #config settings
   833                           
   834  0015                     __initialization:
   835                           
   836                           ; Initialize objects allocated to BANK3
   837  0015  1783               	bsf	3,7	;select IRP bank2
   838  0016  30D0               	movlw	low (__pdataBANK3+64)
   839  0017  00FD               	movwf	btemp+-1
   840  0018  301F               	movlw	high __pidataBANK3
   841  0019  00FE               	movwf	btemp
   842  001A  307A               	movlw	low __pidataBANK3
   843  001B  00FF               	movwf	btemp+1
   844  001C  3090               	movlw	low __pdataBANK3
   845  001D  0084               	movwf	4
   846  001E  160A  158A  240C  120A  118A  	fcall	init_ram0
   847                           
   848                           ; Initialize objects allocated to BANK1
   849  0023  1383               	bcf	3,7	;select IRP bank0
   850  0024  30EF               	movlw	low (__pdataBANK1+19)
   851  0025  00FD               	movwf	btemp+-1
   852  0026  301C               	movlw	high __pidataBANK1
   853  0027  00FE               	movwf	btemp
   854  0028  301B               	movlw	low __pidataBANK1
   855  0029  00FF               	movwf	btemp+1
   856  002A  30DC               	movlw	low __pdataBANK1
   857  002B  0084               	movwf	4
   858  002C  160A  158A  240C  120A  118A  	fcall	init_ram0
   859                           
   860                           ; Initialize objects allocated to BANK0
   861  0031  160A  158A  22DD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   862  0036  00E4               	movwf	__pdataBANK0& (0+127)
   863  0037  160A  158A  22DE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   864  003C  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   865                           
   866                           ; Initialize objects allocated to COMMON
   867  003D  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   868  0042  00FB               	movwf	__pdataCOMMON& (0+127)
   869                           
   870                           ; Clear objects allocated to BANK3
   871  0043  1783               	bsf	3,7	;select IRP bank2
   872  0044  30D0               	movlw	low __pbssBANK3
   873  0045  0084               	movwf	4
   874  0046  30DA               	movlw	low (__pbssBANK3+10)
   875  0047  160A  158A  22FC  120A  118A  	fcall	clear_ram0
   876                           
   877                           ; Clear objects allocated to BANK1
   878  004C  1383               	bcf	3,7	;select IRP bank0
   879  004D  30A0               	movlw	low __pbssBANK1
   880  004E  0084               	movwf	4
   881  004F  30C5               	movlw	low (__pbssBANK1+37)
   882  0050  160A  158A  22FC  120A  118A  	fcall	clear_ram0
   883                           
   884                           ; Clear objects allocated to BANK0
   885  0055  305C               	movlw	low __pbssBANK0
   886  0056  0084               	movwf	4
   887  0057  3064               	movlw	low (__pbssBANK0+8)
   888  0058  160A  158A  22FC  120A  118A  	fcall	clear_ram0
   889                           
   890                           ; Clear objects allocated to COMMON
   891  005D  01F6               	clrf	__pbssCOMMON& (0+127)
   892  005E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   893  005F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   894  0060  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   895  0061  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   896  0062                     end_of_initialization:	
   897                           ;End of C runtime variable initialization code
   898                           
   899  0062                     __end_of__initialization:
   900  0062  0183               	clrf	3
   901  0063  160A  158A  2B28   	ljmp	_main	;jump to C main() function
   902                           
   903                           	psect	bssCOMMON
   904  0076                     __pbssCOMMON:
   905  0076                     _u8_SSD_TickCounter:
   906  0076                     	ds	1
   907  0077                     _u8_SSD_Current:
   908  0077                     	ds	1
   909  0078                     _u8_Heating_Element_Led_State:
   910  0078                     	ds	1
   911  0079                     _u8_AVG_Temperature:
   912  0079                     	ds	1
   913  007A                     _u8_SetTemperature:
   914  007A                     	ds	1
   915                           
   916                           	psect	dataCOMMON
   917  007B                     __pdataCOMMON:
   918  007B                     _u8_WaterHeaterStatus:
   919  007B                     	ds	1
   920                           
   921                           	psect	bssBANK0
   922  005C                     __pbssBANK0:
   923  005C                     _u8_ModuleMode:
   924  005C                     	ds	1
   925  005D                     _u8_PB_TickCounter:
   926  005D                     	ds	1
   927  005E                     _u8_DisplayTickCounter:
   928  005E                     	ds	1
   929  005F                     _u8_Mode@Display$F109:
   930  005F                     	ds	1
   931  0060                     _u8_Data:
   932  0060                     	ds	1
   933  0061                     _u8_Mode@ADC$F29:
   934  0061                     	ds	1
   935  0062                     _u16_ADCReading:
   936  0062                     	ds	2
   937                           
   938                           	psect	dataBANK0
   939  0064                     __pdataBANK0:
   940  0064                     _u8_Mode:
   941  0064                     	ds	1
   942  0065                     _u8_MainLoopStatus:
   943  0065                     	ds	1
   944                           
   945                           	psect	bssBANK1
   946  00A0                     __pbssBANK1:
   947  00A0                     _astr_SSDs:
   948  00A0                     	ds	8
   949  00A8                     _ast_INTS:
   950  00A8                     	ds	8
   951  00B0                     _au8_PrescalerValue:
   952  00B0                     	ds	6
   953  00B6                     _au8_Timer_Started:
   954  00B6                     	ds	3
   955  00B9                     _au8_Timer_Prescalar:
   956  00B9                     	ds	3
   957  00BC                     _u16_LED_Counter:
   958  00BC                     	ds	2
   959  00BE                     _u16_SettingModeCounter:
   960  00BE                     	ds	2
   961  00C0                     _u16_DisplayBlinkCounter:
   962  00C0                     	ds	2
   963  00C2                     _u8_TR_TickCounter:
   964  00C2                     	ds	1
   965  00C3                     _u8_APP_TickCounter:
   966  00C3                     	ds	1
   967  00C4                     _ptrf_ADC_cbk:
   968  00C4                     	ds	1
   969                           
   970                           	psect	dataBANK1
   971  00DC                     __pdataBANK1:
   972  00DC                     _au8_SSD_DataMask:
   973  00DC                     	ds	10
   974  00E6                     App_init@F166:
   975  00E6                     	ds	5
   976  00EB                     App_init@F162:
   977  00EB                     	ds	3
   978  00EE                     _u8_DisplayMode:
   979  00EE                     	ds	1
   980                           
   981                           	psect	bssBANK3
   982  01D0                     __pbssBANK3:
   983  01D0                     _au8_TemperatureSamples:
   984  01D0                     	ds	10
   985                           
   986                           	psect	dataBANK3
   987  0190                     __pdataBANK3:
   988  0190                     _au8_PrescalerValueTable:
   989  0190                     	ds	20
   990  01A4                     _au8_Timer1_PrescalerTable:
   991  01A4                     	ds	10
   992  01AE                     _au8_Timer0_PrescalerTable:
   993  01AE                     	ds	10
   994  01B8                     _STA_buttons:
   995  01B8                     	ds	24
   996                           
   997                           	psect	inittext
   998  1C08                     init_fetch0:	
   999                           ;	Called with low address in FSR and high address in W
  1000                           
  1001  1C08  087E               	movf	btemp,w
  1002  1C09  008A               	movwf	10
  1003  1C0A  087F               	movf	btemp+1,w
  1004  1C0B  0082               	movwf	2
  1005  1C0C                     init_ram0:	
  1006                           ;Called with:
  1007                           ;	high address of idata address in btemp 
  1008                           ;	low address of idata address in btemp+1 
  1009                           ;	low address of data in FSR
  1010                           ;	high address + 1 of data in btemp-1
  1011                           
  1012  1C0C  160A  158A  2408  160A  158A  	fcall	init_fetch0
  1013  1C11  0080               	movwf	0
  1014  1C12  0A84               	incf	4,f
  1015  1C13  0804               	movf	4,w
  1016  1C14  067D               	xorwf	btemp+-1,w
  1017  1C15  1903               	btfsc	3,2
  1018  1C16  3400               	retlw	0
  1019  1C17  0AFF               	incf	btemp+1,f
  1020  1C18  1903               	btfsc	3,2
  1021  1C19  0AFE               	incf	btemp,f
  1022  1C1A  2C0C               	goto	init_ram0
  1023                           
  1024                           	psect	clrtext
  1025  1AFC                     clear_ram0:	
  1026                           ;	Called with FSR containing the base address, and
  1027                           ;	W with the last address+1
  1028                           
  1029  1AFC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1030  1AFD                     clrloop0:
  1031  1AFD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1032  1AFE  0A84               	incf	4,f	;increment pointer
  1033  1AFF  0604               	xorwf	4,w	;XOR with final address
  1034  1B00  1903               	btfsc	3,2	;have we reached the end yet?
  1035  1B01  3400               	retlw	0	;all done for this memory range, return
  1036  1B02  0604               	xorwf	4,w	;XOR again to restore value
  1037  1B03  2AFD               	goto	clrloop0	;do the next byte
  1038                           
  1039                           	psect	cstackBANK3
  1040  01DA                     __pcstackBANK3:
  1041  01DA                     ??___fltol:
  1042                           
  1043                           ; 1 bytes @ 0x0
  1044  01DA                     	ds	4
  1045  01DE                     ??_App_Update:
  1046  01DE                     TemperatureAVGReading_Update@u8_LMTemperature:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x4
  1051  01DE                     	ds	1
  1052  01DF                     TemperatureAVGReading_Update@u8_LoopCounter:
  1053                           
  1054                           ; 1 bytes @ 0x5
  1055  01DF                     	ds	1
  1056  01E0                     App_Update@u8_CurrentTemperature:
  1057                           
  1058                           ; 1 bytes @ 0x6
  1059  01E0                     	ds	1
  1060  01E1                     App_Update@u8_BtnUpStatus:
  1061                           
  1062                           ; 1 bytes @ 0x7
  1063  01E1                     	ds	1
  1064  01E2                     App_Update@u8_BtnDownStatus:
  1065                           
  1066                           ; 1 bytes @ 0x8
  1067  01E2                     	ds	1
  1068                           
  1069                           	psect	cstackBANK1
  1070  00C5                     __pcstackBANK1:
  1071  00C5                     ??___fldiv:
  1072                           
  1073                           ; 1 bytes @ 0x0
  1074  00C5                     	ds	5
  1075  00CA                     ___fldiv@rem:
  1076                           
  1077                           ; 4 bytes @ 0x5
  1078  00CA                     	ds	4
  1079  00CE                     ___fldiv@sign:
  1080                           
  1081                           ; 1 bytes @ 0x9
  1082  00CE                     	ds	1
  1083  00CF                     ___fldiv@new_exp:
  1084                           
  1085                           ; 2 bytes @ 0xA
  1086  00CF                     	ds	2
  1087  00D1                     ___fldiv@grs:
  1088                           
  1089                           ; 4 bytes @ 0xC
  1090  00D1                     	ds	4
  1091  00D5                     ___fldiv@bexp:
  1092                           
  1093                           ; 1 bytes @ 0x10
  1094  00D5                     	ds	1
  1095  00D6                     ___fldiv@aexp:
  1096                           
  1097                           ; 1 bytes @ 0x11
  1098  00D6                     	ds	1
  1099  00D7                     ?___fltol:
  1100  00D7                     ___fltol@f1:	
  1101                           ; 4 bytes @ 0x12
  1102                           
  1103                           
  1104                           ; 4 bytes @ 0x12
  1105  00D7                     	ds	4
  1106  00DB                     LM_Read@pu8_temperature:
  1107                           
  1108                           ; 1 bytes @ 0x16
  1109  00DB                     	ds	1
  1110                           
  1111                           	psect	cstackCOMMON
  1112  0070                     __pcstackCOMMON:
  1113  0070                     ?_SSD_Init:
  1114  0070                     ?_SSD_TurnOff:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0070                     ?_Timer_SetValue:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0070                     ?_Timer_Start:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ?_CPU_SetSleep:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ?_Led_Toggle:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ?_Led_On:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0070                     ?_Led_Off:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0070                     ?_pushButton_Init:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_ExternInt_Init:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_ExternInt_Enable:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?_TemperatureAVGReading_init:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_Led_Init:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_Timer_Init:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_EEPROM_Init:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_TemperatureAVGReading_Read:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_Timer_Stop:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_SSD_Update:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_pushButton_Update:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_TemperatureAVGReading_Update:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_CPU_SleepUpdate:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_ADC_startConversion:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_ADC_ReadResult:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_Cooler_Init:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_Cooler_Turn:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_Display_Init:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_Display_Update:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ?_Display_TurnOff:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_Heater_Init:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_Heater_Turn:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_myIsr:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_INT_SetEnable:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_LM_init:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_LM_Update:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_LM_Read:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_Timer_Callbk:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_EXT_INT_Callbk:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_Heater_Cooler_action:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_LED_ACTION:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_App_init:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_App_Update:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_App_MainLoop:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_main:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_I2C_Master_Wait:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_I2C_Master_Start:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_I2C_Master_Stop:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_I2C_Master_AckEN:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_I2C_Master_Write:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_I2C_Master_Read:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_I2C_Master_EnableRead:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_I2C_Master_WaitACK:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?i1_CPU_SetSleep:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ??i1_CPU_SetSleep:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?i1___lbdiv:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     i1CPU_SetSleep@u8_SleepMode:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     i1___lbdiv@divisor:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     Timer_Start@u16_Timer_Count:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     Timer_SetValue@u16_Timer_Count:	
  1283                           ; 2 bytes @ 0x0
  1284                           
  1285                           
  1286                           ; 2 bytes @ 0x0
  1287  0070                     	ds	1
  1288  0071                     ??i1___lbdiv:
  1289  0071                     i1___lbdiv@dividend:	
  1290                           ; 1 bytes @ 0x1
  1291                           
  1292                           
  1293                           ; 1 bytes @ 0x1
  1294  0071                     	ds	1
  1295  0072                     ??_Timer_SetValue:
  1296  0072                     ??_Timer_Start:	
  1297                           ; 1 bytes @ 0x2
  1298                           
  1299  0072                     i1___lbdiv@counter:	
  1300                           ; 1 bytes @ 0x2
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x2
  1304  0072                     	ds	1
  1305  0073                     i1___lbdiv@quotient:
  1306                           
  1307                           ; 1 bytes @ 0x3
  1308  0073                     	ds	1
  1309  0074                     Timer_Start@u8_Timer_CH_NO:
  1310  0074                     Timer_SetValue@u8_Timer_CH_NO:	
  1311                           ; 1 bytes @ 0x4
  1312                           
  1313                           
  1314                           ; 1 bytes @ 0x4
  1315  0074                     	ds	1
  1316  0075                     ??_Timer_Callbk:
  1317  0075                     ??_EXT_INT_Callbk:	
  1318                           ; 1 bytes @ 0x5
  1319                           
  1320  0075                     myIsr@u8_counter:	
  1321                           ; 1 bytes @ 0x5
  1322                           
  1323                           
  1324                           ; 1 bytes @ 0x5
  1325  0075                     	ds	1
  1326                           
  1327                           	psect	cstackBANK0
  1328  0020                     __pcstackBANK0:
  1329  0020                     ??_myIsr:
  1330                           
  1331                           ; 1 bytes @ 0x0
  1332  0020                     	ds	10
  1333  002A                     ?_DIO_init:
  1334  002A                     ?_DIO_Write:	
  1335                           ; 1 bytes @ 0xA
  1336                           
  1337  002A                     ?_SSD_SetState:	
  1338                           ; 1 bytes @ 0xA
  1339                           
  1340  002A                     ??_CPU_SetSleep:	
  1341                           ; 1 bytes @ 0xA
  1342                           
  1343  002A                     ??_ExternInt_Enable:	
  1344                           ; 1 bytes @ 0xA
  1345                           
  1346  002A                     ?_pushButton_GetStatus:	
  1347                           ; 1 bytes @ 0xA
  1348                           
  1349  002A                     ??_Timer_Stop:	
  1350                           ; 1 bytes @ 0xA
  1351                           
  1352  002A                     ??_CPU_SleepUpdate:	
  1353                           ; 1 bytes @ 0xA
  1354                           
  1355  002A                     ?_ADC_init:	
  1356                           ; 1 bytes @ 0xA
  1357                           
  1358  002A                     ??_ADC_startConversion:	
  1359                           ; 1 bytes @ 0xA
  1360                           
  1361  002A                     ??_ADC_ReadResult:	
  1362                           ; 1 bytes @ 0xA
  1363                           
  1364  002A                     ?_DIO_Toggle:	
  1365                           ; 1 bytes @ 0xA
  1366                           
  1367  002A                     ?_DIO_PortWrite:	
  1368                           ; 1 bytes @ 0xA
  1369                           
  1370  002A                     ?_Display_SetData:	
  1371                           ; 1 bytes @ 0xA
  1372                           
  1373  002A                     ??_INT_SetEnable:	
  1374                           ; 1 bytes @ 0xA
  1375                           
  1376  002A                     ?_INT_SetCallBackFunc:	
  1377                           ; 1 bytes @ 0xA
  1378                           
  1379  002A                     ??_I2C_Master_Wait:	
  1380                           ; 1 bytes @ 0xA
  1381                           
  1382  002A                     ??_I2C_Master_Start:	
  1383                           ; 1 bytes @ 0xA
  1384                           
  1385  002A                     ??_I2C_Master_Stop:	
  1386                           ; 1 bytes @ 0xA
  1387                           
  1388  002A                     ??_I2C_Master_AckEN:	
  1389                           ; 1 bytes @ 0xA
  1390                           
  1391  002A                     ??_I2C_Master_Write:	
  1392                           ; 1 bytes @ 0xA
  1393                           
  1394  002A                     ??_I2C_Master_Read:	
  1395                           ; 1 bytes @ 0xA
  1396                           
  1397  002A                     ??_I2C_Master_EnableRead:	
  1398                           ; 1 bytes @ 0xA
  1399                           
  1400  002A                     ??_I2C_Master_WaitACK:	
  1401                           ; 1 bytes @ 0xA
  1402                           
  1403  002A                     ?___bmul:	
  1404                           ; 1 bytes @ 0xA
  1405                           
  1406  002A                     ?___lbdiv:	
  1407                           ; 1 bytes @ 0xA
  1408                           
  1409  002A                     ?__Umul8_16:	
  1410                           ; 1 bytes @ 0xA
  1411                           
  1412  002A                     ?___awdiv:	
  1413                           ; 2 bytes @ 0xA
  1414                           
  1415  002A                     ?___awmod:	
  1416                           ; 2 bytes @ 0xA
  1417                           
  1418  002A                     ?___lwdiv:	
  1419                           ; 2 bytes @ 0xA
  1420                           
  1421  002A                     ?___lldiv:	
  1422                           ; 2 bytes @ 0xA
  1423                           
  1424  002A                     ?___xxtofl:	
  1425                           ; 4 bytes @ 0xA
  1426                           
  1427  002A                     ADC_init@u8_ADC_adjustResult:	
  1428                           ; 4 bytes @ 0xA
  1429                           
  1430  002A                     ADC_startConversion@u8_channel:	
  1431                           ; 1 bytes @ 0xA
  1432                           
  1433  002A                     DIO_init@u8_pins:	
  1434                           ; 1 bytes @ 0xA
  1435                           
  1436  002A                     DIO_Write@u8_pins:	
  1437                           ; 1 bytes @ 0xA
  1438                           
  1439  002A                     DIO_Toggle@u8_pins:	
  1440                           ; 1 bytes @ 0xA
  1441                           
  1442  002A                     DIO_PortWrite@u8_value:	
  1443                           ; 1 bytes @ 0xA
  1444                           
  1445  002A                     Display_SetData@u8_DisplayMode:	
  1446                           ; 1 bytes @ 0xA
  1447                           
  1448  002A                     pushButton_GetStatus@pu8_BtnState:	
  1449                           ; 1 bytes @ 0xA
  1450                           
  1451  002A                     SSD_SetState@u8_SSD_State:	
  1452                           ; 1 bytes @ 0xA
  1453                           
  1454  002A                     CPU_SetSleep@u8_SleepMode:	
  1455                           ; 1 bytes @ 0xA
  1456                           
  1457  002A                     I2C_Master_AckEN@u8_ACK_State:	
  1458                           ; 1 bytes @ 0xA
  1459                           
  1460  002A                     I2C_Master_Write@u8_Data:	
  1461                           ; 1 bytes @ 0xA
  1462                           
  1463  002A                     I2C_Master_Read@pu8_Data:	
  1464                           ; 1 bytes @ 0xA
  1465                           
  1466  002A                     ___bmul@multiplicand:	
  1467                           ; 1 bytes @ 0xA
  1468                           
  1469  002A                     ___lbdiv@divisor:	
  1470                           ; 1 bytes @ 0xA
  1471                           
  1472  002A                     __Umul8_16@multiplicand:	
  1473                           ; 1 bytes @ 0xA
  1474                           
  1475  002A                     INT_SetCallBackFunc@pu8_Register:	
  1476                           ; 1 bytes @ 0xA
  1477                           
  1478  002A                     ___awdiv@divisor:	
  1479                           ; 2 bytes @ 0xA
  1480                           
  1481  002A                     ___awmod@divisor:	
  1482                           ; 2 bytes @ 0xA
  1483                           
  1484  002A                     ___lwdiv@divisor:	
  1485                           ; 2 bytes @ 0xA
  1486                           
  1487  002A                     ___lldiv@divisor:	
  1488                           ; 2 bytes @ 0xA
  1489                           
  1490  002A                     ___xxtofl@val:	
  1491                           ; 4 bytes @ 0xA
  1492                           
  1493                           
  1494                           ; 4 bytes @ 0xA
  1495  002A                     	ds	1
  1496  002B                     ??_SSD_SetState:
  1497  002B                     ?_EEPROM_Read:	
  1498                           ; 1 bytes @ 0xB
  1499                           
  1500  002B                     ?_EEPROM_Write:	
  1501                           ; 1 bytes @ 0xB
  1502                           
  1503  002B                     ??_pushButton_GetStatus:	
  1504                           ; 1 bytes @ 0xB
  1505                           
  1506  002B                     ??_DIO_Toggle:	
  1507                           ; 1 bytes @ 0xB
  1508                           
  1509  002B                     ??_DIO_PortWrite:	
  1510                           ; 1 bytes @ 0xB
  1511                           
  1512  002B                     ??_Display_SetData:	
  1513                           ; 1 bytes @ 0xB
  1514                           
  1515  002B                     ??___bmul:	
  1516                           ; 1 bytes @ 0xB
  1517                           
  1518  002B                     ??___lbdiv:	
  1519                           ; 1 bytes @ 0xB
  1520                           
  1521  002B                     ADC_init@u8_ADC_Mode:	
  1522                           ; 1 bytes @ 0xB
  1523                           
  1524  002B                     DIO_init@u8_direction:	
  1525                           ; 1 bytes @ 0xB
  1526                           
  1527  002B                     DIO_Write@u8_value:	
  1528                           ; 1 bytes @ 0xB
  1529                           
  1530  002B                     Display_SetData@u8_DisplayData:	
  1531                           ; 1 bytes @ 0xB
  1532                           
  1533  002B                     EEPROM_Write@u8_Data:	
  1534                           ; 1 bytes @ 0xB
  1535                           
  1536  002B                     EEPROM_Read@pu8_Data:	
  1537                           ; 1 bytes @ 0xB
  1538                           
  1539  002B                     ___bmul@product:	
  1540                           ; 1 bytes @ 0xB
  1541                           
  1542  002B                     ___lbdiv@dividend:	
  1543                           ; 1 bytes @ 0xB
  1544                           
  1545                           
  1546                           ; 1 bytes @ 0xB
  1547  002B                     	ds	1
  1548  002C                     ??_DIO_init:
  1549  002C                     ??_DIO_Write:	
  1550                           ; 1 bytes @ 0xC
  1551                           
  1552  002C                     ??_EEPROM_Read:	
  1553                           ; 1 bytes @ 0xC
  1554                           
  1555  002C                     ??_EEPROM_Write:	
  1556                           ; 1 bytes @ 0xC
  1557                           
  1558  002C                     ??__Umul8_16:	
  1559                           ; 1 bytes @ 0xC
  1560                           
  1561  002C                     ADC_init@u8_ADC_prescaler:	
  1562                           ; 1 bytes @ 0xC
  1563                           
  1564  002C                     ADC_ReadResult@ptru16_Result:	
  1565                           ; 1 bytes @ 0xC
  1566                           
  1567  002C                     INT_SetCallBackFunc@u8_MASK:	
  1568                           ; 1 bytes @ 0xC
  1569                           
  1570  002C                     SSD_SetState@u8_SSD_ID:	
  1571                           ; 1 bytes @ 0xC
  1572                           
  1573  002C                     Timer_Stop@u8_Timer_CH_NO:	
  1574                           ; 1 bytes @ 0xC
  1575                           
  1576  002C                     ExternInt_Enable@u8_ExternInt_Type:	
  1577                           ; 1 bytes @ 0xC
  1578                           
  1579  002C                     EEPROM_Write@u8_Address:	
  1580                           ; 1 bytes @ 0xC
  1581                           
  1582  002C                     EEPROM_Read@u8_Address:	
  1583                           ; 1 bytes @ 0xC
  1584                           
  1585  002C                     ___bmul@multiplier:	
  1586                           ; 1 bytes @ 0xC
  1587                           
  1588  002C                     ___lbdiv@counter:	
  1589                           ; 1 bytes @ 0xC
  1590                           
  1591  002C                     ___awdiv@dividend:	
  1592                           ; 1 bytes @ 0xC
  1593                           
  1594  002C                     ___awmod@dividend:	
  1595                           ; 2 bytes @ 0xC
  1596                           
  1597  002C                     ___lwdiv@dividend:	
  1598                           ; 2 bytes @ 0xC
  1599                           
  1600                           
  1601                           ; 2 bytes @ 0xC
  1602  002C                     	ds	1
  1603  002D                     ??_LM_Update:
  1604  002D                     ADC_init@ptrf_ADC_cbk:	
  1605                           ; 1 bytes @ 0xD
  1606                           
  1607  002D                     DIO_Toggle@u8_GPIO:	
  1608                           ; 1 bytes @ 0xD
  1609                           
  1610  002D                     DIO_PortWrite@u8_GPIO:	
  1611                           ; 1 bytes @ 0xD
  1612                           
  1613  002D                     INT_SetCallBackFunc@ptrf_CallBkFunc:	
  1614                           ; 1 bytes @ 0xD
  1615                           
  1616  002D                     pushButton_GetStatus@u8_BtnId:	
  1617                           ; 1 bytes @ 0xD
  1618                           
  1619  002D                     ___lbdiv@quotient:	
  1620                           ; 1 bytes @ 0xD
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0xD
  1624  002D                     	ds	1
  1625  002E                     ??_Led_Toggle:
  1626  002E                     ??_ADC_init:	
  1627                           ; 1 bytes @ 0xE
  1628                           
  1629  002E                     ?_DIO_Read:	
  1630                           ; 1 bytes @ 0xE
  1631                           
  1632  002E                     ??_INT_SetCallBackFunc:	
  1633                           ; 1 bytes @ 0xE
  1634                           
  1635  002E                     ??___awdiv:	
  1636                           ; 1 bytes @ 0xE
  1637                           
  1638  002E                     ??___awmod:	
  1639                           ; 1 bytes @ 0xE
  1640                           
  1641  002E                     ??___lwdiv:	
  1642                           ; 1 bytes @ 0xE
  1643                           
  1644  002E                     ??___xxtofl:	
  1645                           ; 1 bytes @ 0xE
  1646                           
  1647  002E                     DIO_init@u8_port:	
  1648                           ; 1 bytes @ 0xE
  1649                           
  1650  002E                     DIO_Write@u8_GPIO:	
  1651                           ; 1 bytes @ 0xE
  1652                           
  1653  002E                     DIO_Read@u8_pins:	
  1654                           ; 1 bytes @ 0xE
  1655                           
  1656  002E                     ___awdiv@counter:	
  1657                           ; 1 bytes @ 0xE
  1658                           
  1659  002E                     ___awmod@counter:	
  1660                           ; 1 bytes @ 0xE
  1661                           
  1662  002E                     ___lwdiv@counter:	
  1663                           ; 1 bytes @ 0xE
  1664                           
  1665  002E                     __Umul8_16@product:	
  1666                           ; 1 bytes @ 0xE
  1667                           
  1668  002E                     ___lldiv@dividend:	
  1669                           ; 2 bytes @ 0xE
  1670                           
  1671                           
  1672                           ; 4 bytes @ 0xE
  1673  002E                     	ds	1
  1674  002F                     ??_SSD_Init:
  1675  002F                     ??_SSD_TurnOff:	
  1676                           ; 1 bytes @ 0xF
  1677                           
  1678  002F                     ??_Led_On:	
  1679                           ; 1 bytes @ 0xF
  1680                           
  1681  002F                     ??_Led_Off:	
  1682                           ; 1 bytes @ 0xF
  1683                           
  1684  002F                     ??_pushButton_Init:	
  1685                           ; 1 bytes @ 0xF
  1686                           
  1687  002F                     ??_Led_Init:	
  1688                           ; 1 bytes @ 0xF
  1689                           
  1690  002F                     ??_SSD_Update:	
  1691                           ; 1 bytes @ 0xF
  1692                           
  1693  002F                     ??_Cooler_Init:	
  1694                           ; 1 bytes @ 0xF
  1695                           
  1696  002F                     ??_Cooler_Turn:	
  1697                           ; 1 bytes @ 0xF
  1698                           
  1699  002F                     ??_Heater_Init:	
  1700                           ; 1 bytes @ 0xF
  1701                           
  1702  002F                     ??_Heater_Turn:	
  1703                           ; 1 bytes @ 0xF
  1704                           
  1705  002F                     Cooler_Turn@u8_State:	
  1706                           ; 1 bytes @ 0xF
  1707                           
  1708  002F                     DIO_Read@pu8_data:	
  1709                           ; 1 bytes @ 0xF
  1710                           
  1711  002F                     Heater_Turn@u8_State:	
  1712                           ; 1 bytes @ 0xF
  1713                           
  1714  002F                     INT_SetCallBackFunc@u8_INT_Priority:	
  1715                           ; 1 bytes @ 0xF
  1716                           
  1717  002F                     ___awdiv@sign:	
  1718                           ; 1 bytes @ 0xF
  1719                           
  1720  002F                     ___awmod@sign:	
  1721                           ; 1 bytes @ 0xF
  1722                           
  1723  002F                     ___lwdiv@quotient:	
  1724                           ; 1 bytes @ 0xF
  1725                           
  1726                           
  1727                           ; 2 bytes @ 0xF
  1728  002F                     	ds	1
  1729  0030                     ??_ExternInt_Init:
  1730  0030                     ??_Timer_Init:	
  1731                           ; 1 bytes @ 0x10
  1732                           
  1733  0030                     ??_DIO_Read:	
  1734                           ; 1 bytes @ 0x10
  1735                           
  1736  0030                     ??_Heater_Cooler_action:	
  1737                           ; 1 bytes @ 0x10
  1738                           
  1739  0030                     ADC_init@u8_ADC_Channels_Config:	
  1740                           ; 1 bytes @ 0x10
  1741                           
  1742  0030                     Led_Toggle@u8_led_ID:	
  1743                           ; 1 bytes @ 0x10
  1744                           
  1745  0030                     ___awdiv@quotient:	
  1746                           ; 1 bytes @ 0x10
  1747                           
  1748  0030                     __Umul8_16@word_mpld:	
  1749                           ; 2 bytes @ 0x10
  1750                           
  1751                           
  1752                           ; 2 bytes @ 0x10
  1753  0030                     	ds	1
  1754  0031                     ??_TemperatureAVGReading_init:
  1755  0031                     ??_TemperatureAVGReading_Read:	
  1756                           ; 1 bytes @ 0x11
  1757                           
  1758  0031                     ??_LM_init:	
  1759                           ; 1 bytes @ 0x11
  1760                           
  1761  0031                     pushButton_Init@u8_PushbuttonID:	
  1762                           ; 1 bytes @ 0x11
  1763                           
  1764  0031                     SSD_Init@u8_SSD_ID:	
  1765                           ; 1 bytes @ 0x11
  1766                           
  1767  0031                     SSD_TurnOff@u8_SSD_ID:	
  1768                           ; 1 bytes @ 0x11
  1769                           
  1770  0031                     Led_Init@u8_LED_ID:	
  1771                           ; 1 bytes @ 0x11
  1772                           
  1773  0031                     Led_On@u8_led_ID:	
  1774                           ; 1 bytes @ 0x11
  1775                           
  1776  0031                     Led_Off@u8_led_ID:	
  1777                           ; 1 bytes @ 0x11
  1778                           
  1779                           
  1780                           ; 1 bytes @ 0x11
  1781  0031                     	ds	1
  1782  0032                     ?_SSD_SetValue:
  1783  0032                     ??_Display_Init:	
  1784                           ; 1 bytes @ 0x12
  1785                           
  1786  0032                     ??_Display_TurnOff:	
  1787                           ; 1 bytes @ 0x12
  1788                           
  1789  0032                     ??_LED_ACTION:	
  1790                           ; 1 bytes @ 0x12
  1791                           
  1792  0032                     ??___lldiv:	
  1793                           ; 1 bytes @ 0x12
  1794                           
  1795  0032                     DIO_Read@u8_GPIO:	
  1796                           ; 1 bytes @ 0x12
  1797                           
  1798  0032                     SSD_SetValue@u8_SSD_Data:	
  1799                           ; 1 bytes @ 0x12
  1800                           
  1801  0032                     Timer_Init@st_Timer_cfg:	
  1802                           ; 1 bytes @ 0x12
  1803                           
  1804  0032                     ExternInt_Init@pstr_ExternIntCfg:	
  1805                           ; 1 bytes @ 0x12
  1806                           
  1807  0032                     __Umul8_16@multiplier:	
  1808                           ; 1 bytes @ 0x12
  1809                           
  1810  0032                     ___xxtofl@sign:	
  1811                           ; 1 bytes @ 0x12
  1812                           
  1813                           
  1814                           ; 1 bytes @ 0x12
  1815  0032                     	ds	1
  1816  0033                     ??_SSD_SetValue:
  1817  0033                     ??_pushButton_Update:	
  1818                           ; 1 bytes @ 0x13
  1819                           
  1820  0033                     TemperatureAVGReading_Read@pu8_AVGtemperature:	
  1821                           ; 1 bytes @ 0x13
  1822                           
  1823  0033                     ___xxtofl@exp:	
  1824                           ; 1 bytes @ 0x13
  1825                           
  1826  0033                     ___lldiv@quotient:	
  1827                           ; 1 bytes @ 0x13
  1828                           
  1829                           
  1830                           ; 4 bytes @ 0x13
  1831  0033                     	ds	1
  1832  0034                     TemperatureAVGReading_Read@u16_CurrentAvgTemerature:
  1833  0034                     ___xxtofl@arg:	
  1834                           ; 2 bytes @ 0x14
  1835                           
  1836                           
  1837                           ; 4 bytes @ 0x14
  1838  0034                     	ds	1
  1839  0035                     pushButton_Update@counter:
  1840  0035                     SSD_SetValue@u8_SSD_ID:	
  1841                           ; 1 bytes @ 0x15
  1842                           
  1843                           
  1844                           ; 1 bytes @ 0x15
  1845  0035                     	ds	1
  1846  0036                     ??_Display_Update:
  1847  0036                     TemperatureAVGReading_Read@u8_LoopCounter:	
  1848                           ; 1 bytes @ 0x16
  1849                           
  1850                           
  1851                           ; 1 bytes @ 0x16
  1852  0036                     	ds	1
  1853  0037                     ___lldiv@counter:
  1854                           
  1855                           ; 1 bytes @ 0x17
  1856  0037                     	ds	1
  1857  0038                     ?_I2C_Master_Init:
  1858  0038                     ?___flmul:	
  1859                           ; 1 bytes @ 0x18
  1860                           
  1861  0038                     I2C_Master_Init@u32_Baudrate:	
  1862                           ; 4 bytes @ 0x18
  1863                           
  1864  0038                     ___flmul@b:	
  1865                           ; 4 bytes @ 0x18
  1866                           
  1867                           
  1868                           ; 4 bytes @ 0x18
  1869  0038                     	ds	4
  1870  003C                     ??_I2C_Master_Init:
  1871  003C                     ___flmul@a:	
  1872                           ; 1 bytes @ 0x1C
  1873                           
  1874                           
  1875                           ; 4 bytes @ 0x1C
  1876  003C                     	ds	4
  1877  0040                     ??___flmul:
  1878  0040                     I2C_Master_Init@u8_Mode:	
  1879                           ; 1 bytes @ 0x20
  1880                           
  1881                           
  1882                           ; 1 bytes @ 0x20
  1883  0040                     	ds	1
  1884  0041                     ??_EEPROM_Init:
  1885  0041                     ??_App_init:	
  1886                           ; 1 bytes @ 0x21
  1887                           
  1888  0041                     App_init@zft:	
  1889                           ; 1 bytes @ 0x21
  1890                           
  1891                           
  1892                           ; 3 bytes @ 0x21
  1893  0041                     	ds	3
  1894  0044                     App_init@temp:
  1895                           
  1896                           ; 1 bytes @ 0x24
  1897  0044                     	ds	1
  1898  0045                     ___flmul@sign:
  1899  0045                     App_init@MyTimer:	
  1900                           ; 1 bytes @ 0x25
  1901                           
  1902                           
  1903                           ; 5 bytes @ 0x25
  1904  0045                     	ds	1
  1905  0046                     ___flmul@aexp:
  1906                           
  1907                           ; 1 bytes @ 0x26
  1908  0046                     	ds	1
  1909  0047                     ___flmul@grs:
  1910                           
  1911                           ; 4 bytes @ 0x27
  1912  0047                     	ds	4
  1913  004B                     ___flmul@bexp:
  1914                           
  1915                           ; 1 bytes @ 0x2B
  1916  004B                     	ds	1
  1917  004C                     ___flmul@prod:
  1918                           
  1919                           ; 4 bytes @ 0x2C
  1920  004C                     	ds	4
  1921  0050                     ___flmul@temp:
  1922                           
  1923                           ; 2 bytes @ 0x30
  1924  0050                     	ds	2
  1925  0052                     ?___fldiv:
  1926  0052                     ___fldiv@a:	
  1927                           ; 4 bytes @ 0x32
  1928                           
  1929                           
  1930                           ; 4 bytes @ 0x32
  1931  0052                     	ds	4
  1932  0056                     ___fldiv@b:
  1933                           
  1934                           ; 4 bytes @ 0x36
  1935  0056                     	ds	4
  1936  005A                     ___fltol@sign1:
  1937                           
  1938                           ; 1 bytes @ 0x3A
  1939  005A                     	ds	1
  1940  005B                     ___fltol@exp1:
  1941                           
  1942                           ; 1 bytes @ 0x3B
  1943  005B                     	ds	1
  1944  005C                     ??_TemperatureAVGReading_Update:
  1945  005C                     ??_LM_Read:	
  1946                           ; 1 bytes @ 0x3C
  1947                           
  1948  005C                     ??_App_MainLoop:	
  1949                           ; 1 bytes @ 0x3C
  1950                           
  1951  005C                     ??_main:	
  1952                           ; 1 bytes @ 0x3C
  1953                           
  1954                           
  1955                           	psect	maintext
  1956  1B28                     __pmaintext:	
  1957                           ; 1 bytes @ 0x3C
  1958 ;;
  1959 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1960 ;;
  1961 ;; *************** function _main *****************
  1962 ;; Defined at:
  1963 ;;		line 11 in file "main.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : B00/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1977 ;;      Params:         0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels required when called:    8
  1983 ;; This function calls:
  1984 ;;		_App_MainLoop
  1985 ;;		_App_init
  1986 ;; This function is called by:
  1987 ;;		Startup code after reset
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _main
  1993  1B28                     _main:
  1994  1B28                     l8760:	
  1995                           ;incstack = 0
  1996                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1997                           
  1998                           
  1999                           ;main.c: 13:     App_init();
  2000  1B28  120A  158A  21C5  160A  158A  	fcall	_App_init
  2001                           
  2002                           ;main.c: 15:     App_MainLoop();
  2003  1B2D  160A  158A  25C0  160A  158A  	fcall	_App_MainLoop
  2004  1B32                     l711:
  2005  1B32  120A  118A  2812   	ljmp	start
  2006  1B35                     __end_of_main:
  2007                           
  2008                           	psect	text1
  2009  09C5                     __ptext1:	
  2010 ;; *************** function _App_init *****************
  2011 ;; Defined at:
  2012 ;;		line 160 in file "MainAppSW.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  MyTimer         5   37[BANK0 ] struct str_Timer_cfg_t
  2017 ;;  zft             3   33[BANK0 ] struct ExternInt_Cfg_s
  2018 ;;  temp            1   36[BANK0 ] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         0       9       0       0       0
  2030 ;;      Temps:          0       0       0       0       0
  2031 ;;      Totals:         0       9       0       0       0
  2032 ;;Total ram usage:        9 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    6
  2035 ;; This function calls:
  2036 ;;		_CPU_SetSleep
  2037 ;;		_Cooler_Init
  2038 ;;		_Display_Init
  2039 ;;		_EEPROM_Init
  2040 ;;		_EEPROM_Read
  2041 ;;		_EEPROM_Write
  2042 ;;		_ExternInt_Enable
  2043 ;;		_ExternInt_Init
  2044 ;;		_Heater_Init
  2045 ;;		_INT_SetEnable
  2046 ;;		_Led_Init
  2047 ;;		_TemperatureAVGReading_init
  2048 ;;		_Timer_Init
  2049 ;;		_pushButton_Init
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _App_init
  2057  09C5                     _App_init:
  2058  09C5                     l8690:	
  2059                           ;incstack = 0
  2060                           ; Regs used in _App_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2061                           
  2062                           
  2063                           ;MainAppSW.c: 162:     u8_WaterHeaterStatus=11;
  2064  09C5  300B               	movlw	11
  2065  09C6  00FF               	movwf	btemp+1
  2066  09C7  087F               	movf	btemp+1,w
  2067  09C8  00FB               	movwf	_u8_WaterHeaterStatus
  2068                           
  2069                           ;MainAppSW.c: 163:     u8_MainLoopStatus=16;
  2070  09C9  3010               	movlw	16
  2071  09CA  00FF               	movwf	btemp+1
  2072  09CB  087F               	movf	btemp+1,w
  2073  09CC  1283               	bcf	3,5	;RP0=0, select bank0
  2074  09CD  1303               	bcf	3,6	;RP1=0, select bank0
  2075  09CE  00E5               	movwf	_u8_MainLoopStatus
  2076  09CF                     l8692:
  2077                           
  2078                           ;MainAppSW.c: 166:     pushButton_Init(2);
  2079  09CF  3002               	movlw	2
  2080  09D0  160A  118A  241D  120A  158A  	fcall	_pushButton_Init
  2081  09D5                     l8694:
  2082                           
  2083                           ;MainAppSW.c: 167:     pushButton_Init(1);
  2084  09D5  3001               	movlw	1
  2085  09D6  160A  118A  241D  120A  158A  	fcall	_pushButton_Init
  2086  09DB                     l8696:
  2087                           
  2088                           ;MainAppSW.c: 169:     ExternInt_Cfg_s zft={
  2089  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  2090  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  2091  09DD  086B               	movf	App_init@F162^(0+128),w
  2092  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  2093  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  2094  09E0  00C1               	movwf	App_init@zft
  2095  09E1  1683               	bsf	3,5	;RP0=1, select bank1
  2096  09E2  1303               	bcf	3,6	;RP1=0, select bank1
  2097  09E3  086C               	movf	(App_init@F162+1)^(0+128),w
  2098  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  2099  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  2100  09E6  00C2               	movwf	App_init@zft+1
  2101  09E7  1683               	bsf	3,5	;RP0=1, select bank1
  2102  09E8  1303               	bcf	3,6	;RP1=0, select bank1
  2103  09E9  086D               	movf	(App_init@F162+2)^(0+128),w
  2104  09EA  1283               	bcf	3,5	;RP0=0, select bank0
  2105  09EB  1303               	bcf	3,6	;RP1=0, select bank0
  2106  09EC  00C3               	movwf	App_init@zft+2
  2107  09ED                     l8698:
  2108                           
  2109                           ;MainAppSW.c: 175:     ExternInt_Init(& zft);
  2110  09ED  3041               	movlw	(low (App_init@zft| 0))& (0+255)
  2111  09EE  160A  118A  2267  120A  158A  	fcall	_ExternInt_Init
  2112                           
  2113                           ;MainAppSW.c: 176:     ExternInt_Enable(0);
  2114  09F3  3000               	movlw	0
  2115  09F4  160A  158A  2472  120A  158A  	fcall	_ExternInt_Enable
  2116  09F9                     l8700:
  2117                           
  2118                           ;MainAppSW.c: 178:     TemperatureAVGReading_init();
  2119  09F9  160A  158A  22DF  120A  158A  	fcall	_TemperatureAVGReading_init
  2120  09FE                     l8702:
  2121                           
  2122                           ;MainAppSW.c: 180:     Display_Init();
  2123  09FE  160A  158A  242E  120A  158A  	fcall	_Display_Init
  2124  0A03                     l8704:
  2125                           
  2126                           ;MainAppSW.c: 182:     Cooler_Init();
  2127  0A03  160A  158A  2343  120A  158A  	fcall	_Cooler_Init
  2128  0A08                     l8706:
  2129                           
  2130                           ;MainAppSW.c: 183:     Heater_Init();
  2131  0A08  160A  158A  2351  120A  158A  	fcall	_Heater_Init
  2132  0A0D                     l8708:
  2133                           
  2134                           ;MainAppSW.c: 184:     Led_Init(0);
  2135  0A0D  3000               	movlw	0
  2136  0A0E  160A  118A  217A  120A  158A  	fcall	_Led_Init
  2137  0A13                     l8710:
  2138                           
  2139                           ;MainAppSW.c: 187:     str_Timer_cfg_t MyTimer={1,0,1,6,Timer_Callbk};
  2140  0A13  3045               	movlw	App_init@MyTimer& (0+255)
  2141  0A14  0084               	movwf	4
  2142  0A15  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0A16  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0A17  0866               	movf	App_init@F166^(0+128),w
  2145  0A18  1383               	bcf	3,7	;select IRP bank0
  2146  0A19  0080               	movwf	0
  2147  0A1A  0A84               	incf	4,f
  2148  0A1B  0867               	movf	(App_init@F166^(0+128)+1),w
  2149  0A1C  0080               	movwf	0
  2150  0A1D  0A84               	incf	4,f
  2151  0A1E  0868               	movf	(App_init@F166^(0+128)+2),w
  2152  0A1F  0080               	movwf	0
  2153  0A20  0A84               	incf	4,f
  2154  0A21  0869               	movf	(App_init@F166^(0+128)+3),w
  2155  0A22  0080               	movwf	0
  2156  0A23  0A84               	incf	4,f
  2157  0A24  086A               	movf	(App_init@F166^(0+128)+4),w
  2158  0A25  0080               	movwf	0
  2159  0A26                     l8712:
  2160                           
  2161                           ;MainAppSW.c: 188:     Timer_Init(&MyTimer);
  2162  0A26  3045               	movlw	(low (App_init@MyTimer| 0))& (0+255)
  2163  0A27  120A  158A  2637  120A  158A  	fcall	_Timer_Init
  2164  0A2C                     l8714:
  2165                           
  2166                           ;MainAppSW.c: 190:     u8_SetTemperature=60;
  2167  0A2C  303C               	movlw	60
  2168  0A2D  00FF               	movwf	btemp+1
  2169  0A2E  087F               	movf	btemp+1,w
  2170  0A2F  00FA               	movwf	_u8_SetTemperature
  2171  0A30                     l8716:
  2172                           
  2173                           ;MainAppSW.c: 191:     uint8 temp;;MainAppSW.c: 192:     EEPROM_Init();
  2174  0A30  160A  158A  23C1  120A  158A  	fcall	_EEPROM_Init
  2175  0A35                     l8718:
  2176                           
  2177                           ;MainAppSW.c: 193:     EEPROM_Read(0x00,& temp);
  2178  0A35  3044               	movlw	(low (App_init@temp| 0))& (0+255)
  2179  0A36  00FF               	movwf	btemp+1
  2180  0A37  087F               	movf	btemp+1,w
  2181  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0A3A  00AB               	movwf	EEPROM_Read@pu8_Data
  2184  0A3B  3000               	movlw	0
  2185  0A3C  160A  118A  2214  120A  158A  	fcall	_EEPROM_Read
  2186  0A41                     l8720:
  2187                           
  2188                           ;MainAppSW.c: 195:     if(temp != 0xAA)
  2189  0A41  30AA               	movlw	170
  2190  0A42  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0A43  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0A44  0644               	xorwf	App_init@temp,w
  2193  0A45  1903               	btfsc	3,2
  2194  0A46  2A48               	goto	u6571
  2195  0A47  2A49               	goto	u6570
  2196  0A48                     u6571:
  2197  0A48  2A60               	goto	l8724
  2198  0A49                     u6570:
  2199  0A49                     l8722:
  2200                           
  2201                           ;MainAppSW.c: 196:     {;MainAppSW.c: 197:         EEPROM_Write(0x00,0xAA);
  2202  0A49  30AA               	movlw	170
  2203  0A4A  00FF               	movwf	btemp+1
  2204  0A4B  087F               	movf	btemp+1,w
  2205  0A4C  00AB               	movwf	EEPROM_Write@u8_Data
  2206  0A4D  3000               	movlw	0
  2207  0A4E  160A  158A  24CB  120A  158A  	fcall	_EEPROM_Write
  2208                           
  2209                           ;MainAppSW.c: 198:         EEPROM_Write(0x01,60);
  2210  0A53  303C               	movlw	60
  2211  0A54  00FF               	movwf	btemp+1
  2212  0A55  087F               	movf	btemp+1,w
  2213  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0A58  00AB               	movwf	EEPROM_Write@u8_Data
  2216  0A59  3001               	movlw	1
  2217  0A5A  160A  158A  24CB  120A  158A  	fcall	_EEPROM_Write
  2218                           
  2219                           ;MainAppSW.c: 199:     }
  2220  0A5F  2A6A               	goto	l8726
  2221  0A60                     l8724:
  2222                           
  2223                           ;MainAppSW.c: 201:     {;MainAppSW.c: 202:         EEPROM_Read(0x01,&u8_SetTemperature);
  2224  0A60  307A               	movlw	(low (_u8_SetTemperature| 0))& (0+255)
  2225  0A61  00FF               	movwf	btemp+1
  2226  0A62  087F               	movf	btemp+1,w
  2227  0A63  00AB               	movwf	EEPROM_Read@pu8_Data
  2228  0A64  3001               	movlw	1
  2229  0A65  160A  118A  2214  120A  158A  	fcall	_EEPROM_Read
  2230  0A6A                     l8726:
  2231                           
  2232                           ;MainAppSW.c: 205:     INT_SetEnable();
  2233  0A6A  120A  158A  2001  120A  158A  	fcall	_INT_SetEnable
  2234  0A6F                     l8728:
  2235                           
  2236                           ;MainAppSW.c: 208:     CPU_SetSleep(20);
  2237  0A6F  3014               	movlw	20
  2238  0A70  160A  158A  22F4  120A  158A  	fcall	_CPU_SetSleep
  2239  0A75                     l353:
  2240  0A75  0008               	return
  2241  0A76                     __end_of_App_init:
  2242                           
  2243                           	psect	text2
  2244  141D                     __ptext2:	
  2245 ;; *************** function _pushButton_Init *****************
  2246 ;; Defined at:
  2247 ;;		line 70 in file "PushButton.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  u8_Pushbutto    1    wreg     unsigned char 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  u8_Pushbutto    1   17[BANK0 ] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         0       0       0       0       0
  2262 ;;      Locals:         0       1       0       0       0
  2263 ;;      Temps:          0       2       0       0       0
  2264 ;;      Totals:         0       3       0       0       0
  2265 ;;Total ram usage:        3 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    4
  2268 ;; This function calls:
  2269 ;;		_DIO_init
  2270 ;; This function is called by:
  2271 ;;		_App_init
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _pushButton_Init
  2277  141D                     _pushButton_Init:
  2278                           
  2279                           ;incstack = 0
  2280                           ; Regs used in _pushButton_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2281                           ;pushButton_Init@u8_PushbuttonID stored from wreg
  2282  141D  1283               	bcf	3,5	;RP0=0, select bank0
  2283  141E  1303               	bcf	3,6	;RP1=0, select bank0
  2284  141F  00B1               	movwf	pushButton_Init@u8_PushbuttonID
  2285  1420                     l8224:
  2286                           
  2287                           ;PushButton.c: 71:     u8_PB_TickCounter = 0;
  2288  1420  01DD               	clrf	_u8_PB_TickCounter
  2289                           
  2290                           ;PushButton.c: 72:  switch(u8_PushbuttonID){
  2291  1421  2C68               	goto	l8244
  2292  1422                     l8226:
  2293                           
  2294                           ;PushButton.c: 74:             DIO_init(1,0x01,0xFF);
  2295  1422  01AA               	clrf	DIO_init@u8_pins
  2296  1423  0AAA               	incf	DIO_init@u8_pins,f
  2297  1424  30FF               	movlw	255
  2298  1425  00FF               	movwf	btemp+1
  2299  1426  087F               	movf	btemp+1,w
  2300  1427  00AB               	movwf	DIO_init@u8_direction
  2301  1428  3001               	movlw	1
  2302  1429  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  2303  142E                     l8228:
  2304                           
  2305                           ;PushButton.c: 75:    STA_buttons[0].buttonInit=Init;
  2306  142E  1683               	bsf	3,5	;RP0=1, select bank3
  2307  142F  1703               	bsf	3,6	;RP1=1, select bank3
  2308  1430  01BB               	clrf	(_STA_buttons^(0+384)+3)
  2309                           
  2310                           ;PushButton.c: 76:    break;
  2311  1431  2C7E               	goto	l396
  2312  1432                     l8230:
  2313                           
  2314                           ;PushButton.c: 78:    DIO_init(1,0x02,0xFF);
  2315  1432  3002               	movlw	2
  2316  1433  00FF               	movwf	btemp+1
  2317  1434  087F               	movf	btemp+1,w
  2318  1435  00AA               	movwf	DIO_init@u8_pins
  2319  1436  30FF               	movlw	255
  2320  1437  00FF               	movwf	btemp+1
  2321  1438  087F               	movf	btemp+1,w
  2322  1439  00AB               	movwf	DIO_init@u8_direction
  2323  143A  3001               	movlw	1
  2324  143B  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  2325  1440                     l8232:
  2326                           
  2327                           ;PushButton.c: 79:    STA_buttons[1].buttonInit=Init;
  2328  1440  1683               	bsf	3,5	;RP0=1, select bank3
  2329  1441  1703               	bsf	3,6	;RP1=1, select bank3
  2330  1442  01C1               	clrf	(_STA_buttons^(0+384)+9)
  2331                           
  2332                           ;PushButton.c: 80:    break;
  2333  1443  2C7E               	goto	l396
  2334  1444                     l8234:
  2335                           
  2336                           ;PushButton.c: 82:    DIO_init(1,0x04,0xFF);
  2337  1444  3004               	movlw	4
  2338  1445  00FF               	movwf	btemp+1
  2339  1446  087F               	movf	btemp+1,w
  2340  1447  00AA               	movwf	DIO_init@u8_pins
  2341  1448  30FF               	movlw	255
  2342  1449  00FF               	movwf	btemp+1
  2343  144A  087F               	movf	btemp+1,w
  2344  144B  00AB               	movwf	DIO_init@u8_direction
  2345  144C  3001               	movlw	1
  2346  144D  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  2347  1452                     l8236:
  2348                           
  2349                           ;PushButton.c: 83:             STA_buttons[2].buttonInit=Init;
  2350  1452  1683               	bsf	3,5	;RP0=1, select bank3
  2351  1453  1703               	bsf	3,6	;RP1=1, select bank3
  2352  1454  01C7               	clrf	(_STA_buttons^(0+384)+15)
  2353                           
  2354                           ;PushButton.c: 84:    break;
  2355  1455  2C7E               	goto	l396
  2356  1456                     l8238:
  2357                           
  2358                           ;PushButton.c: 86:    DIO_init(0,0x08,0xFF);
  2359  1456  3008               	movlw	8
  2360  1457  00FF               	movwf	btemp+1
  2361  1458  087F               	movf	btemp+1,w
  2362  1459  00AA               	movwf	DIO_init@u8_pins
  2363  145A  30FF               	movlw	255
  2364  145B  00FF               	movwf	btemp+1
  2365  145C  087F               	movf	btemp+1,w
  2366  145D  00AB               	movwf	DIO_init@u8_direction
  2367  145E  3000               	movlw	0
  2368  145F  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  2369  1464                     l8240:
  2370                           
  2371                           ;PushButton.c: 87:    STA_buttons[3].buttonInit=Init;
  2372  1464  1683               	bsf	3,5	;RP0=1, select bank3
  2373  1465  1703               	bsf	3,6	;RP1=1, select bank3
  2374  1466  01CD               	clrf	(_STA_buttons^(0+384)+21)
  2375                           
  2376                           ;PushButton.c: 88:    break;
  2377  1467  2C7E               	goto	l396
  2378  1468                     l8244:
  2379  1468  0831               	movf	pushButton_Init@u8_PushbuttonID,w
  2380  1469  00AF               	movwf	??_pushButton_Init
  2381  146A  01B0               	clrf	??_pushButton_Init+1
  2382                           
  2383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2384                           ; Switch size 1, requested type "simple"
  2385                           ; Number of cases is 1, Range of values is 0 to 0
  2386                           ; switch strategies available:
  2387                           ; Name         Instructions Cycles
  2388                           ; simple_byte            4     3 (average)
  2389                           ; direct_byte           11     8 (fixed)
  2390                           ; jumptable            260     6 (fixed)
  2391                           ;	Chosen strategy is simple_byte
  2392  146B  0830               	movf	??_pushButton_Init+1,w
  2393  146C  3A00               	xorlw	0	; case 0
  2394  146D  1903               	skipnz
  2395  146E  2C70               	goto	l9790
  2396  146F  2C7E               	goto	l396
  2397  1470                     l9790:
  2398                           
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 4, Range of values is 0 to 3
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte           13     7 (average)
  2404                           ; direct_byte           20     8 (fixed)
  2405                           ; jumptable            260     6 (fixed)
  2406                           ;	Chosen strategy is simple_byte
  2407  1470  082F               	movf	??_pushButton_Init,w
  2408  1471  3A00               	xorlw	0	; case 0
  2409  1472  1903               	skipnz
  2410  1473  2C22               	goto	l8226
  2411  1474  3A01               	xorlw	1	; case 1
  2412  1475  1903               	skipnz
  2413  1476  2C32               	goto	l8230
  2414  1477  3A03               	xorlw	3	; case 2
  2415  1478  1903               	skipnz
  2416  1479  2C44               	goto	l8234
  2417  147A  3A01               	xorlw	1	; case 3
  2418  147B  1903               	skipnz
  2419  147C  2C56               	goto	l8238
  2420  147D  2C7E               	goto	l396
  2421  147E                     l396:
  2422  147E  0008               	return
  2423  147F                     __end_of_pushButton_Init:
  2424                           
  2425                           	psect	text3
  2426  0E37                     __ptext3:	
  2427 ;; *************** function _Timer_Init *****************
  2428 ;; Defined at:
  2429 ;;		line 100 in file "TIMER.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  st_Timer_cfg    1    wreg     PTR struct str_Timer_cfg
  2432 ;;		 -> App_init@MyTimer(5), 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  st_Timer_cfg    1   18[BANK0 ] PTR struct str_Timer_cfg
  2435 ;;		 -> App_init@MyTimer(5), 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       0       0       0       0
  2446 ;;      Locals:         0       1       0       0       0
  2447 ;;      Temps:          0       2       0       0       0
  2448 ;;      Totals:         0       3       0       0       0
  2449 ;;Total ram usage:        3 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    4
  2452 ;; This function calls:
  2453 ;;		_INT_SetCallBackFunc
  2454 ;; This function is called by:
  2455 ;;		_App_init
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function _Timer_Init
  2461  0E37                     _Timer_Init:
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _Timer_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2465                           ;Timer_Init@st_Timer_cfg stored from wreg
  2466  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0E39  00B2               	movwf	Timer_Init@st_Timer_cfg
  2469  0E3A                     l8312:
  2470                           
  2471                           ;TIMER.c: 100: void Timer_Init(str_Timer_cfg_t* st_Timer_cfg);TIMER.c: 101: {;TIMER.c: 1
      +                          02:  switch(st_Timer_cfg->Timer_CH_NO)
  2472  0E3A  2FE9               	goto	l8402
  2473  0E3B                     l533:	
  2474                           ;TIMER.c: 106:    {;TIMER.c: 107:     case(0) :
  2475                           
  2476                           
  2477                           ;TIMER.c: 110:                     (OPTION_REG)|=(0x20);
  2478  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0E3D  1681               	bsf	1,5	;volatile
  2481  0E3E                     l8314:
  2482                           
  2483                           ;TIMER.c: 113:      if(st_Timer_cfg->Timer_Prescaler == 1)
  2484  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0E40  0832               	movf	Timer_Init@st_Timer_cfg,w
  2487  0E41  3E03               	addlw	3
  2488  0E42  0084               	movwf	4
  2489  0E43  0300               	decf	0,w
  2490  0E44  1D03               	btfss	3,2
  2491  0E45  2E47               	goto	u6311
  2492  0E46  2E48               	goto	u6310
  2493  0E47                     u6311:
  2494  0E47  2E4C               	goto	l8318
  2495  0E48                     u6310:
  2496  0E48                     l8316:
  2497                           
  2498                           ;TIMER.c: 114:                     {;TIMER.c: 116:                         (OPTION_REG)|
      +                          =(0x08);
  2499  0E48  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0E49  1303               	bcf	3,6	;RP1=0, select bank1
  2501  0E4A  1581               	bsf	1,3	;volatile
  2502                           
  2503                           ;TIMER.c: 117:                     }
  2504  0E4B  2ECB               	goto	l8348
  2505  0E4C                     l8318:
  2506                           
  2507                           ;TIMER.c: 119:                     {;TIMER.c: 121:                         (OPTION_REG)&
      +                          =~(0x08);
  2508  0E4C  30F7               	movlw	247
  2509  0E4D  00FF               	movwf	btemp+1
  2510  0E4E  087F               	movf	btemp+1,w
  2511  0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0E50  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0E51  0581               	andwf	1,f	;volatile
  2514  0E52                     l8320:
  2515                           
  2516                           ;TIMER.c: 124:                         (OPTION_REG)|=(au8_Timer0_PrescalerTable[st_Timer
      +                          _cfg->Timer_Prescaler]) ;
  2517  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0E54  0832               	movf	Timer_Init@st_Timer_cfg,w
  2520  0E55  3E03               	addlw	3
  2521  0E56  0084               	movwf	4
  2522  0E57  0800               	movf	0,w
  2523  0E58  3EAE               	addlw	(low (_au8_Timer0_PrescalerTable| (0+256)))& (0+255)
  2524  0E59  0084               	movwf	4
  2525  0E5A  1783               	bsf	3,7	;select IRP bank3
  2526  0E5B  0800               	movf	0,w
  2527  0E5C  00FF               	movwf	btemp+1
  2528  0E5D  087F               	movf	btemp+1,w
  2529  0E5E  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0E5F  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0E60  0481               	iorwf	1,f	;volatile
  2532  0E61  2ECB               	goto	l8348
  2533  0E62                     l537:	
  2534                           ;TIMER.c: 128:     case (1):
  2535                           
  2536                           
  2537                           ;TIMER.c: 130:      (OPTION_REG)|=(0x20);
  2538  0E62  1683               	bsf	3,5	;RP0=1, select bank1
  2539  0E63  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0E64  1681               	bsf	1,5	;volatile
  2541  0E65                     l8322:
  2542                           
  2543                           ;TIMER.c: 133:                     (OPTION_REG)&=~(0x10);
  2544  0E65  30EF               	movlw	239
  2545  0E66  00FF               	movwf	btemp+1
  2546  0E67  087F               	movf	btemp+1,w
  2547  0E68  0581               	andwf	1,f	;volatile
  2548  0E69                     l8324:
  2549                           
  2550                           ;TIMER.c: 135:      if(st_Timer_cfg->Timer_Prescaler == 1)
  2551  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0E6B  0832               	movf	Timer_Init@st_Timer_cfg,w
  2554  0E6C  3E03               	addlw	3
  2555  0E6D  0084               	movwf	4
  2556  0E6E  0300               	decf	0,w
  2557  0E6F  1D03               	btfss	3,2
  2558  0E70  2E72               	goto	u6321
  2559  0E71  2E73               	goto	u6320
  2560  0E72                     u6321:
  2561  0E72  2E74               	goto	l8328
  2562  0E73                     u6320:
  2563  0E73  2E48               	goto	l8316
  2564  0E74                     l8328:
  2565                           
  2566                           ;TIMER.c: 141:                     {;TIMER.c: 143:                         (OPTION_REG)&
      +                          =~(0x08);
  2567  0E74  30F7               	movlw	247
  2568  0E75  00FF               	movwf	btemp+1
  2569  0E76  087F               	movf	btemp+1,w
  2570  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  2571  0E78  1303               	bcf	3,6	;RP1=0, select bank1
  2572  0E79  0581               	andwf	1,f	;volatile
  2573  0E7A                     l8330:
  2574                           
  2575                           ;TIMER.c: 146:                         (OPTION_REG)|=(au8_Timer0_PrescalerTable[st_Timer
      +                          _cfg->Timer_Prescaler]) ;
  2576  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0E7C  0832               	movf	Timer_Init@st_Timer_cfg,w
  2579  0E7D  3E03               	addlw	3
  2580  0E7E  0084               	movwf	4
  2581  0E7F  0800               	movf	0,w
  2582  0E80  3EAE               	addlw	(low (_au8_Timer0_PrescalerTable| (0+256)))& (0+255)
  2583  0E81  0084               	movwf	4
  2584  0E82  1783               	bsf	3,7	;select IRP bank3
  2585  0E83  0800               	movf	0,w
  2586  0E84  00FF               	movwf	btemp+1
  2587  0E85  087F               	movf	btemp+1,w
  2588  0E86  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0E87  1303               	bcf	3,6	;RP1=0, select bank1
  2590  0E88  0481               	iorwf	1,f	;volatile
  2591  0E89  2ECB               	goto	l8348
  2592  0E8A                     l540:	
  2593                           ;TIMER.c: 150:     case (2):
  2594                           
  2595                           
  2596                           ;TIMER.c: 152:      (OPTION_REG)|=(0x20);
  2597  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0E8C  1681               	bsf	1,5	;volatile
  2600                           
  2601                           ;TIMER.c: 155:                     (OPTION_REG)|=(0x10);
  2602  0E8D  1601               	bsf	1,4	;volatile
  2603  0E8E                     l8332:
  2604                           
  2605                           ;TIMER.c: 157:      if(st_Timer_cfg->Timer_Prescaler == 1)
  2606  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0E90  0832               	movf	Timer_Init@st_Timer_cfg,w
  2609  0E91  3E03               	addlw	3
  2610  0E92  0084               	movwf	4
  2611  0E93  0300               	decf	0,w
  2612  0E94  1D03               	btfss	3,2
  2613  0E95  2E97               	goto	u6331
  2614  0E96  2E98               	goto	u6330
  2615  0E97                     u6331:
  2616  0E97  2E99               	goto	l8336
  2617  0E98                     u6330:
  2618  0E98  2E48               	goto	l8316
  2619  0E99                     l8336:
  2620                           
  2621                           ;TIMER.c: 163:                     {;TIMER.c: 165:                         (OPTION_REG)&
      +                          =~(0x08);
  2622  0E99  30F7               	movlw	247
  2623  0E9A  00FF               	movwf	btemp+1
  2624  0E9B  087F               	movf	btemp+1,w
  2625  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0E9D  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0E9E  0581               	andwf	1,f	;volatile
  2628  0E9F                     l8338:
  2629                           
  2630                           ;TIMER.c: 168:                         (OPTION_REG)|=(au8_Timer0_PrescalerTable[st_Timer
      +                          _cfg->Timer_Prescaler]) ;
  2631  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0EA1  0832               	movf	Timer_Init@st_Timer_cfg,w
  2634  0EA2  3E03               	addlw	3
  2635  0EA3  0084               	movwf	4
  2636  0EA4  0800               	movf	0,w
  2637  0EA5  3EAE               	addlw	(low (_au8_Timer0_PrescalerTable| (0+256)))& (0+255)
  2638  0EA6  0084               	movwf	4
  2639  0EA7  1783               	bsf	3,7	;select IRP bank3
  2640  0EA8  0800               	movf	0,w
  2641  0EA9  00FF               	movwf	btemp+1
  2642  0EAA  087F               	movf	btemp+1,w
  2643  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0EAD  0481               	iorwf	1,f	;volatile
  2646  0EAE  2ECB               	goto	l8348
  2647  0EAF                     l8342:
  2648  0EAF  0A32               	incf	Timer_Init@st_Timer_cfg,w
  2649  0EB0  0084               	movwf	4
  2650  0EB1  0800               	movf	0,w
  2651  0EB2  00B0               	movwf	??_Timer_Init
  2652  0EB3  01B1               	clrf	??_Timer_Init+1
  2653                           
  2654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2655                           ; Switch size 1, requested type "simple"
  2656                           ; Number of cases is 1, Range of values is 0 to 0
  2657                           ; switch strategies available:
  2658                           ; Name         Instructions Cycles
  2659                           ; simple_byte            4     3 (average)
  2660                           ; direct_byte           11     8 (fixed)
  2661                           ; jumptable            260     6 (fixed)
  2662                           ;	Chosen strategy is simple_byte
  2663  0EB4  0831               	movf	??_Timer_Init+1,w
  2664  0EB5  3A00               	xorlw	0	; case 0
  2665  0EB6  1903               	skipnz
  2666  0EB7  2EB9               	goto	l9792
  2667  0EB8  2ECB               	goto	l8348
  2668  0EB9                     l9792:
  2669                           
  2670                           ; Switch size 1, requested type "simple"
  2671                           ; Number of cases is 3, Range of values is 0 to 2
  2672                           ; switch strategies available:
  2673                           ; Name         Instructions Cycles
  2674                           ; simple_byte           10     6 (average)
  2675                           ; direct_byte           17     8 (fixed)
  2676                           ; jumptable            260     6 (fixed)
  2677                           ;	Chosen strategy is simple_byte
  2678  0EB9  0830               	movf	??_Timer_Init,w
  2679  0EBA  3A00               	xorlw	0	; case 0
  2680  0EBB  1903               	skipnz
  2681  0EBC  2E3B               	goto	l533
  2682  0EBD  3A01               	xorlw	1	; case 1
  2683  0EBE  1903               	skipnz
  2684  0EBF  2E62               	goto	l537
  2685  0EC0  3A03               	xorlw	3	; case 2
  2686  0EC1  1903               	skipnz
  2687  0EC2  2E8A               	goto	l540
  2688  0EC3  2ECB               	goto	l8348
  2689  0EC4                     l545:	
  2690                           ;TIMER.c: 175:    {;TIMER.c: 176:     case(1) :
  2691                           
  2692                           
  2693                           ;TIMER.c: 177:                     (INTCON)|=(0x20);
  2694  0EC4  168B               	bsf	11,5	;volatile
  2695                           
  2696                           ;TIMER.c: 183:      break;
  2697  0EC5  2EE0               	goto	l8350
  2698  0EC6                     l8344:
  2699                           
  2700                           ;TIMER.c: 185:      (INTCON)&=~(0x20);
  2701  0EC6  30DF               	movlw	223
  2702  0EC7  00FF               	movwf	btemp+1
  2703  0EC8  087F               	movf	btemp+1,w
  2704  0EC9  058B               	andwf	11,f	;volatile
  2705                           
  2706                           ;TIMER.c: 186:      break;
  2707  0ECA  2EE0               	goto	l8350
  2708  0ECB                     l8348:
  2709  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0ECC  0832               	movf	Timer_Init@st_Timer_cfg,w
  2711  0ECD  3E02               	addlw	2
  2712  0ECE  0084               	movwf	4
  2713  0ECF  1383               	bcf	3,7	;select IRP bank0
  2714  0ED0  0800               	movf	0,w
  2715  0ED1  00B0               	movwf	??_Timer_Init
  2716  0ED2  01B1               	clrf	??_Timer_Init+1
  2717                           
  2718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2719                           ; Switch size 1, requested type "simple"
  2720                           ; Number of cases is 1, Range of values is 0 to 0
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ; direct_byte           11     8 (fixed)
  2725                           ; jumptable            260     6 (fixed)
  2726                           ;	Chosen strategy is simple_byte
  2727  0ED3  0831               	movf	??_Timer_Init+1,w
  2728  0ED4  3A00               	xorlw	0	; case 0
  2729  0ED5  1903               	skipnz
  2730  0ED6  2ED8               	goto	l9794
  2731  0ED7  2EE0               	goto	l8350
  2732  0ED8                     l9794:
  2733                           
  2734                           ; Switch size 1, requested type "simple"
  2735                           ; Number of cases is 2, Range of values is 0 to 1
  2736                           ; switch strategies available:
  2737                           ; Name         Instructions Cycles
  2738                           ; simple_byte            7     4 (average)
  2739                           ; direct_byte           14     8 (fixed)
  2740                           ; jumptable            260     6 (fixed)
  2741                           ;	Chosen strategy is simple_byte
  2742  0ED8  0830               	movf	??_Timer_Init,w
  2743  0ED9  3A00               	xorlw	0	; case 0
  2744  0EDA  1903               	skipnz
  2745  0EDB  2EC6               	goto	l8344
  2746  0EDC  3A01               	xorlw	1	; case 1
  2747  0EDD  1903               	skipnz
  2748  0EDE  2EC4               	goto	l545
  2749  0EDF  2EE0               	goto	l8350
  2750  0EE0                     l8350:
  2751                           
  2752                           ;TIMER.c: 191:    au8_PrescalerValue[0]=au8_PrescalerValueTable[st_Timer_cfg->Timer_Pres
      +                          caler];
  2753  0EE0  0832               	movf	Timer_Init@st_Timer_cfg,w
  2754  0EE1  3E03               	addlw	3
  2755  0EE2  0084               	movwf	4
  2756  0EE3  0800               	movf	0,w
  2757  0EE4  00B0               	movwf	??_Timer_Init
  2758  0EE5  0730               	addwf	??_Timer_Init,w
  2759  0EE6  3E90               	addlw	(low (_au8_PrescalerValueTable| (0+256)))& (0+255)
  2760  0EE7  0084               	movwf	4
  2761  0EE8  1783               	bsf	3,7	;select IRP bank3
  2762  0EE9  0800               	movf	0,w
  2763  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0EEC  00B0               	movwf	_au8_PrescalerValue^(0+128)
  2766  0EED  0A84               	incf	4,f
  2767  0EEE  0800               	movf	0,w
  2768  0EEF  00B1               	movwf	(_au8_PrescalerValue+1)^(0+128)
  2769                           
  2770                           ;TIMER.c: 192:    break;
  2771  0EF0  2FFF               	goto	l584
  2772  0EF1                     l555:	
  2773                           ;TIMER.c: 201:     case (2):
  2774                           
  2775                           
  2776                           ;TIMER.c: 203:                     (T1CON)|=(0x02);
  2777  0EF1  1490               	bsf	16,1	;volatile
  2778                           
  2779                           ;TIMER.c: 204:      break;
  2780  0EF2  2F30               	goto	l8364
  2781  0EF3                     l8354:
  2782  0EF3  0A32               	incf	Timer_Init@st_Timer_cfg,w
  2783  0EF4  0084               	movwf	4
  2784  0EF5  0800               	movf	0,w
  2785  0EF6  00B0               	movwf	??_Timer_Init
  2786  0EF7  01B1               	clrf	??_Timer_Init+1
  2787                           
  2788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2789                           ; Switch size 1, requested type "simple"
  2790                           ; Number of cases is 1, Range of values is 0 to 0
  2791                           ; switch strategies available:
  2792                           ; Name         Instructions Cycles
  2793                           ; simple_byte            4     3 (average)
  2794                           ; direct_byte           11     8 (fixed)
  2795                           ; jumptable            260     6 (fixed)
  2796                           ;	Chosen strategy is simple_byte
  2797  0EF8  0831               	movf	??_Timer_Init+1,w
  2798  0EF9  3A00               	xorlw	0	; case 0
  2799  0EFA  1903               	skipnz
  2800  0EFB  2EFD               	goto	l9796
  2801  0EFC  2F30               	goto	l8364
  2802  0EFD                     l9796:
  2803                           
  2804                           ; Switch size 1, requested type "simple"
  2805                           ; Number of cases is 3, Range of values is 0 to 2
  2806                           ; switch strategies available:
  2807                           ; Name         Instructions Cycles
  2808                           ; simple_byte           10     6 (average)
  2809                           ; direct_byte           17     8 (fixed)
  2810                           ; jumptable            260     6 (fixed)
  2811                           ;	Chosen strategy is simple_byte
  2812  0EFD  0830               	movf	??_Timer_Init,w
  2813  0EFE  3A00               	xorlw	0	; case 0
  2814  0EFF  1903               	skipnz
  2815  0F00  2F30               	goto	l8364
  2816  0F01  3A01               	xorlw	1	; case 1
  2817  0F02  1903               	skipnz
  2818  0F03  2EF1               	goto	l555
  2819  0F04  3A03               	xorlw	3	; case 2
  2820  0F05  1903               	skipnz
  2821  0F06  2EF1               	goto	l555
  2822  0F07  2F30               	goto	l8364
  2823  0F08                     l558:	
  2824                           ;TIMER.c: 211:             {;TIMER.c: 212:                 case 1:
  2825                           
  2826                           
  2827                           ;TIMER.c: 213:                     (PIE1)|=(0x01);
  2828  0F08  1683               	bsf	3,5	;RP0=1, select bank1
  2829  0F09  1303               	bcf	3,6	;RP1=0, select bank1
  2830  0F0A  140C               	bsf	12,0	;volatile
  2831  0F0B                     l8356:
  2832                           
  2833                           ;TIMER.c: 214:                     if(((void *)0) != st_Timer_cfg->aptrf_INT)
  2834  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0F0D  0832               	movf	Timer_Init@st_Timer_cfg,w
  2837  0F0E  3E04               	addlw	4
  2838  0F0F  0084               	movwf	4
  2839  0F10  0800               	movf	0,w
  2840  0F11  1903               	btfsc	3,2
  2841  0F12  2F14               	goto	u6341
  2842  0F13  2F15               	goto	u6340
  2843  0F14                     u6341:
  2844  0F14  2F43               	goto	l8366
  2845  0F15                     u6340:
  2846  0F15                     l8358:
  2847                           
  2848                           ;TIMER.c: 215:                     {;TIMER.c: 217:                         INT_SetCallBa
      +                          ckFunc(1,&PIR1,0x01,st_Timer_cfg->aptrf_INT );
  2849  0F15  300C               	movlw	12
  2850  0F16  00AA               	movwf	INT_SetCallBackFunc@pu8_Register
  2851  0F17  3000               	movlw	0
  2852  0F18  00AB               	movwf	INT_SetCallBackFunc@pu8_Register+1
  2853  0F19  01AC               	clrf	INT_SetCallBackFunc@u8_MASK
  2854  0F1A  0AAC               	incf	INT_SetCallBackFunc@u8_MASK,f
  2855  0F1B  0832               	movf	Timer_Init@st_Timer_cfg,w
  2856  0F1C  3E04               	addlw	4
  2857  0F1D  0084               	movwf	4
  2858  0F1E  0800               	movf	0,w
  2859  0F1F  00FF               	movwf	btemp+1
  2860  0F20  087F               	movf	btemp+1,w
  2861  0F21  00AD               	movwf	INT_SetCallBackFunc@ptrf_CallBkFunc
  2862  0F22  3001               	movlw	1
  2863  0F23  160A  158A  273F  120A  158A  	fcall	_INT_SetCallBackFunc
  2864  0F28  2F43               	goto	l8366
  2865  0F29                     l8360:
  2866                           
  2867                           ;TIMER.c: 222:                     (PIE1)&=~(0x01);
  2868  0F29  30FE               	movlw	254
  2869  0F2A  00FF               	movwf	btemp+1
  2870  0F2B  087F               	movf	btemp+1,w
  2871  0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  2872  0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  2873  0F2E  058C               	andwf	12,f	;volatile
  2874                           
  2875                           ;TIMER.c: 223:                     break;
  2876  0F2F  2F43               	goto	l8366
  2877  0F30                     l8364:
  2878  0F30  0832               	movf	Timer_Init@st_Timer_cfg,w
  2879  0F31  3E02               	addlw	2
  2880  0F32  0084               	movwf	4
  2881  0F33  0800               	movf	0,w
  2882  0F34  00B0               	movwf	??_Timer_Init
  2883  0F35  01B1               	clrf	??_Timer_Init+1
  2884                           
  2885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2886                           ; Switch size 1, requested type "simple"
  2887                           ; Number of cases is 1, Range of values is 0 to 0
  2888                           ; switch strategies available:
  2889                           ; Name         Instructions Cycles
  2890                           ; simple_byte            4     3 (average)
  2891                           ; direct_byte           11     8 (fixed)
  2892                           ; jumptable            260     6 (fixed)
  2893                           ;	Chosen strategy is simple_byte
  2894  0F36  0831               	movf	??_Timer_Init+1,w
  2895  0F37  3A00               	xorlw	0	; case 0
  2896  0F38  1903               	skipnz
  2897  0F39  2F3B               	goto	l9798
  2898  0F3A  2F43               	goto	l8366
  2899  0F3B                     l9798:
  2900                           
  2901                           ; Switch size 1, requested type "simple"
  2902                           ; Number of cases is 2, Range of values is 0 to 1
  2903                           ; switch strategies available:
  2904                           ; Name         Instructions Cycles
  2905                           ; simple_byte            7     4 (average)
  2906                           ; direct_byte           14     8 (fixed)
  2907                           ; jumptable            260     6 (fixed)
  2908                           ;	Chosen strategy is simple_byte
  2909  0F3B  0830               	movf	??_Timer_Init,w
  2910  0F3C  3A00               	xorlw	0	; case 0
  2911  0F3D  1903               	skipnz
  2912  0F3E  2F29               	goto	l8360
  2913  0F3F  3A01               	xorlw	1	; case 1
  2914  0F40  1903               	skipnz
  2915  0F41  2F08               	goto	l558
  2916  0F42  2F43               	goto	l8366
  2917  0F43                     l8366:
  2918                           
  2919                           ;TIMER.c: 227:    au8_PrescalerValue[1]=au8_PrescalerValueTable[st_Timer_cfg->Timer_Pres
      +                          caler];
  2920  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0F45  0832               	movf	Timer_Init@st_Timer_cfg,w
  2923  0F46  3E03               	addlw	3
  2924  0F47  0084               	movwf	4
  2925  0F48  1383               	bcf	3,7	;select IRP bank0
  2926  0F49  0800               	movf	0,w
  2927  0F4A  00B0               	movwf	??_Timer_Init
  2928  0F4B  0730               	addwf	??_Timer_Init,w
  2929  0F4C  3E90               	addlw	(low (_au8_PrescalerValueTable| (0+256)))& (0+255)
  2930  0F4D  0084               	movwf	4
  2931  0F4E  1783               	bsf	3,7	;select IRP bank3
  2932  0F4F  0800               	movf	0,w
  2933  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  2934  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  2935  0F52  00B2               	movwf	(_au8_PrescalerValue^(0+128)+2)
  2936  0F53  0A84               	incf	4,f
  2937  0F54  0800               	movf	0,w
  2938  0F55  00B3               	movwf	((_au8_PrescalerValue+1)^(0+128)+2)
  2939  0F56                     l8368:
  2940                           
  2941                           ;TIMER.c: 230:             (T1CON)|=(au8_Timer1_PrescalerTable[st_Timer_cfg->Timer_Presc
      +                          aler]);
  2942  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0F58  0832               	movf	Timer_Init@st_Timer_cfg,w
  2945  0F59  3E03               	addlw	3
  2946  0F5A  0084               	movwf	4
  2947  0F5B  1383               	bcf	3,7	;select IRP bank0
  2948  0F5C  0800               	movf	0,w
  2949  0F5D  3EA4               	addlw	(low (_au8_Timer1_PrescalerTable| (0+256)))& (0+255)
  2950  0F5E  0084               	movwf	4
  2951  0F5F  1783               	bsf	3,7	;select IRP bank3
  2952  0F60  0800               	movf	0,w
  2953  0F61  00FF               	movwf	btemp+1
  2954  0F62  087F               	movf	btemp+1,w
  2955  0F63  0490               	iorwf	16,f	;volatile
  2956                           
  2957                           ;TIMER.c: 231:    break;
  2958  0F64  2FFF               	goto	l584
  2959  0F65                     l8372:
  2960  0F65  0A32               	incf	Timer_Init@st_Timer_cfg,w
  2961  0F66  0084               	movwf	4
  2962  0F67  0800               	movf	0,w
  2963  0F68  00B0               	movwf	??_Timer_Init
  2964  0F69  01B1               	clrf	??_Timer_Init+1
  2965                           
  2966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2967                           ; Switch size 1, requested type "simple"
  2968                           ; Number of cases is 1, Range of values is 0 to 0
  2969                           ; switch strategies available:
  2970                           ; Name         Instructions Cycles
  2971                           ; simple_byte            4     3 (average)
  2972                           ; direct_byte           11     8 (fixed)
  2973                           ; jumptable            260     6 (fixed)
  2974                           ;	Chosen strategy is simple_byte
  2975  0F6A  0831               	movf	??_Timer_Init+1,w
  2976  0F6B  3A00               	xorlw	0	; case 0
  2977  0F6C  1903               	skipnz
  2978  0F6D  2F6F               	goto	l9800
  2979  0F6E  2F74               	goto	l8374
  2980  0F6F                     l9800:
  2981                           
  2982                           ; Switch size 1, requested type "simple"
  2983                           ; Number of cases is 1, Range of values is 0 to 0
  2984                           ; switch strategies available:
  2985                           ; Name         Instructions Cycles
  2986                           ; simple_byte            4     3 (average)
  2987                           ; direct_byte           11     8 (fixed)
  2988                           ; jumptable            260     6 (fixed)
  2989                           ;	Chosen strategy is simple_byte
  2990  0F6F  0830               	movf	??_Timer_Init,w
  2991  0F70  3A00               	xorlw	0	; case 0
  2992  0F71  1903               	skipnz
  2993  0F72  2F74               	goto	l8374
  2994  0F73  2F74               	goto	l8374
  2995  0F74                     l8374:
  2996                           
  2997                           ;TIMER.c: 241:             (T2CON)&=~(0xFF);
  2998  0F74  0192               	clrf	18	;volatile
  2999                           
  3000                           ;TIMER.c: 242:             switch(st_Timer_cfg->Timer_Prescaler)
  3001  0F75  2F91               	goto	l8390
  3002  0F76                     l570:	
  3003                           ;TIMER.c: 246:                 case 2 :
  3004                           
  3005                           
  3006                           ;TIMER.c: 247:                     (T2CON)|=(0x08);
  3007  0F76  1592               	bsf	18,3	;volatile
  3008                           
  3009                           ;TIMER.c: 248:                     break;
  3010  0F77  2FC4               	goto	l8396
  3011  0F78                     l571:	
  3012                           ;TIMER.c: 249:                 case 3:
  3013                           
  3014                           
  3015                           ;TIMER.c: 250:                     (T2CON)|=(0x01);
  3016  0F78  1412               	bsf	18,0	;volatile
  3017                           
  3018                           ;TIMER.c: 251:                     break;
  3019  0F79  2FC4               	goto	l8396
  3020  0F7A                     l572:	
  3021                           ;TIMER.c: 252:                 case 4:
  3022                           
  3023                           
  3024                           ;TIMER.c: 253:                     (T2CON)|=(0x08);
  3025  0F7A  1592               	bsf	18,3	;volatile
  3026                           
  3027                           ;TIMER.c: 254:                     (T2CON)|=(0x01);
  3028  0F7B  1412               	bsf	18,0	;volatile
  3029                           
  3030                           ;TIMER.c: 255:                     break;
  3031  0F7C  2FC4               	goto	l8396
  3032  0F7D                     l573:	
  3033                           ;TIMER.c: 256:                 case 5:
  3034                           
  3035                           
  3036                           ;TIMER.c: 257:                     (T2CON)|=(0x02);
  3037  0F7D  1492               	bsf	18,1	;volatile
  3038                           
  3039                           ;TIMER.c: 258:                     break;
  3040  0F7E  2FC4               	goto	l8396
  3041  0F7F                     l574:	
  3042                           ;TIMER.c: 259:                 case 6:
  3043                           
  3044                           
  3045                           ;TIMER.c: 260:                     (T2CON)|=(0x08);
  3046  0F7F  1592               	bsf	18,3	;volatile
  3047                           
  3048                           ;TIMER.c: 261:                     (T2CON)|=(0x02);
  3049  0F80  1492               	bsf	18,1	;volatile
  3050                           
  3051                           ;TIMER.c: 262:                     break;
  3052  0F81  2FC4               	goto	l8396
  3053  0F82                     l8376:
  3054                           
  3055                           ;TIMER.c: 264:                     (T2CON)|=(0x18);
  3056  0F82  3018               	movlw	24
  3057  0F83  00FF               	movwf	btemp+1
  3058  0F84  087F               	movf	btemp+1,w
  3059  0F85  0492               	iorwf	18,f	;volatile
  3060  0F86  2F7D               	goto	l573
  3061  0F87                     l8380:
  3062                           
  3063                           ;TIMER.c: 268:                     (T2CON)|=(0x38);
  3064  0F87  3038               	movlw	56
  3065  0F88  00FF               	movwf	btemp+1
  3066  0F89  087F               	movf	btemp+1,w
  3067  0F8A  0492               	iorwf	18,f	;volatile
  3068  0F8B  2F7D               	goto	l573
  3069  0F8C                     l8384:
  3070                           
  3071                           ;TIMER.c: 272:                     (T2CON)|=(0x78);
  3072  0F8C  3078               	movlw	120
  3073  0F8D  00FF               	movwf	btemp+1
  3074  0F8E  087F               	movf	btemp+1,w
  3075  0F8F  0492               	iorwf	18,f	;volatile
  3076  0F90  2F7D               	goto	l573
  3077  0F91                     l8390:
  3078  0F91  0832               	movf	Timer_Init@st_Timer_cfg,w
  3079  0F92  3E03               	addlw	3
  3080  0F93  0084               	movwf	4
  3081  0F94  0800               	movf	0,w
  3082  0F95  00B0               	movwf	??_Timer_Init
  3083  0F96  01B1               	clrf	??_Timer_Init+1
  3084                           
  3085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3086                           ; Switch size 1, requested type "simple"
  3087                           ; Number of cases is 1, Range of values is 0 to 0
  3088                           ; switch strategies available:
  3089                           ; Name         Instructions Cycles
  3090                           ; simple_byte            4     3 (average)
  3091                           ; direct_byte           11     8 (fixed)
  3092                           ; jumptable            260     6 (fixed)
  3093                           ;	Chosen strategy is simple_byte
  3094  0F97  0831               	movf	??_Timer_Init+1,w
  3095  0F98  3A00               	xorlw	0	; case 0
  3096  0F99  1903               	skipnz
  3097  0F9A  2F9C               	goto	l9802
  3098  0F9B  2FC4               	goto	l8396
  3099  0F9C                     l9802:
  3100                           
  3101                           ; Switch size 1, requested type "simple"
  3102                           ; Number of cases is 9, Range of values is 1 to 9
  3103                           ; switch strategies available:
  3104                           ; Name         Instructions Cycles
  3105                           ; simple_byte           28    15 (average)
  3106                           ; direct_byte           38    11 (fixed)
  3107                           ; jumptable            263     9 (fixed)
  3108                           ;	Chosen strategy is simple_byte
  3109  0F9C  0830               	movf	??_Timer_Init,w
  3110  0F9D  3A01               	xorlw	1	; case 1
  3111  0F9E  1903               	skipnz
  3112  0F9F  2FC4               	goto	l8396
  3113  0FA0  3A03               	xorlw	3	; case 2
  3114  0FA1  1903               	skipnz
  3115  0FA2  2F76               	goto	l570
  3116  0FA3  3A01               	xorlw	1	; case 3
  3117  0FA4  1903               	skipnz
  3118  0FA5  2F78               	goto	l571
  3119  0FA6  3A07               	xorlw	7	; case 4
  3120  0FA7  1903               	skipnz
  3121  0FA8  2F7A               	goto	l572
  3122  0FA9  3A01               	xorlw	1	; case 5
  3123  0FAA  1903               	skipnz
  3124  0FAB  2F7D               	goto	l573
  3125  0FAC  3A03               	xorlw	3	; case 6
  3126  0FAD  1903               	skipnz
  3127  0FAE  2F7F               	goto	l574
  3128  0FAF  3A01               	xorlw	1	; case 7
  3129  0FB0  1903               	skipnz
  3130  0FB1  2F82               	goto	l8376
  3131  0FB2  3A0F               	xorlw	15	; case 8
  3132  0FB3  1903               	skipnz
  3133  0FB4  2F87               	goto	l8380
  3134  0FB5  3A01               	xorlw	1	; case 9
  3135  0FB6  1903               	skipnz
  3136  0FB7  2F8C               	goto	l8384
  3137  0FB8  2FC4               	goto	l8396
  3138  0FB9                     l579:	
  3139                           ;TIMER.c: 278:             {;TIMER.c: 279:                 case 1 :
  3140                           
  3141                           
  3142                           ;TIMER.c: 280:                     (PIE1)|=(0x02);
  3143  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0FBB  148C               	bsf	12,1	;volatile
  3146                           
  3147                           ;TIMER.c: 281:                     break;
  3148  0FBC  2FD7               	goto	l8398
  3149  0FBD                     l8392:
  3150                           
  3151                           ;TIMER.c: 284:                     (PIE1)&=~(0x02);
  3152  0FBD  30FD               	movlw	253
  3153  0FBE  00FF               	movwf	btemp+1
  3154  0FBF  087F               	movf	btemp+1,w
  3155  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0FC1  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0FC2  058C               	andwf	12,f	;volatile
  3158                           
  3159                           ;TIMER.c: 285:                      break;
  3160  0FC3  2FD7               	goto	l8398
  3161  0FC4                     l8396:
  3162  0FC4  0832               	movf	Timer_Init@st_Timer_cfg,w
  3163  0FC5  3E02               	addlw	2
  3164  0FC6  0084               	movwf	4
  3165  0FC7  0800               	movf	0,w
  3166  0FC8  00B0               	movwf	??_Timer_Init
  3167  0FC9  01B1               	clrf	??_Timer_Init+1
  3168                           
  3169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3170                           ; Switch size 1, requested type "simple"
  3171                           ; Number of cases is 1, Range of values is 0 to 0
  3172                           ; switch strategies available:
  3173                           ; Name         Instructions Cycles
  3174                           ; simple_byte            4     3 (average)
  3175                           ; direct_byte           11     8 (fixed)
  3176                           ; jumptable            260     6 (fixed)
  3177                           ;	Chosen strategy is simple_byte
  3178  0FCA  0831               	movf	??_Timer_Init+1,w
  3179  0FCB  3A00               	xorlw	0	; case 0
  3180  0FCC  1903               	skipnz
  3181  0FCD  2FCF               	goto	l9804
  3182  0FCE  2FD7               	goto	l8398
  3183  0FCF                     l9804:
  3184                           
  3185                           ; Switch size 1, requested type "simple"
  3186                           ; Number of cases is 2, Range of values is 0 to 1
  3187                           ; switch strategies available:
  3188                           ; Name         Instructions Cycles
  3189                           ; simple_byte            7     4 (average)
  3190                           ; direct_byte           14     8 (fixed)
  3191                           ; jumptable            260     6 (fixed)
  3192                           ;	Chosen strategy is simple_byte
  3193  0FCF  0830               	movf	??_Timer_Init,w
  3194  0FD0  3A00               	xorlw	0	; case 0
  3195  0FD1  1903               	skipnz
  3196  0FD2  2FBD               	goto	l8392
  3197  0FD3  3A01               	xorlw	1	; case 1
  3198  0FD4  1903               	skipnz
  3199  0FD5  2FB9               	goto	l579
  3200  0FD6  2FD7               	goto	l8398
  3201  0FD7                     l8398:
  3202                           
  3203                           ;TIMER.c: 290:    au8_PrescalerValue[2]=au8_PrescalerValueTable[st_Timer_cfg->Timer_Pres
      +                          caler];
  3204  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0FD8  0832               	movf	Timer_Init@st_Timer_cfg,w
  3206  0FD9  3E03               	addlw	3
  3207  0FDA  0084               	movwf	4
  3208  0FDB  0800               	movf	0,w
  3209  0FDC  00B0               	movwf	??_Timer_Init
  3210  0FDD  0730               	addwf	??_Timer_Init,w
  3211  0FDE  3E90               	addlw	(low (_au8_PrescalerValueTable| (0+256)))& (0+255)
  3212  0FDF  0084               	movwf	4
  3213  0FE0  1783               	bsf	3,7	;select IRP bank3
  3214  0FE1  0800               	movf	0,w
  3215  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  3216  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  3217  0FE4  00B4               	movwf	(_au8_PrescalerValue^(0+128)+4)
  3218  0FE5  0A84               	incf	4,f
  3219  0FE6  0800               	movf	0,w
  3220  0FE7  00B5               	movwf	((_au8_PrescalerValue+1)^(0+128)+4)
  3221                           
  3222                           ;TIMER.c: 291:    break;
  3223  0FE8  2FFF               	goto	l584
  3224  0FE9                     l8402:
  3225  0FE9  0832               	movf	Timer_Init@st_Timer_cfg,w
  3226  0FEA  0084               	movwf	4
  3227  0FEB  1383               	bcf	3,7	;select IRP bank0
  3228  0FEC  0800               	movf	0,w
  3229  0FED  00B0               	movwf	??_Timer_Init
  3230  0FEE  01B1               	clrf	??_Timer_Init+1
  3231                           
  3232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3233                           ; Switch size 1, requested type "simple"
  3234                           ; Number of cases is 1, Range of values is 0 to 0
  3235                           ; switch strategies available:
  3236                           ; Name         Instructions Cycles
  3237                           ; simple_byte            4     3 (average)
  3238                           ; direct_byte           11     8 (fixed)
  3239                           ; jumptable            260     6 (fixed)
  3240                           ;	Chosen strategy is simple_byte
  3241  0FEF  0831               	movf	??_Timer_Init+1,w
  3242  0FF0  3A00               	xorlw	0	; case 0
  3243  0FF1  1903               	skipnz
  3244  0FF2  2FF4               	goto	l9806
  3245  0FF3  2FFF               	goto	l584
  3246  0FF4                     l9806:
  3247                           
  3248                           ; Switch size 1, requested type "simple"
  3249                           ; Number of cases is 3, Range of values is 0 to 2
  3250                           ; switch strategies available:
  3251                           ; Name         Instructions Cycles
  3252                           ; simple_byte           10     6 (average)
  3253                           ; direct_byte           17     8 (fixed)
  3254                           ; jumptable            260     6 (fixed)
  3255                           ;	Chosen strategy is simple_byte
  3256  0FF4  0830               	movf	??_Timer_Init,w
  3257  0FF5  3A00               	xorlw	0	; case 0
  3258  0FF6  1903               	skipnz
  3259  0FF7  2EAF               	goto	l8342
  3260  0FF8  3A01               	xorlw	1	; case 1
  3261  0FF9  1903               	skipnz
  3262  0FFA  2EF3               	goto	l8354
  3263  0FFB  3A03               	xorlw	3	; case 2
  3264  0FFC  1903               	skipnz
  3265  0FFD  2F65               	goto	l8372
  3266  0FFE  2FFF               	goto	l584
  3267  0FFF                     l584:
  3268  0FFF  0008               	return
  3269  1000                     __end_of_Timer_Init:
  3270                           
  3271                           	psect	text4
  3272  1ADF                     __ptext4:	
  3273 ;; *************** function _TemperatureAVGReading_init *****************
  3274 ;; Defined at:
  3275 ;;		line 52 in file "TempAvgReading.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3289 ;;      Params:         0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    5
  3296 ;; This function calls:
  3297 ;;		_LM_init
  3298 ;; This function is called by:
  3299 ;;		_App_init
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _TemperatureAVGReading_init
  3305  1ADF                     _TemperatureAVGReading_init:
  3306  1ADF                     l8290:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _TemperatureAVGReading_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  3309                           
  3310                           
  3311                           ;TempAvgReading.c: 54:     LM_init();
  3312  1ADF  160A  158A  24EF  160A  158A  	fcall	_LM_init
  3313  1AE4                     l724:
  3314  1AE4  0008               	return
  3315  1AE5                     __end_of_TemperatureAVGReading_init:
  3316                           
  3317                           	psect	text5
  3318  1CEF                     __ptext5:	
  3319 ;; *************** function _LM_init *****************
  3320 ;; Defined at:
  3321 ;;		line 53 in file "LM35.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    4
  3342 ;; This function calls:
  3343 ;;		_ADC_init
  3344 ;;		_DIO_Write
  3345 ;; This function is called by:
  3346 ;;		_TemperatureAVGReading_init
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           
  3351                           ;psect for function _LM_init
  3352  1CEF                     _LM_init:
  3353  1CEF                     l7918:	
  3354                           ;incstack = 0
  3355                           ; Regs used in _LM_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3356                           
  3357                           
  3358                           ;LM35.c: 55:     ADC_init((0x00),(0x80),(0x00),(0x02),((void *)0));
  3359  1CEF  3080               	movlw	128
  3360  1CF0  00FF               	movwf	btemp+1
  3361  1CF1  087F               	movf	btemp+1,w
  3362  1CF2  1283               	bcf	3,5	;RP0=0, select bank0
  3363  1CF3  1303               	bcf	3,6	;RP1=0, select bank0
  3364  1CF4  00AA               	movwf	ADC_init@u8_ADC_adjustResult
  3365  1CF5  01AB               	clrf	ADC_init@u8_ADC_Mode
  3366  1CF6  3002               	movlw	2
  3367  1CF7  00FF               	movwf	btemp+1
  3368  1CF8  087F               	movf	btemp+1,w
  3369  1CF9  00AC               	movwf	ADC_init@u8_ADC_prescaler
  3370  1CFA  01AD               	clrf	ADC_init@ptrf_ADC_cbk
  3371  1CFB  3000               	movlw	0
  3372  1CFC  160A  118A  2767  160A  158A  	fcall	_ADC_init
  3373                           
  3374                           ;LM35.c: 62:     DIO_Write(0,0x04,0xFF);
  3375  1D01  3004               	movlw	4
  3376  1D02  00FF               	movwf	btemp+1
  3377  1D03  087F               	movf	btemp+1,w
  3378  1D04  1283               	bcf	3,5	;RP0=0, select bank0
  3379  1D05  1303               	bcf	3,6	;RP1=0, select bank0
  3380  1D06  00AA               	movwf	DIO_Write@u8_pins
  3381  1D07  30FF               	movlw	255
  3382  1D08  00FF               	movwf	btemp+1
  3383  1D09  087F               	movf	btemp+1,w
  3384  1D0A  00AB               	movwf	DIO_Write@u8_value
  3385  1D0B  3000               	movlw	0
  3386  1D0C  160A  118A  2618  160A  158A  	fcall	_DIO_Write
  3387  1D11                     l7920:
  3388                           
  3389                           ;LM35.c: 67:  u16_ADCReading=0;
  3390  1D11  1283               	bcf	3,5	;RP0=0, select bank0
  3391  1D12  1303               	bcf	3,6	;RP1=0, select bank0
  3392  1D13  01E2               	clrf	_u16_ADCReading
  3393  1D14  01E3               	clrf	_u16_ADCReading+1
  3394  1D15                     l234:
  3395  1D15  0008               	return
  3396  1D16                     __end_of_LM_init:
  3397                           
  3398                           	psect	text6
  3399  1767                     __ptext6:	
  3400 ;; *************** function _ADC_init *****************
  3401 ;; Defined at:
  3402 ;;		line 66 in file "ADC.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  u8_ADC_Chann    1    wreg     unsigned char 
  3405 ;;  u8_ADC_adjus    1   10[BANK0 ] unsigned char 
  3406 ;;  u8_ADC_Mode     1   11[BANK0 ] unsigned char 
  3407 ;;  u8_ADC_presc    1   12[BANK0 ] unsigned char 
  3408 ;;  ptrf_ADC_cbk    1   13[BANK0 ] PTR FTN()void 
  3409 ;;		 -> Absolute function(1), 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  u8_ADC_Chann    1   16[BANK0 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3421 ;;      Params:         0       4       0       0       0
  3422 ;;      Locals:         0       1       0       0       0
  3423 ;;      Temps:          0       2       0       0       0
  3424 ;;      Totals:         0       7       0       0       0
  3425 ;;Total ram usage:        7 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    3
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_LM_init
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _ADC_init
  3437  1767                     _ADC_init:
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0+btemp+1]
  3441                           ;ADC_init@u8_ADC_Channels_Config stored from wreg
  3442  1767  1283               	bcf	3,5	;RP0=0, select bank0
  3443  1768  1303               	bcf	3,6	;RP1=0, select bank0
  3444  1769  00B0               	movwf	ADC_init@u8_ADC_Channels_Config
  3445  176A                     l7146:
  3446                           
  3447                           ;ADC.c: 66: extern void ADC_init(uint8 u8_ADC_Channels_Config , uint8 u8_ADC_adjustResul
      +                          t , uint8 u8_ADC_Mode ,;ADC.c: 67:                     uint8 u8_ADC_prescaler , Ptrfunc 
      +                          ptrf_ADC_cbk);ADC.c: 69: {;ADC.c: 71:     (ADCON0)|=(0x01);
  3448  176A  141F               	bsf	31,0	;volatile
  3449  176B                     l7148:
  3450                           
  3451                           ;ADC.c: 74:     (ADCON1)&=~(0x0F);
  3452  176B  30F0               	movlw	240
  3453  176C  00FF               	movwf	btemp+1
  3454  176D  087F               	movf	btemp+1,w
  3455  176E  1683               	bsf	3,5	;RP0=1, select bank1
  3456  176F  1303               	bcf	3,6	;RP1=0, select bank1
  3457  1770  059F               	andwf	31,f	;volatile
  3458                           
  3459                           ;ADC.c: 76:     u8_ADC_Channels_Config &= (0x0F);
  3460  1771  300F               	movlw	15
  3461  1772  00FF               	movwf	btemp+1
  3462  1773  087F               	movf	btemp+1,w
  3463  1774  1283               	bcf	3,5	;RP0=0, select bank0
  3464  1775  1303               	bcf	3,6	;RP1=0, select bank0
  3465  1776  05B0               	andwf	ADC_init@u8_ADC_Channels_Config,f
  3466                           
  3467                           ;ADC.c: 78:     (ADCON1)|=(u8_ADC_Channels_Config);
  3468  1777  0830               	movf	ADC_init@u8_ADC_Channels_Config,w	;volatile
  3469  1778  00FF               	movwf	btemp+1
  3470  1779  087F               	movf	btemp+1,w
  3471  177A  1683               	bsf	3,5	;RP0=1, select bank1
  3472  177B  1303               	bcf	3,6	;RP1=0, select bank1
  3473  177C  049F               	iorwf	31,f	;volatile
  3474                           
  3475                           ;ADC.c: 83:     (ADCON1)&=~(0x80);
  3476  177D  307F               	movlw	127
  3477  177E  00FF               	movwf	btemp+1
  3478  177F  087F               	movf	btemp+1,w
  3479  1780  059F               	andwf	31,f	;volatile
  3480                           
  3481                           ;ADC.c: 85:     u8_ADC_adjustResult &= (0x80);
  3482  1781  3080               	movlw	128
  3483  1782  00FF               	movwf	btemp+1
  3484  1783  087F               	movf	btemp+1,w
  3485  1784  1283               	bcf	3,5	;RP0=0, select bank0
  3486  1785  1303               	bcf	3,6	;RP1=0, select bank0
  3487  1786  05AA               	andwf	ADC_init@u8_ADC_adjustResult,f
  3488                           
  3489                           ;ADC.c: 86:     (ADCON1)|=(u8_ADC_adjustResult);
  3490  1787  082A               	movf	ADC_init@u8_ADC_adjustResult,w	;volatile
  3491  1788  00FF               	movwf	btemp+1
  3492  1789  087F               	movf	btemp+1,w
  3493  178A  1683               	bsf	3,5	;RP0=1, select bank1
  3494  178B  1303               	bcf	3,6	;RP1=0, select bank1
  3495  178C  049F               	iorwf	31,f	;volatile
  3496  178D                     l7150:
  3497                           
  3498                           ;ADC.c: 91:     u8_Mode = u8_ADC_Mode;
  3499  178D  1283               	bcf	3,5	;RP0=0, select bank0
  3500  178E  1303               	bcf	3,6	;RP1=0, select bank0
  3501  178F  082B               	movf	ADC_init@u8_ADC_Mode,w
  3502  1790  00FF               	movwf	btemp+1
  3503  1791  087F               	movf	btemp+1,w
  3504  1792  00E1               	movwf	_u8_Mode@ADC$F29
  3505  1793                     l7152:
  3506                           
  3507                           ;ADC.c: 95:     (ADCON0)&=~(0x80);
  3508  1793  307F               	movlw	127
  3509  1794  00FF               	movwf	btemp+1
  3510  1795  087F               	movf	btemp+1,w
  3511  1796  059F               	andwf	31,f	;volatile
  3512  1797                     l7154:
  3513                           
  3514                           ;ADC.c: 96:     (ADCON0)&=~(0x40);
  3515  1797  30BF               	movlw	191
  3516  1798  00FF               	movwf	btemp+1
  3517  1799  087F               	movf	btemp+1,w
  3518  179A  059F               	andwf	31,f	;volatile
  3519  179B                     l7156:
  3520                           
  3521                           ;ADC.c: 97:     (ADCON1)&=~(0x40);
  3522  179B  30BF               	movlw	191
  3523  179C  00FF               	movwf	btemp+1
  3524  179D  087F               	movf	btemp+1,w
  3525  179E  1683               	bsf	3,5	;RP0=1, select bank1
  3526  179F  1303               	bcf	3,6	;RP1=0, select bank1
  3527  17A0  059F               	andwf	31,f	;volatile
  3528                           
  3529                           ;ADC.c: 99:     switch(u8_ADC_prescaler)
  3530  17A1  2FE1               	goto	l7182
  3531  17A2                     l7158:
  3532                           
  3533                           ;ADC.c: 102:             (ADCON0)&=~(0x80);
  3534  17A2  307F               	movlw	127
  3535  17A3  00FF               	movwf	btemp+1
  3536  17A4  087F               	movf	btemp+1,w
  3537  17A5  059F               	andwf	31,f	;volatile
  3538                           
  3539                           ;ADC.c: 103:             (ADCON0)&=~(0x40);
  3540  17A6  30BF               	movlw	191
  3541  17A7  00FF               	movwf	btemp+1
  3542  17A8  087F               	movf	btemp+1,w
  3543  17A9  059F               	andwf	31,f	;volatile
  3544                           
  3545                           ;ADC.c: 104:             (ADCON1)&=~(0x40);
  3546  17AA  30BF               	movlw	191
  3547  17AB  00FF               	movwf	btemp+1
  3548  17AC  087F               	movf	btemp+1,w
  3549  17AD  1683               	bsf	3,5	;RP0=1, select bank1
  3550  17AE  1303               	bcf	3,6	;RP1=0, select bank1
  3551  17AF  059F               	andwf	31,f	;volatile
  3552                           
  3553                           ;ADC.c: 105:             break;
  3554  17B0  2FFF               	goto	l23
  3555  17B1                     l7160:
  3556                           
  3557                           ;ADC.c: 108:             (ADCON0)&=~(0x80);
  3558  17B1  307F               	movlw	127
  3559  17B2  00FF               	movwf	btemp+1
  3560  17B3  087F               	movf	btemp+1,w
  3561  17B4  059F               	andwf	31,f	;volatile
  3562                           
  3563                           ;ADC.c: 109:             (ADCON0)&=~(0x40);
  3564  17B5  30BF               	movlw	191
  3565  17B6  00FF               	movwf	btemp+1
  3566  17B7  087F               	movf	btemp+1,w
  3567  17B8  059F               	andwf	31,f	;volatile
  3568  17B9                     l7162:
  3569                           
  3570                           ;ADC.c: 110:             (ADCON1)|=(0x40);
  3571  17B9  1683               	bsf	3,5	;RP0=1, select bank1
  3572  17BA  1303               	bcf	3,6	;RP1=0, select bank1
  3573  17BB  171F               	bsf	31,6	;volatile
  3574                           
  3575                           ;ADC.c: 111:             break;
  3576  17BC  2FFF               	goto	l23
  3577  17BD                     l7164:
  3578                           
  3579                           ;ADC.c: 114:             (ADCON0)&=~(0x80);
  3580  17BD  307F               	movlw	127
  3581  17BE  00FF               	movwf	btemp+1
  3582  17BF  087F               	movf	btemp+1,w
  3583  17C0  059F               	andwf	31,f	;volatile
  3584  17C1                     l7166:
  3585                           
  3586                           ;ADC.c: 115:             (ADCON0)|=(0x40);
  3587  17C1  171F               	bsf	31,6	;volatile
  3588                           
  3589                           ;ADC.c: 116:             (ADCON1)&=~(0x40);
  3590  17C2  30BF               	movlw	191
  3591  17C3  00FF               	movwf	btemp+1
  3592  17C4  087F               	movf	btemp+1,w
  3593  17C5  1683               	bsf	3,5	;RP0=1, select bank1
  3594  17C6  1303               	bcf	3,6	;RP1=0, select bank1
  3595  17C7  059F               	andwf	31,f	;volatile
  3596                           
  3597                           ;ADC.c: 117:             break;
  3598  17C8  2FFF               	goto	l23
  3599  17C9                     l7168:
  3600                           
  3601                           ;ADC.c: 120:             (ADCON0)&=~(0x80);
  3602  17C9  307F               	movlw	127
  3603  17CA  00FF               	movwf	btemp+1
  3604  17CB  087F               	movf	btemp+1,w
  3605  17CC  059F               	andwf	31,f	;volatile
  3606  17CD                     l7170:
  3607                           
  3608                           ;ADC.c: 121:             (ADCON0)|=(0x40);
  3609  17CD  171F               	bsf	31,6	;volatile
  3610  17CE  2FB9               	goto	l7162
  3611  17CF                     l21:	
  3612                           ;ADC.c: 125:         case (0x02) :
  3613                           
  3614                           
  3615                           ;ADC.c: 126:             (ADCON0)|=(0x80);
  3616  17CF  179F               	bsf	31,7	;volatile
  3617  17D0                     l7174:
  3618                           
  3619                           ;ADC.c: 127:             (ADCON0)&=~(0x40);
  3620  17D0  30BF               	movlw	191
  3621  17D1  00FF               	movwf	btemp+1
  3622  17D2  087F               	movf	btemp+1,w
  3623  17D3  059F               	andwf	31,f	;volatile
  3624                           
  3625                           ;ADC.c: 128:             (ADCON1)&=~(0x40);
  3626  17D4  30BF               	movlw	191
  3627  17D5  00FF               	movwf	btemp+1
  3628  17D6  087F               	movf	btemp+1,w
  3629  17D7  1683               	bsf	3,5	;RP0=1, select bank1
  3630  17D8  1303               	bcf	3,6	;RP1=0, select bank1
  3631  17D9  059F               	andwf	31,f	;volatile
  3632                           
  3633                           ;ADC.c: 129:             break;
  3634  17DA  2FFF               	goto	l23
  3635  17DB                     l22:	
  3636                           ;ADC.c: 131:         case (0x06) :
  3637                           
  3638                           
  3639                           ;ADC.c: 132:             (ADCON0)|=(0x80);
  3640  17DB  179F               	bsf	31,7	;volatile
  3641  17DC                     l7176:
  3642                           
  3643                           ;ADC.c: 133:             (ADCON0)&=~(0x40);
  3644  17DC  30BF               	movlw	191
  3645  17DD  00FF               	movwf	btemp+1
  3646  17DE  087F               	movf	btemp+1,w
  3647  17DF  059F               	andwf	31,f	;volatile
  3648  17E0  2FB9               	goto	l7162
  3649  17E1                     l7182:
  3650  17E1  1283               	bcf	3,5	;RP0=0, select bank0
  3651  17E2  1303               	bcf	3,6	;RP1=0, select bank0
  3652  17E3  082C               	movf	ADC_init@u8_ADC_prescaler,w
  3653  17E4  00AE               	movwf	??_ADC_init
  3654  17E5  01AF               	clrf	??_ADC_init+1
  3655                           
  3656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3657                           ; Switch size 1, requested type "simple"
  3658                           ; Number of cases is 1, Range of values is 0 to 0
  3659                           ; switch strategies available:
  3660                           ; Name         Instructions Cycles
  3661                           ; simple_byte            4     3 (average)
  3662                           ; direct_byte           11     8 (fixed)
  3663                           ; jumptable            260     6 (fixed)
  3664                           ;	Chosen strategy is simple_byte
  3665  17E6  082F               	movf	??_ADC_init+1,w
  3666  17E7  3A00               	xorlw	0	; case 0
  3667  17E8  1903               	skipnz
  3668  17E9  2FEB               	goto	l9808
  3669  17EA  2FFF               	goto	l23
  3670  17EB                     l9808:
  3671                           
  3672                           ; Switch size 1, requested type "simple"
  3673                           ; Number of cases is 6, Range of values is 0 to 6
  3674                           ; switch strategies available:
  3675                           ; Name         Instructions Cycles
  3676                           ; simple_byte           19    10 (average)
  3677                           ; direct_byte           29     8 (fixed)
  3678                           ; jumptable            260     6 (fixed)
  3679                           ;	Chosen strategy is simple_byte
  3680  17EB  082E               	movf	??_ADC_init,w
  3681  17EC  3A00               	xorlw	0	; case 0
  3682  17ED  1903               	skipnz
  3683  17EE  2FA2               	goto	l7158
  3684  17EF  3A01               	xorlw	1	; case 1
  3685  17F0  1903               	skipnz
  3686  17F1  2FBD               	goto	l7164
  3687  17F2  3A03               	xorlw	3	; case 2
  3688  17F3  1903               	skipnz
  3689  17F4  2FCF               	goto	l21
  3690  17F5  3A06               	xorlw	6	; case 4
  3691  17F6  1903               	skipnz
  3692  17F7  2FB1               	goto	l7160
  3693  17F8  3A01               	xorlw	1	; case 5
  3694  17F9  1903               	skipnz
  3695  17FA  2FC9               	goto	l7168
  3696  17FB  3A03               	xorlw	3	; case 6
  3697  17FC  1903               	skipnz
  3698  17FD  2FDB               	goto	l22
  3699  17FE  2FFF               	goto	l23
  3700  17FF                     l23:
  3701  17FF  0008               	return
  3702  1800                     __end_of_ADC_init:
  3703                           
  3704                           	psect	text7
  3705  117A                     __ptext7:	
  3706 ;; *************** function _Led_Init *****************
  3707 ;; Defined at:
  3708 ;;		line 29 in file "led.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  u8_LED_ID       1    wreg     unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  u8_LED_ID       1   17[BANK0 ] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         0       1       0       0       0
  3724 ;;      Temps:          0       2       0       0       0
  3725 ;;      Totals:         0       3       0       0       0
  3726 ;;Total ram usage:        3 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    4
  3729 ;; This function calls:
  3730 ;;		_DIO_init
  3731 ;; This function is called by:
  3732 ;;		_App_init
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function _Led_Init
  3738  117A                     _Led_Init:
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in _Led_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3742                           ;Led_Init@u8_LED_ID stored from wreg
  3743  117A  1283               	bcf	3,5	;RP0=0, select bank0
  3744  117B  1303               	bcf	3,6	;RP1=0, select bank0
  3745  117C  00B1               	movwf	Led_Init@u8_LED_ID
  3746  117D                     l8292:
  3747                           
  3748                           ;led.c: 30:  switch(u8_LED_ID){
  3749  117D  29AE               	goto	l8304
  3750  117E                     l8294:
  3751                           
  3752                           ;led.c: 32:             DIO_init((1),(0x80),0x00);
  3753  117E  3080               	movlw	128
  3754  117F  00FF               	movwf	btemp+1
  3755  1180  087F               	movf	btemp+1,w
  3756  1181  00AA               	movwf	DIO_init@u8_pins
  3757  1182  01AB               	clrf	DIO_init@u8_direction
  3758  1183  3001               	movlw	1
  3759  1184  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  3760                           
  3761                           ;led.c: 33:    break;
  3762  1189  29C4               	goto	l675
  3763  118A                     l8296:
  3764                           
  3765                           ;led.c: 35:             DIO_init((1),(0x40),0x00);
  3766  118A  3040               	movlw	64
  3767  118B  00FF               	movwf	btemp+1
  3768  118C  087F               	movf	btemp+1,w
  3769  118D  00AA               	movwf	DIO_init@u8_pins
  3770  118E  01AB               	clrf	DIO_init@u8_direction
  3771  118F  3001               	movlw	1
  3772  1190  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  3773                           
  3774                           ;led.c: 36:    break;
  3775  1195  29C4               	goto	l675
  3776  1196                     l8298:
  3777                           
  3778                           ;led.c: 38:             DIO_init((1),(0x20),0x00);
  3779  1196  3020               	movlw	32
  3780  1197  00FF               	movwf	btemp+1
  3781  1198  087F               	movf	btemp+1,w
  3782  1199  00AA               	movwf	DIO_init@u8_pins
  3783  119A  01AB               	clrf	DIO_init@u8_direction
  3784  119B  3001               	movlw	1
  3785  119C  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  3786                           
  3787                           ;led.c: 39:    break;
  3788  11A1  29C4               	goto	l675
  3789  11A2                     l8300:
  3790                           
  3791                           ;led.c: 41:             DIO_init((1),(0x10),0x00);
  3792  11A2  3010               	movlw	16
  3793  11A3  00FF               	movwf	btemp+1
  3794  11A4  087F               	movf	btemp+1,w
  3795  11A5  00AA               	movwf	DIO_init@u8_pins
  3796  11A6  01AB               	clrf	DIO_init@u8_direction
  3797  11A7  3001               	movlw	1
  3798  11A8  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  3799                           
  3800                           ;led.c: 42:    break;
  3801  11AD  29C4               	goto	l675
  3802  11AE                     l8304:
  3803  11AE  0831               	movf	Led_Init@u8_LED_ID,w
  3804  11AF  00AF               	movwf	??_Led_Init
  3805  11B0  01B0               	clrf	??_Led_Init+1
  3806                           
  3807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3808                           ; Switch size 1, requested type "simple"
  3809                           ; Number of cases is 1, Range of values is 0 to 0
  3810                           ; switch strategies available:
  3811                           ; Name         Instructions Cycles
  3812                           ; simple_byte            4     3 (average)
  3813                           ; direct_byte           11     8 (fixed)
  3814                           ; jumptable            260     6 (fixed)
  3815                           ;	Chosen strategy is simple_byte
  3816  11B1  0830               	movf	??_Led_Init+1,w
  3817  11B2  3A00               	xorlw	0	; case 0
  3818  11B3  1903               	skipnz
  3819  11B4  29B6               	goto	l9810
  3820  11B5  29C4               	goto	l675
  3821  11B6                     l9810:
  3822                           
  3823                           ; Switch size 1, requested type "simple"
  3824                           ; Number of cases is 4, Range of values is 0 to 3
  3825                           ; switch strategies available:
  3826                           ; Name         Instructions Cycles
  3827                           ; simple_byte           13     7 (average)
  3828                           ; direct_byte           20     8 (fixed)
  3829                           ; jumptable            260     6 (fixed)
  3830                           ;	Chosen strategy is simple_byte
  3831  11B6  082F               	movf	??_Led_Init,w
  3832  11B7  3A00               	xorlw	0	; case 0
  3833  11B8  1903               	skipnz
  3834  11B9  297E               	goto	l8294
  3835  11BA  3A01               	xorlw	1	; case 1
  3836  11BB  1903               	skipnz
  3837  11BC  298A               	goto	l8296
  3838  11BD  3A03               	xorlw	3	; case 2
  3839  11BE  1903               	skipnz
  3840  11BF  2996               	goto	l8298
  3841  11C0  3A01               	xorlw	1	; case 3
  3842  11C1  1903               	skipnz
  3843  11C2  29A2               	goto	l8300
  3844  11C3  29C4               	goto	l675
  3845  11C4                     l675:
  3846  11C4  0008               	return
  3847  11C5                     __end_of_Led_Init:
  3848                           
  3849                           	psect	text8
  3850  0801                     __ptext8:	
  3851 ;; *************** function _INT_SetEnable *****************
  3852 ;; Defined at:
  3853 ;;		line 74 in file "Interrupts.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		None
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    3
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_App_init
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           
  3882                           ;psect for function _INT_SetEnable
  3883  0801                     _INT_SetEnable:
  3884  0801                     l8222:	
  3885                           ;incstack = 0
  3886                           ; Regs used in _INT_SetEnable: []
  3887                           
  3888                           
  3889                           ;Interrupts.c: 76:     (INTCON)|=(0x80);
  3890  0801  178B               	bsf	11,7	;volatile
  3891                           
  3892                           ;Interrupts.c: 77:     (INTCON)|=(0x40);
  3893  0802  170B               	bsf	11,6	;volatile
  3894  0803                     l211:
  3895  0803  0008               	return
  3896  0804                     __end_of_INT_SetEnable:
  3897                           
  3898                           	psect	text9
  3899  1B51                     __ptext9:	
  3900 ;; *************** function _Heater_Init *****************
  3901 ;; Defined at:
  3902 ;;		line 30 in file "Heater.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    4
  3923 ;; This function calls:
  3924 ;;		_DIO_init
  3925 ;; This function is called by:
  3926 ;;		_App_init
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           
  3931                           ;psect for function _Heater_Init
  3932  1B51                     _Heater_Init:
  3933  1B51                     l8220:	
  3934                           ;incstack = 0
  3935                           ; Regs used in _Heater_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3936                           
  3937                           
  3938                           ;Heater.c: 32:     DIO_init(2,0x20,0x00);
  3939  1B51  3020               	movlw	32
  3940  1B52  00FF               	movwf	btemp+1
  3941  1B53  087F               	movf	btemp+1,w
  3942  1B54  1283               	bcf	3,5	;RP0=0, select bank0
  3943  1B55  1303               	bcf	3,6	;RP1=0, select bank0
  3944  1B56  00AA               	movwf	DIO_init@u8_pins
  3945  1B57  01AB               	clrf	DIO_init@u8_direction
  3946  1B58  3002               	movlw	2
  3947  1B59  160A  118A  26EA  160A  158A  	fcall	_DIO_init
  3948  1B5E                     l195:
  3949  1B5E  0008               	return
  3950  1B5F                     __end_of_Heater_Init:
  3951                           
  3952                           	psect	text10
  3953  1267                     __ptext10:	
  3954 ;; *************** function _ExternInt_Init *****************
  3955 ;; Defined at:
  3956 ;;		line 59 in file "ExternalInterrupt.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  pstr_ExternI    1    wreg     PTR struct ExternInt_Cfg
  3959 ;;		 -> App_init@zft(3), 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  pstr_ExternI    1   18[BANK0 ] PTR struct ExternInt_Cfg
  3962 ;;		 -> App_init@zft(3), 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3972 ;;      Params:         0       0       0       0       0
  3973 ;;      Locals:         0       1       0       0       0
  3974 ;;      Temps:          0       2       0       0       0
  3975 ;;      Totals:         0       3       0       0       0
  3976 ;;Total ram usage:        3 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    4
  3979 ;; This function calls:
  3980 ;;		_INT_SetCallBackFunc
  3981 ;; This function is called by:
  3982 ;;		_App_init
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function _ExternInt_Init
  3988  1267                     _ExternInt_Init:
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _ExternInt_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3992                           ;ExternInt_Init@pstr_ExternIntCfg stored from wreg
  3993  1267  1283               	bcf	3,5	;RP0=0, select bank0
  3994  1268  1303               	bcf	3,6	;RP1=0, select bank0
  3995  1269  00B2               	movwf	ExternInt_Init@pstr_ExternIntCfg
  3996  126A                     l8250:
  3997                           
  3998                           ;ExternalInterrupt.c: 59: void ExternInt_Init(ExternInt_Cfg_s * pstr_ExternIntCfg);Exter
      +                          nalInterrupt.c: 60: {;ExternalInterrupt.c: 61:  switch(pstr_ExternIntCfg->ExternInt_No)
  3999  126A  2AA6               	goto	l8264
  4000  126B                     l816:	
  4001                           ;ExternalInterrupt.c: 62:  {;ExternalInterrupt.c: 64:   case (0) :
  4002                           
  4003                           
  4004                           ;ExternalInterrupt.c: 65:             (OPTION_REG)&=~(0x00);
  4005  126B  1683               	bsf	3,5	;RP0=1, select bank1
  4006  126C  1303               	bcf	3,6	;RP1=0, select bank1
  4007  126D  0801               	movf	1,w	;volatile
  4008                           
  4009                           ;ExternalInterrupt.c: 66:    switch (pstr_ExternIntCfg->ExternInt_Event)
  4010  126E  2A73               	goto	l8254
  4011  126F                     l818:	
  4012                           ;ExternalInterrupt.c: 67:    {;ExternalInterrupt.c: 68:    case 2 :
  4013                           
  4014                           
  4015                           ;ExternalInterrupt.c: 69:                 (OPTION_REG)|=(0x40);
  4016  126F  1683               	bsf	3,5	;RP0=1, select bank1
  4017  1270  1303               	bcf	3,6	;RP1=0, select bank1
  4018  1271  1701               	bsf	1,6	;volatile
  4019                           
  4020                           ;ExternalInterrupt.c: 70:     break;
  4021  1272  2A87               	goto	l8256
  4022  1273                     l8254:
  4023  1273  1283               	bcf	3,5	;RP0=0, select bank0
  4024  1274  1303               	bcf	3,6	;RP1=0, select bank0
  4025  1275  0A32               	incf	ExternInt_Init@pstr_ExternIntCfg,w
  4026  1276  0084               	movwf	4
  4027  1277  0800               	movf	0,w
  4028  1278  00B0               	movwf	??_ExternInt_Init
  4029  1279  01B1               	clrf	??_ExternInt_Init+1
  4030                           
  4031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4032                           ; Switch size 1, requested type "simple"
  4033                           ; Number of cases is 1, Range of values is 0 to 0
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte            4     3 (average)
  4037                           ; direct_byte           11     8 (fixed)
  4038                           ; jumptable            260     6 (fixed)
  4039                           ;	Chosen strategy is simple_byte
  4040  127A  0831               	movf	??_ExternInt_Init+1,w
  4041  127B  3A00               	xorlw	0	; case 0
  4042  127C  1903               	skipnz
  4043  127D  2A7F               	goto	l9812
  4044  127E  2A87               	goto	l8256
  4045  127F                     l9812:
  4046                           
  4047                           ; Switch size 1, requested type "simple"
  4048                           ; Number of cases is 2, Range of values is 2 to 3
  4049                           ; switch strategies available:
  4050                           ; Name         Instructions Cycles
  4051                           ; simple_byte            7     4 (average)
  4052                           ; direct_byte           17    11 (fixed)
  4053                           ; jumptable            263     9 (fixed)
  4054                           ;	Chosen strategy is simple_byte
  4055  127F  0830               	movf	??_ExternInt_Init,w
  4056  1280  3A02               	xorlw	2	; case 2
  4057  1281  1903               	skipnz
  4058  1282  2A6F               	goto	l818
  4059  1283  3A01               	xorlw	1	; case 3
  4060  1284  1903               	skipnz
  4061  1285  2A6F               	goto	l818
  4062  1286  2A87               	goto	l8256
  4063  1287                     l8256:
  4064                           
  4065                           ;ExternalInterrupt.c: 78:    if ( ((void *)0) != pstr_ExternIntCfg->ExternInt_CBF_Ptr)
  4066  1287  1283               	bcf	3,5	;RP0=0, select bank0
  4067  1288  0832               	movf	ExternInt_Init@pstr_ExternIntCfg,w
  4068  1289  3E02               	addlw	2
  4069  128A  0084               	movwf	4
  4070  128B  0800               	movf	0,w
  4071  128C  1903               	btfsc	3,2
  4072  128D  2A8F               	goto	u6301
  4073  128E  2A90               	goto	u6300
  4074  128F                     u6301:
  4075  128F  2AB9               	goto	l827
  4076  1290                     u6300:
  4077  1290                     l8258:
  4078                           
  4079                           ;ExternalInterrupt.c: 79:    {;ExternalInterrupt.c: 80:                 INT_SetCallBackF
      +                          unc(0,&INTCON,0x02,pstr_ExternIntCfg->ExternInt_CBF_Ptr );
  4080  1290  300B               	movlw	11
  4081  1291  00AA               	movwf	INT_SetCallBackFunc@pu8_Register
  4082  1292  3000               	movlw	0
  4083  1293  00AB               	movwf	INT_SetCallBackFunc@pu8_Register+1
  4084  1294  3002               	movlw	2
  4085  1295  00FF               	movwf	btemp+1
  4086  1296  087F               	movf	btemp+1,w
  4087  1297  00AC               	movwf	INT_SetCallBackFunc@u8_MASK
  4088  1298  0832               	movf	ExternInt_Init@pstr_ExternIntCfg,w
  4089  1299  3E02               	addlw	2
  4090  129A  0084               	movwf	4
  4091  129B  0800               	movf	0,w
  4092  129C  00FF               	movwf	btemp+1
  4093  129D  087F               	movf	btemp+1,w
  4094  129E  00AD               	movwf	INT_SetCallBackFunc@ptrf_CallBkFunc
  4095  129F  3000               	movlw	0
  4096  12A0  160A  158A  273F  160A  118A  	fcall	_INT_SetCallBackFunc
  4097  12A5  2AB9               	goto	l827
  4098  12A6                     l8264:
  4099  12A6  0832               	movf	ExternInt_Init@pstr_ExternIntCfg,w
  4100  12A7  0084               	movwf	4
  4101  12A8  1383               	bcf	3,7	;select IRP bank0
  4102  12A9  0800               	movf	0,w
  4103  12AA  00B0               	movwf	??_ExternInt_Init
  4104  12AB  01B1               	clrf	??_ExternInt_Init+1
  4105                           
  4106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4107                           ; Switch size 1, requested type "simple"
  4108                           ; Number of cases is 1, Range of values is 0 to 0
  4109                           ; switch strategies available:
  4110                           ; Name         Instructions Cycles
  4111                           ; simple_byte            4     3 (average)
  4112                           ; direct_byte           11     8 (fixed)
  4113                           ; jumptable            260     6 (fixed)
  4114                           ;	Chosen strategy is simple_byte
  4115  12AC  0831               	movf	??_ExternInt_Init+1,w
  4116  12AD  3A00               	xorlw	0	; case 0
  4117  12AE  1903               	skipnz
  4118  12AF  2AB1               	goto	l9814
  4119  12B0  2AB9               	goto	l827
  4120  12B1                     l9814:
  4121                           
  4122                           ; Switch size 1, requested type "simple"
  4123                           ; Number of cases is 2, Range of values is 0 to 1
  4124                           ; switch strategies available:
  4125                           ; Name         Instructions Cycles
  4126                           ; simple_byte            7     4 (average)
  4127                           ; direct_byte           14     8 (fixed)
  4128                           ; jumptable            260     6 (fixed)
  4129                           ;	Chosen strategy is simple_byte
  4130  12B1  0830               	movf	??_ExternInt_Init,w
  4131  12B2  3A00               	xorlw	0	; case 0
  4132  12B3  1903               	skipnz
  4133  12B4  2A6B               	goto	l816
  4134  12B5  3A01               	xorlw	1	; case 1
  4135  12B6  1903               	skipnz
  4136  12B7  2AB9               	goto	l827
  4137  12B8  2AB9               	goto	l827
  4138  12B9                     l827:
  4139  12B9  0008               	return
  4140  12BA                     __end_of_ExternInt_Init:
  4141                           
  4142                           	psect	text11
  4143  1F3F                     __ptext11:	
  4144 ;; *************** function _INT_SetCallBackFunc *****************
  4145 ;; Defined at:
  4146 ;;		line 111 in file "Interrupts.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  u8_INT_Prior    1    wreg     unsigned char 
  4149 ;;  pu8_Register    2   10[BANK0 ] PTR volatile unsigned ch
  4150 ;;		 -> PIR1(1), INTCON(1), 
  4151 ;;  u8_MASK         1   12[BANK0 ] unsigned char 
  4152 ;;  ptrf_CallBkF    1   13[BANK0 ] PTR FTN()void 
  4153 ;;		 -> EXT_INT_Callbk(1), Timer_Callbk(1), 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  u8_INT_Prior    1   15[BANK0 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       4       0       0       0
  4166 ;;      Locals:         0       1       0       0       0
  4167 ;;      Temps:          0       1       0       0       0
  4168 ;;      Totals:         0       6       0       0       0
  4169 ;;Total ram usage:        6 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    3
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_Timer_Init
  4176 ;;		_ExternInt_Init
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _INT_SetCallBackFunc
  4182  1F3F                     _INT_SetCallBackFunc:
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _INT_SetCallBackFunc: [wreg-fsr0h+status,2+status,0+btemp+1]
  4186                           ;INT_SetCallBackFunc@u8_INT_Priority stored from wreg
  4187  1F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4188  1F40  1303               	bcf	3,6	;RP1=0, select bank0
  4189  1F41  00AF               	movwf	INT_SetCallBackFunc@u8_INT_Priority
  4190  1F42                     l7910:
  4191                           
  4192                           ;Interrupts.c: 111: void INT_SetCallBackFunc(uint8 u8_INT_Priority,volatile uint8 * pu8_
      +                          Register,uint8 u8_MASK ,;Interrupts.c: 112:                          Ptrfunc ptrf_CallBk
      +                          Func );Interrupts.c: 113: {;Interrupts.c: 114:     ast_INTS[u8_INT_Priority].REGISTER=pu
      +                          8_Register;
  4193  1F42  082F               	movf	INT_SetCallBackFunc@u8_INT_Priority,w
  4194  1F43  00AE               	movwf	??_INT_SetCallBackFunc
  4195  1F44  3001               	movlw	1
  4196  1F45                     u5855:
  4197  1F45  1003               	clrc
  4198  1F46  0DAE               	rlf	??_INT_SetCallBackFunc,f
  4199  1F47  3EFF               	addlw	-1
  4200  1F48  1D03               	skipz
  4201  1F49  2F45               	goto	u5855
  4202  1F4A  1003               	clrc
  4203  1F4B  0D2E               	rlf	??_INT_SetCallBackFunc,w
  4204  1F4C  3EA9               	addlw	(low ((_ast_INTS| 0+1)))& (0+255)
  4205  1F4D  0084               	movwf	4
  4206  1F4E  082A               	movf	INT_SetCallBackFunc@pu8_Register,w
  4207  1F4F  1383               	bcf	3,7	;select IRP bank1
  4208  1F50  0080               	movwf	0
  4209  1F51  0A84               	incf	4,f
  4210  1F52  082B               	movf	INT_SetCallBackFunc@pu8_Register+1,w
  4211  1F53  0080               	movwf	0
  4212  1F54                     l7912:
  4213                           
  4214                           ;Interrupts.c: 115:     ast_INTS[u8_INT_Priority].MASK=u8_MASK;
  4215  1F54  082C               	movf	INT_SetCallBackFunc@u8_MASK,w
  4216  1F55  00FF               	movwf	btemp+1
  4217  1F56  082F               	movf	INT_SetCallBackFunc@u8_INT_Priority,w
  4218  1F57  00AE               	movwf	??_INT_SetCallBackFunc
  4219  1F58  3001               	movlw	1
  4220  1F59                     u5865:
  4221  1F59  1003               	clrc
  4222  1F5A  0DAE               	rlf	??_INT_SetCallBackFunc,f
  4223  1F5B  3EFF               	addlw	-1
  4224  1F5C  1D03               	skipz
  4225  1F5D  2F59               	goto	u5865
  4226  1F5E  1003               	clrc
  4227  1F5F  0D2E               	rlf	??_INT_SetCallBackFunc,w
  4228  1F60  3EAB               	addlw	(low ((_ast_INTS| 0+3)))& (0+255)
  4229  1F61  0084               	movwf	4
  4230  1F62  087F               	movf	btemp+1,w
  4231  1F63  0080               	movwf	0
  4232  1F64                     l7914:
  4233                           
  4234                           ;Interrupts.c: 116:     if(((void *)0) != ptrf_CallBkFunc )
  4235  1F64  082D               	movf	INT_SetCallBackFunc@ptrf_CallBkFunc,w
  4236  1F65  1903               	btfsc	3,2
  4237  1F66  2F68               	goto	u5871
  4238  1F67  2F69               	goto	u5870
  4239  1F68                     u5871:
  4240  1F68  2F79               	goto	l218
  4241  1F69                     u5870:
  4242  1F69                     l7916:
  4243                           
  4244                           ;Interrupts.c: 117:     {;Interrupts.c: 118:         ast_INTS[u8_INT_Priority].aptrf_INT
      +                          = ptrf_CallBkFunc;
  4245  1F69  082D               	movf	INT_SetCallBackFunc@ptrf_CallBkFunc,w
  4246  1F6A  00FF               	movwf	btemp+1
  4247  1F6B  082F               	movf	INT_SetCallBackFunc@u8_INT_Priority,w
  4248  1F6C  00AE               	movwf	??_INT_SetCallBackFunc
  4249  1F6D  3001               	movlw	1
  4250  1F6E                     u5885:
  4251  1F6E  1003               	clrc
  4252  1F6F  0DAE               	rlf	??_INT_SetCallBackFunc,f
  4253  1F70  3EFF               	addlw	-1
  4254  1F71  1D03               	skipz
  4255  1F72  2F6E               	goto	u5885
  4256  1F73  1003               	clrc
  4257  1F74  0D2E               	rlf	??_INT_SetCallBackFunc,w
  4258  1F75  3EA8               	addlw	(low (_ast_INTS| 0))& (0+255)
  4259  1F76  0084               	movwf	4
  4260  1F77  087F               	movf	btemp+1,w
  4261  1F78  0080               	movwf	0
  4262  1F79                     l218:
  4263  1F79  0008               	return
  4264  1F7A                     __end_of_INT_SetCallBackFunc:
  4265                           
  4266                           	psect	text12
  4267  1C72                     __ptext12:	
  4268 ;; *************** function _ExternInt_Enable *****************
  4269 ;; Defined at:
  4270 ;;		line 133 in file "ExternalInterrupt.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  u8_ExternInt    1    wreg     unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  u8_ExternInt    1   12[BANK0 ] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4284 ;;      Params:         0       0       0       0       0
  4285 ;;      Locals:         0       1       0       0       0
  4286 ;;      Temps:          0       2       0       0       0
  4287 ;;      Totals:         0       3       0       0       0
  4288 ;;Total ram usage:        3 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    3
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_App_init
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _ExternInt_Enable
  4300  1C72                     _ExternInt_Enable:
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _ExternInt_Enable: [wreg-fsr0h+status,2+status,0]
  4304                           ;ExternInt_Enable@u8_ExternInt_Type stored from wreg
  4305  1C72  1283               	bcf	3,5	;RP0=0, select bank0
  4306  1C73  1303               	bcf	3,6	;RP1=0, select bank0
  4307  1C74  00AC               	movwf	ExternInt_Enable@u8_ExternInt_Type
  4308  1C75                     l8278:
  4309                           
  4310                           ;ExternalInterrupt.c: 133: void ExternInt_Enable(uint8 u8_ExternInt_Type);ExternalInterr
      +                          upt.c: 134: {;ExternalInterrupt.c: 136:  switch (u8_ExternInt_Type)
  4311  1C75  2C7A               	goto	l8282
  4312  1C76                     l839:	
  4313                           ;ExternalInterrupt.c: 137:  {;ExternalInterrupt.c: 138:   case 0 :
  4314                           
  4315                           
  4316                           ;ExternalInterrupt.c: 139:    (INTCON)|=(0x10);
  4317  1C76  160B               	bsf	11,4	;volatile
  4318                           
  4319                           ;ExternalInterrupt.c: 140:    break;
  4320  1C77  2C8A               	goto	l843
  4321  1C78                     l841:	
  4322                           ;ExternalInterrupt.c: 141:   case 1 :
  4323                           
  4324                           
  4325                           ;ExternalInterrupt.c: 142:    (INTCON)|=(0x08);
  4326  1C78  158B               	bsf	11,3	;volatile
  4327                           
  4328                           ;ExternalInterrupt.c: 143:    break;
  4329  1C79  2C8A               	goto	l843
  4330  1C7A                     l8282:
  4331  1C7A  082C               	movf	ExternInt_Enable@u8_ExternInt_Type,w
  4332  1C7B  00AA               	movwf	??_ExternInt_Enable
  4333  1C7C  01AB               	clrf	??_ExternInt_Enable+1
  4334                           
  4335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 1, Range of values is 0 to 0
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte            4     3 (average)
  4341                           ; direct_byte           11     8 (fixed)
  4342                           ; jumptable            260     6 (fixed)
  4343                           ;	Chosen strategy is simple_byte
  4344  1C7D  082B               	movf	??_ExternInt_Enable+1,w
  4345  1C7E  3A00               	xorlw	0	; case 0
  4346  1C7F  1903               	skipnz
  4347  1C80  2C82               	goto	l9816
  4348  1C81  2C8A               	goto	l843
  4349  1C82                     l9816:
  4350                           
  4351                           ; Switch size 1, requested type "simple"
  4352                           ; Number of cases is 2, Range of values is 0 to 1
  4353                           ; switch strategies available:
  4354                           ; Name         Instructions Cycles
  4355                           ; simple_byte            7     4 (average)
  4356                           ; direct_byte           14     8 (fixed)
  4357                           ; jumptable            260     6 (fixed)
  4358                           ;	Chosen strategy is simple_byte
  4359  1C82  082A               	movf	??_ExternInt_Enable,w
  4360  1C83  3A00               	xorlw	0	; case 0
  4361  1C84  1903               	skipnz
  4362  1C85  2C76               	goto	l839
  4363  1C86  3A01               	xorlw	1	; case 1
  4364  1C87  1903               	skipnz
  4365  1C88  2C78               	goto	l841
  4366  1C89  2C8A               	goto	l843
  4367  1C8A                     l843:
  4368  1C8A  0008               	return
  4369  1C8B                     __end_of_ExternInt_Enable:
  4370                           
  4371                           	psect	text13
  4372  1214                     __ptext13:	
  4373 ;; *************** function _EEPROM_Read *****************
  4374 ;; Defined at:
  4375 ;;		line 76 in file "EEPROM.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  u8_Address      1    wreg     unsigned char 
  4378 ;;  pu8_Data        1   11[BANK0 ] PTR unsigned char 
  4379 ;;		 -> App_init@temp(1), u8_SetTemperature(1), 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  u8_Address      1   12[BANK0 ] unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         0       1       0       0       0
  4392 ;;      Locals:         0       1       0       0       0
  4393 ;;      Temps:          0       0       0       0       0
  4394 ;;      Totals:         0       2       0       0       0
  4395 ;;Total ram usage:        2 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    5
  4398 ;; This function calls:
  4399 ;;		_I2C_Master_AckEN
  4400 ;;		_I2C_Master_EnableRead
  4401 ;;		_I2C_Master_Read
  4402 ;;		_I2C_Master_Start
  4403 ;;		_I2C_Master_Stop
  4404 ;;		_I2C_Master_WaitACK
  4405 ;;		_I2C_Master_Write
  4406 ;; This function is called by:
  4407 ;;		_App_init
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _EEPROM_Read
  4413  1214                     _EEPROM_Read:
  4414                           
  4415                           ;incstack = 0
  4416                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4417                           ;EEPROM_Read@u8_Address stored from wreg
  4418  1214  1283               	bcf	3,5	;RP0=0, select bank0
  4419  1215  1303               	bcf	3,6	;RP1=0, select bank0
  4420  1216  00AC               	movwf	EEPROM_Read@u8_Address
  4421  1217                     l8470:
  4422                           
  4423                           ;EEPROM.c: 76: void EEPROM_Read(uint8 u8_Address,uint8 * pu8_Data);EEPROM.c: 77: {;EEPRO
      +                          M.c: 78:     I2C_Master_Start();
  4424  1217  160A  158A  236F  160A  118A  	fcall	_I2C_Master_Start
  4425                           
  4426                           ;EEPROM.c: 79:     I2C_Master_Write(0xA0);
  4427  121C  30A0               	movlw	160
  4428  121D  160A  158A  23D2  160A  118A  	fcall	_I2C_Master_Write
  4429  1222                     l8472:
  4430                           
  4431                           ;EEPROM.c: 80:     I2C_Master_WaitACK();
  4432  1222  160A  158A  22E5  160A  118A  	fcall	_I2C_Master_WaitACK
  4433  1227                     l8474:
  4434                           
  4435                           ;EEPROM.c: 81:     I2C_Master_Write(u8_Address);
  4436  1227  1283               	bcf	3,5	;RP0=0, select bank0
  4437  1228  1303               	bcf	3,6	;RP1=0, select bank0
  4438  1229  082C               	movf	EEPROM_Read@u8_Address,w
  4439  122A  160A  158A  23D2  160A  118A  	fcall	_I2C_Master_Write
  4440                           
  4441                           ;EEPROM.c: 82:     I2C_Master_WaitACK();
  4442  122F  160A  158A  22E5  160A  118A  	fcall	_I2C_Master_WaitACK
  4443  1234                     l8476:
  4444                           
  4445                           ;EEPROM.c: 83:     I2C_Master_Stop();
  4446  1234  160A  158A  237F  160A  118A  	fcall	_I2C_Master_Stop
  4447  1239                     l8478:
  4448                           
  4449                           ;EEPROM.c: 87:     I2C_Master_Start();
  4450  1239  160A  158A  236F  160A  118A  	fcall	_I2C_Master_Start
  4451                           
  4452                           ;EEPROM.c: 88:     I2C_Master_WaitACK();
  4453  123E  160A  158A  22E5  160A  118A  	fcall	_I2C_Master_WaitACK
  4454  1243                     l8480:
  4455                           
  4456                           ;EEPROM.c: 90:     I2C_Master_Write(0xA1);
  4457  1243  30A1               	movlw	161
  4458  1244  160A  158A  23D2  160A  118A  	fcall	_I2C_Master_Write
  4459  1249                     l8482:
  4460                           
  4461                           ;EEPROM.c: 91:     I2C_Master_WaitACK();
  4462  1249  160A  158A  22E5  160A  118A  	fcall	_I2C_Master_WaitACK
  4463                           
  4464                           ;EEPROM.c: 94:     I2C_Master_EnableRead();
  4465  124E  160A  158A  238F  160A  118A  	fcall	_I2C_Master_EnableRead
  4466  1253                     l8484:
  4467                           
  4468                           ;EEPROM.c: 96:     I2C_Master_Read(pu8_Data);
  4469  1253  1283               	bcf	3,5	;RP0=0, select bank0
  4470  1254  1303               	bcf	3,6	;RP1=0, select bank0
  4471  1255  082B               	movf	EEPROM_Read@pu8_Data,w
  4472  1256  160A  158A  245B  160A  118A  	fcall	_I2C_Master_Read
  4473  125B                     l8486:
  4474                           
  4475                           ;EEPROM.c: 99:     I2C_Master_AckEN(2);
  4476  125B  3002               	movlw	2
  4477  125C  160A  158A  24AB  160A  118A  	fcall	_I2C_Master_AckEN
  4478  1261                     l8488:
  4479                           
  4480                           ;EEPROM.c: 101:     I2C_Master_Stop();
  4481  1261  160A  158A  237F  160A  118A  	fcall	_I2C_Master_Stop
  4482  1266                     l876:
  4483  1266  0008               	return
  4484  1267                     __end_of_EEPROM_Read:
  4485                           
  4486                           	psect	text14
  4487  1AE5                     __ptext14:	
  4488 ;; *************** function _I2C_Master_WaitACK *****************
  4489 ;; Defined at:
  4490 ;;		line 233 in file "I2c.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		None
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4504 ;;      Params:         0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    3
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_EEPROM_Read
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           
  4519                           ;psect for function _I2C_Master_WaitACK
  4520  1AE5                     _I2C_Master_WaitACK:
  4521  1AE5                     l8074:	
  4522                           ;incstack = 0
  4523                           ; Regs used in _I2C_Master_WaitACK: []
  4524                           
  4525  1AE5                     l803:	
  4526                           ;I2c.c: 236:     while(SSPCON2 & 0x40);
  4527                           
  4528  1AE5  1683               	bsf	3,5	;RP0=1, select bank1
  4529  1AE6  1303               	bcf	3,6	;RP1=0, select bank1
  4530  1AE7  1B11               	btfsc	17,6	;volatile
  4531  1AE8  2AEA               	goto	u6051
  4532  1AE9  2AEB               	goto	u6050
  4533  1AEA                     u6051:
  4534  1AEA  2AE5               	goto	l803
  4535  1AEB                     u6050:
  4536  1AEB                     l806:
  4537  1AEB  0008               	return
  4538  1AEC                     __end_of_I2C_Master_WaitACK:
  4539                           
  4540                           	psect	text15
  4541  1C5B                     __ptext15:	
  4542 ;; *************** function _I2C_Master_Read *****************
  4543 ;; Defined at:
  4544 ;;		line 199 in file "I2c.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  pu8_Data        1    wreg     PTR unsigned char 
  4547 ;;		 -> App_init@temp(1), u8_SetTemperature(1), 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  pu8_Data        1   10[BANK0 ] PTR unsigned char 
  4550 ;;		 -> App_init@temp(1), u8_SetTemperature(1), 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4560 ;;      Params:         0       0       0       0       0
  4561 ;;      Locals:         0       1       0       0       0
  4562 ;;      Temps:          0       0       0       0       0
  4563 ;;      Totals:         0       1       0       0       0
  4564 ;;Total ram usage:        1 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    4
  4567 ;; This function calls:
  4568 ;;		_I2C_Master_Wait
  4569 ;; This function is called by:
  4570 ;;		_EEPROM_Read
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           
  4575                           ;psect for function _I2C_Master_Read
  4576  1C5B                     _I2C_Master_Read:
  4577                           
  4578                           ;incstack = 0
  4579                           ; Regs used in _I2C_Master_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4580                           ;I2C_Master_Read@pu8_Data stored from wreg
  4581  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4582  1C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4583  1C5D  00AA               	movwf	I2C_Master_Read@pu8_Data
  4584  1C5E                     l8062:
  4585                           
  4586                           ;I2c.c: 199: void I2C_Master_Read(uint8 * pu8_Data);I2c.c: 200: {;I2c.c: 201:     if(u8_
      +                          ModuleMode == 1)
  4587  1C5E  035C               	decf	_u8_ModuleMode,w
  4588  1C5F  1D03               	btfss	3,2
  4589  1C60  2C62               	goto	u6031
  4590  1C61  2C63               	goto	u6030
  4591  1C62                     u6031:
  4592  1C62  2C68               	goto	l8066
  4593  1C63                     u6030:
  4594  1C63                     l8064:
  4595                           
  4596                           ;I2c.c: 202:     {;I2c.c: 203:         I2C_Master_Wait();
  4597  1C63  160A  158A  230E  160A  158A  	fcall	_I2C_Master_Wait
  4598  1C68                     l8066:
  4599                           
  4600                           ;I2c.c: 205:     *pu8_Data=SSPBUF;
  4601  1C68  1283               	bcf	3,5	;RP0=0, select bank0
  4602  1C69  1303               	bcf	3,6	;RP1=0, select bank0
  4603  1C6A  0813               	movf	19,w	;volatile
  4604  1C6B  00FF               	movwf	btemp+1
  4605  1C6C  082A               	movf	I2C_Master_Read@pu8_Data,w
  4606  1C6D  0084               	movwf	4
  4607  1C6E  087F               	movf	btemp+1,w
  4608  1C6F  1383               	bcf	3,7	;select IRP bank0
  4609  1C70  0080               	movwf	0
  4610  1C71                     l796:
  4611  1C71  0008               	return
  4612  1C72                     __end_of_I2C_Master_Read:
  4613                           
  4614                           	psect	text16
  4615  1B8F                     __ptext16:	
  4616 ;; *************** function _I2C_Master_EnableRead *****************
  4617 ;; Defined at:
  4618 ;;		line 217 in file "I2c.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4632 ;;      Params:         0       0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0
  4635 ;;      Totals:         0       0       0       0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    4
  4639 ;; This function calls:
  4640 ;;		_I2C_Master_Wait
  4641 ;; This function is called by:
  4642 ;;		_EEPROM_Read
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _I2C_Master_EnableRead
  4648  1B8F                     _I2C_Master_EnableRead:
  4649  1B8F                     l8068:	
  4650                           ;incstack = 0
  4651                           ; Regs used in _I2C_Master_EnableRead: [wreg+status,2+status,0+pclath+cstack]
  4652                           
  4653                           
  4654                           ;I2c.c: 219:     if(u8_ModuleMode == 1)
  4655  1B8F  1283               	bcf	3,5	;RP0=0, select bank0
  4656  1B90  1303               	bcf	3,6	;RP1=0, select bank0
  4657  1B91  035C               	decf	_u8_ModuleMode,w
  4658  1B92  1D03               	btfss	3,2
  4659  1B93  2B95               	goto	u6041
  4660  1B94  2B96               	goto	u6040
  4661  1B95                     u6041:
  4662  1B95  2B9B               	goto	l8072
  4663  1B96                     u6040:
  4664  1B96                     l8070:
  4665                           
  4666                           ;I2c.c: 220:     {;I2c.c: 221:         I2C_Master_Wait();
  4667  1B96  160A  158A  230E  160A  158A  	fcall	_I2C_Master_Wait
  4668  1B9B                     l8072:
  4669                           
  4670                           ;I2c.c: 223:     (SSPCON2)|=(0X08);
  4671  1B9B  1683               	bsf	3,5	;RP0=1, select bank1
  4672  1B9C  1303               	bcf	3,6	;RP1=0, select bank1
  4673  1B9D  1591               	bsf	17,3	;volatile
  4674  1B9E                     l800:
  4675  1B9E  0008               	return
  4676  1B9F                     __end_of_I2C_Master_EnableRead:
  4677                           
  4678                           	psect	text17
  4679  1CAB                     __ptext17:	
  4680 ;; *************** function _I2C_Master_AckEN *****************
  4681 ;; Defined at:
  4682 ;;		line 155 in file "I2c.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  u8_ACK_State    1    wreg     unsigned char 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  u8_ACK_State    1   10[BANK0 ] unsigned char 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4696 ;;      Params:         0       0       0       0       0
  4697 ;;      Locals:         0       1       0       0       0
  4698 ;;      Temps:          0       0       0       0       0
  4699 ;;      Totals:         0       1       0       0       0
  4700 ;;Total ram usage:        1 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    4
  4703 ;; This function calls:
  4704 ;;		_I2C_Master_Wait
  4705 ;; This function is called by:
  4706 ;;		_EEPROM_Read
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           
  4711                           ;psect for function _I2C_Master_AckEN
  4712  1CAB                     _I2C_Master_AckEN:
  4713                           
  4714                           ;incstack = 0
  4715                           ; Regs used in _I2C_Master_AckEN: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4716                           ;I2C_Master_AckEN@u8_ACK_State stored from wreg
  4717  1CAB  1283               	bcf	3,5	;RP0=0, select bank0
  4718  1CAC  1303               	bcf	3,6	;RP1=0, select bank0
  4719  1CAD  00AA               	movwf	I2C_Master_AckEN@u8_ACK_State
  4720  1CAE                     l8054:
  4721                           
  4722                           ;I2c.c: 155: void I2C_Master_AckEN(uint8 u8_ACK_State);I2c.c: 156: {;I2c.c: 157:     if(
      +                          u8_ModuleMode == 1)
  4723  1CAE  035C               	decf	_u8_ModuleMode,w
  4724  1CAF  1D03               	btfss	3,2
  4725  1CB0  2CB2               	goto	u6011
  4726  1CB1  2CB3               	goto	u6010
  4727  1CB2                     u6011:
  4728  1CB2  2CB8               	goto	l8058
  4729  1CB3                     u6010:
  4730  1CB3                     l8056:
  4731                           
  4732                           ;I2c.c: 158:     {;I2c.c: 159:       I2C_Master_Wait();
  4733  1CB3  160A  158A  230E  160A  158A  	fcall	_I2C_Master_Wait
  4734  1CB8                     l8058:
  4735                           
  4736                           ;I2c.c: 163:     if(u8_ACK_State == 1)
  4737  1CB8  1283               	bcf	3,5	;RP0=0, select bank0
  4738  1CB9  1303               	bcf	3,6	;RP1=0, select bank0
  4739  1CBA  032A               	decf	I2C_Master_AckEN@u8_ACK_State,w
  4740  1CBB  1D03               	btfss	3,2
  4741  1CBC  2CBE               	goto	u6021
  4742  1CBD  2CBF               	goto	u6020
  4743  1CBE                     u6021:
  4744  1CBE  2CC6               	goto	l786
  4745  1CBF                     u6020:
  4746  1CBF                     l8060:
  4747                           
  4748                           ;I2c.c: 164:     {;I2c.c: 165:        (SSPCON2)&=~(0x20);
  4749  1CBF  30DF               	movlw	223
  4750  1CC0  00FF               	movwf	btemp+1
  4751  1CC1  087F               	movf	btemp+1,w
  4752  1CC2  1683               	bsf	3,5	;RP0=1, select bank1
  4753  1CC3  1303               	bcf	3,6	;RP1=0, select bank1
  4754  1CC4  0591               	andwf	17,f	;volatile
  4755                           
  4756                           ;I2c.c: 166:     }
  4757  1CC5  2CC9               	goto	l787
  4758  1CC6                     l786:	
  4759                           ;I2c.c: 167:     else
  4760                           
  4761                           
  4762                           ;I2c.c: 168:     {;I2c.c: 169:        (SSPCON2)|=(0x20);
  4763  1CC6  1683               	bsf	3,5	;RP0=1, select bank1
  4764  1CC7  1303               	bcf	3,6	;RP1=0, select bank1
  4765  1CC8  1691               	bsf	17,5	;volatile
  4766  1CC9                     l787:	
  4767                           ;I2c.c: 170:     }
  4768                           
  4769                           
  4770                           ;I2c.c: 172:     (SSPCON2)|=(0x10);
  4771  1CC9  1611               	bsf	17,4	;volatile
  4772  1CCA                     l788:
  4773  1CCA  0008               	return
  4774  1CCB                     __end_of_I2C_Master_AckEN:
  4775                           
  4776                           	psect	text18
  4777  1BC1                     __ptext18:	
  4778 ;; *************** function _EEPROM_Init *****************
  4779 ;; Defined at:
  4780 ;;		line 42 in file "EEPROM.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4794 ;;      Params:         0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    5
  4801 ;; This function calls:
  4802 ;;		_I2C_Master_Init
  4803 ;; This function is called by:
  4804 ;;		_App_init
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _EEPROM_Init
  4810  1BC1                     _EEPROM_Init:
  4811  1BC1                     l8468:	
  4812                           ;incstack = 0
  4813                           ; Regs used in _EEPROM_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4814                           
  4815                           
  4816                           ;EEPROM.c: 44:     I2C_Master_Init(1,100000);
  4817  1BC1  3000               	movlw	0
  4818  1BC2  1283               	bcf	3,5	;RP0=0, select bank0
  4819  1BC3  1303               	bcf	3,6	;RP1=0, select bank0
  4820  1BC4  00BB               	movwf	I2C_Master_Init@u32_Baudrate+3
  4821  1BC5  3001               	movlw	1
  4822  1BC6  00BA               	movwf	I2C_Master_Init@u32_Baudrate+2
  4823  1BC7  3086               	movlw	134
  4824  1BC8  00B9               	movwf	I2C_Master_Init@u32_Baudrate+1
  4825  1BC9  30A0               	movlw	160
  4826  1BCA  00B8               	movwf	I2C_Master_Init@u32_Baudrate
  4827  1BCB  3001               	movlw	1
  4828  1BCC  160A  118A  2311  160A  158A  	fcall	_I2C_Master_Init
  4829  1BD1                     l870:
  4830  1BD1  0008               	return
  4831  1BD2                     __end_of_EEPROM_Init:
  4832                           
  4833                           	psect	text19
  4834  1311                     __ptext19:	
  4835 ;; *************** function _I2C_Master_Init *****************
  4836 ;; Defined at:
  4837 ;;		line 61 in file "I2c.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  u8_Mode         1    wreg     unsigned char 
  4840 ;;  u32_Baudrate    4   24[BANK0 ] unsigned long 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  u8_Mode         1   32[BANK0 ] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4852 ;;      Params:         0       4       0       0       0
  4853 ;;      Locals:         0       1       0       0       0
  4854 ;;      Temps:          0       4       0       0       0
  4855 ;;      Totals:         0       9       0       0       0
  4856 ;;Total ram usage:        9 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    4
  4859 ;; This function calls:
  4860 ;;		_DIO_init
  4861 ;;		___lldiv
  4862 ;; This function is called by:
  4863 ;;		_EEPROM_Init
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function _I2C_Master_Init
  4869  1311                     _I2C_Master_Init:
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in _I2C_Master_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4873                           ;I2C_Master_Init@u8_Mode stored from wreg
  4874  1311  1283               	bcf	3,5	;RP0=0, select bank0
  4875  1312  1303               	bcf	3,6	;RP1=0, select bank0
  4876  1313  00C0               	movwf	I2C_Master_Init@u8_Mode
  4877  1314                     l8036:
  4878                           
  4879                           ;I2c.c: 61: void I2C_Master_Init(uint8 u8_Mode,uint32 u32_Baudrate);I2c.c: 62: {;I2c.c: 
      +                          64:     DIO_init(2,0x08|0x10,0xFF);
  4880  1314  3018               	movlw	24
  4881  1315  00FF               	movwf	btemp+1
  4882  1316  087F               	movf	btemp+1,w
  4883  1317  00AA               	movwf	DIO_init@u8_pins
  4884  1318  30FF               	movlw	255
  4885  1319  00FF               	movwf	btemp+1
  4886  131A  087F               	movf	btemp+1,w
  4887  131B  00AB               	movwf	DIO_init@u8_direction
  4888  131C  3002               	movlw	2
  4889  131D  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  4890  1322                     l8038:
  4891                           
  4892                           ;I2c.c: 66:     (SSPSTAT)&=~(0xFF);
  4893  1322  1683               	bsf	3,5	;RP0=1, select bank1
  4894  1323  1303               	bcf	3,6	;RP1=0, select bank1
  4895  1324  0194               	clrf	20	;volatile
  4896  1325                     l8040:
  4897                           
  4898                           ;I2c.c: 67:     (SSPCON2)&=~(0xFF);
  4899  1325  0191               	clrf	17	;volatile
  4900  1326                     l8042:
  4901                           
  4902                           ;I2c.c: 70:     (SSPCON)|=(0X08);
  4903  1326  1283               	bcf	3,5	;RP0=0, select bank0
  4904  1327  1303               	bcf	3,6	;RP1=0, select bank0
  4905  1328  1594               	bsf	20,3	;volatile
  4906  1329                     l8044:
  4907                           
  4908                           ;I2c.c: 72:     (SSPCON)|=(0X20);
  4909  1329  1694               	bsf	20,5	;volatile
  4910  132A                     l8046:
  4911                           
  4912                           ;I2c.c: 74:     SSPADD = (8000000/(4*u32_Baudrate))-1;
  4913  132A  0838               	movf	I2C_Master_Init@u32_Baudrate,w
  4914  132B  00BC               	movwf	??_I2C_Master_Init
  4915  132C  0839               	movf	I2C_Master_Init@u32_Baudrate+1,w
  4916  132D  00BD               	movwf	??_I2C_Master_Init+1
  4917  132E  083A               	movf	I2C_Master_Init@u32_Baudrate+2,w
  4918  132F  00BE               	movwf	??_I2C_Master_Init+2
  4919  1330  083B               	movf	I2C_Master_Init@u32_Baudrate+3,w
  4920  1331  00BF               	movwf	??_I2C_Master_Init+3
  4921  1332  3002               	movlw	2
  4922  1333                     u5995:
  4923  1333  1003               	clrc
  4924  1334  0DBC               	rlf	??_I2C_Master_Init,f
  4925  1335  0DBD               	rlf	??_I2C_Master_Init+1,f
  4926  1336  0DBE               	rlf	??_I2C_Master_Init+2,f
  4927  1337  0DBF               	rlf	??_I2C_Master_Init+3,f
  4928  1338                     u5990:
  4929  1338  3EFF               	addlw	-1
  4930  1339  1D03               	skipz
  4931  133A  2B33               	goto	u5995
  4932  133B  083F               	movf	??_I2C_Master_Init+3,w
  4933  133C  00AD               	movwf	___lldiv@divisor+3
  4934  133D  083E               	movf	??_I2C_Master_Init+2,w
  4935  133E  00AC               	movwf	___lldiv@divisor+2
  4936  133F  083D               	movf	??_I2C_Master_Init+1,w
  4937  1340  00AB               	movwf	___lldiv@divisor+1
  4938  1341  083C               	movf	??_I2C_Master_Init,w
  4939  1342  00AA               	movwf	___lldiv@divisor
  4940  1343  3000               	movlw	0
  4941  1344  00B1               	movwf	___lldiv@dividend+3
  4942  1345  307A               	movlw	122
  4943  1346  00B0               	movwf	___lldiv@dividend+2
  4944  1347  3012               	movlw	18
  4945  1348  00AF               	movwf	___lldiv@dividend+1
  4946  1349  3000               	movlw	0
  4947  134A  00AE               	movwf	___lldiv@dividend
  4948  134B  160A  118A  25B0  160A  118A  	fcall	___lldiv
  4949  1350  1283               	bcf	3,5	;RP0=0, select bank0
  4950  1351  1303               	bcf	3,6	;RP1=0, select bank0
  4951  1352  082A               	movf	?___lldiv,w
  4952  1353  3EFF               	addlw	255
  4953  1354  1683               	bsf	3,5	;RP0=1, select bank1
  4954  1355  1303               	bcf	3,6	;RP1=0, select bank1
  4955  1356  0093               	movwf	19	;volatile
  4956  1357                     l8048:
  4957                           
  4958                           ;I2c.c: 77:     if(u8_Mode == 2)
  4959  1357  3002               	movlw	2
  4960  1358  1283               	bcf	3,5	;RP0=0, select bank0
  4961  1359  1303               	bcf	3,6	;RP1=0, select bank0
  4962  135A  0640               	xorwf	I2C_Master_Init@u8_Mode,w
  4963  135B  1D03               	btfss	3,2
  4964  135C  2B5E               	goto	u6001
  4965  135D  2B5F               	goto	u6000
  4966  135E                     u6001:
  4967  135E  2B62               	goto	l8052
  4968  135F                     u6000:
  4969  135F                     l8050:
  4970                           
  4971                           ;I2c.c: 78:     {;I2c.c: 79:         (PIE1)|=(0x08);
  4972  135F  1683               	bsf	3,5	;RP0=1, select bank1
  4973  1360  1303               	bcf	3,6	;RP1=0, select bank1
  4974  1361  158C               	bsf	12,3	;volatile
  4975  1362                     l8052:
  4976                           
  4977                           ;I2c.c: 82:     u8_ModuleMode = u8_Mode;
  4978  1362  1283               	bcf	3,5	;RP0=0, select bank0
  4979  1363  0840               	movf	I2C_Master_Init@u8_Mode,w
  4980  1364  00FF               	movwf	btemp+1
  4981  1365  087F               	movf	btemp+1,w
  4982  1366  00DC               	movwf	_u8_ModuleMode
  4983  1367                     l764:
  4984  1367  0008               	return
  4985  1368                     __end_of_I2C_Master_Init:
  4986                           
  4987                           	psect	text20
  4988  15B0                     __ptext20:	
  4989 ;; *************** function ___lldiv *****************
  4990 ;; Defined at:
  4991 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  divisor         4   10[BANK0 ] unsigned long 
  4994 ;;  dividend        4   14[BANK0 ] unsigned long 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  quotient        4   19[BANK0 ] unsigned long 
  4997 ;;  counter         1   23[BANK0 ] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  4   10[BANK0 ] unsigned long 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0, btemp+1
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5007 ;;      Params:         0       8       0       0       0
  5008 ;;      Locals:         0       5       0       0       0
  5009 ;;      Temps:          0       1       0       0       0
  5010 ;;      Totals:         0      14       0       0       0
  5011 ;;Total ram usage:       14 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    3
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_I2C_Master_Init
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function ___lldiv
  5023  15B0                     ___lldiv:
  5024  15B0                     l7364:	
  5025                           ;incstack = 0
  5026                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5027                           
  5028  15B0  3000               	movlw	0
  5029  15B1  1283               	bcf	3,5	;RP0=0, select bank0
  5030  15B2  1303               	bcf	3,6	;RP1=0, select bank0
  5031  15B3  00B6               	movwf	___lldiv@quotient+3
  5032  15B4  3000               	movlw	0
  5033  15B5  00B5               	movwf	___lldiv@quotient+2
  5034  15B6  3000               	movlw	0
  5035  15B7  00B4               	movwf	___lldiv@quotient+1
  5036  15B8  3000               	movlw	0
  5037  15B9  00B3               	movwf	___lldiv@quotient
  5038  15BA  082D               	movf	___lldiv@divisor+3,w
  5039  15BB  042C               	iorwf	___lldiv@divisor+2,w
  5040  15BC  042B               	iorwf	___lldiv@divisor+1,w
  5041  15BD  042A               	iorwf	___lldiv@divisor,w
  5042  15BE  1903               	skipnz
  5043  15BF  2DC1               	goto	u4711
  5044  15C0  2DC2               	goto	u4710
  5045  15C1                     u4711:
  5046  15C1  2E0F               	goto	l7386
  5047  15C2                     u4710:
  5048  15C2                     l7366:
  5049  15C2  01B7               	clrf	___lldiv@counter
  5050  15C3  0AB7               	incf	___lldiv@counter,f
  5051  15C4  2DD2               	goto	l7372
  5052  15C5                     l7368:
  5053  15C5  3001               	movlw	1
  5054  15C6  00B2               	movwf	??___lldiv
  5055  15C7                     u4725:
  5056  15C7  1003               	clrc
  5057  15C8  0DAA               	rlf	___lldiv@divisor,f
  5058  15C9  0DAB               	rlf	___lldiv@divisor+1,f
  5059  15CA  0DAC               	rlf	___lldiv@divisor+2,f
  5060  15CB  0DAD               	rlf	___lldiv@divisor+3,f
  5061  15CC  0BB2               	decfsz	??___lldiv,f
  5062  15CD  2DC7               	goto	u4725
  5063  15CE                     l7370:
  5064  15CE  3001               	movlw	1
  5065  15CF  00FF               	movwf	btemp+1
  5066  15D0  087F               	movf	btemp+1,w
  5067  15D1  07B7               	addwf	___lldiv@counter,f
  5068  15D2                     l7372:
  5069  15D2  1FAD               	btfss	___lldiv@divisor+3,7
  5070  15D3  2DD5               	goto	u4731
  5071  15D4  2DD6               	goto	u4730
  5072  15D5                     u4731:
  5073  15D5  2DC5               	goto	l7368
  5074  15D6                     u4730:
  5075  15D6                     l7374:
  5076  15D6  3001               	movlw	1
  5077  15D7  00B2               	movwf	??___lldiv
  5078  15D8                     u4745:
  5079  15D8  1003               	clrc
  5080  15D9  0DB3               	rlf	___lldiv@quotient,f
  5081  15DA  0DB4               	rlf	___lldiv@quotient+1,f
  5082  15DB  0DB5               	rlf	___lldiv@quotient+2,f
  5083  15DC  0DB6               	rlf	___lldiv@quotient+3,f
  5084  15DD  0BB2               	decfsz	??___lldiv,f
  5085  15DE  2DD8               	goto	u4745
  5086  15DF                     l7376:
  5087  15DF  082D               	movf	___lldiv@divisor+3,w
  5088  15E0  0231               	subwf	___lldiv@dividend+3,w
  5089  15E1  1D03               	skipz
  5090  15E2  2DED               	goto	u4755
  5091  15E3  082C               	movf	___lldiv@divisor+2,w
  5092  15E4  0230               	subwf	___lldiv@dividend+2,w
  5093  15E5  1D03               	skipz
  5094  15E6  2DED               	goto	u4755
  5095  15E7  082B               	movf	___lldiv@divisor+1,w
  5096  15E8  022F               	subwf	___lldiv@dividend+1,w
  5097  15E9  1D03               	skipz
  5098  15EA  2DED               	goto	u4755
  5099  15EB  082A               	movf	___lldiv@divisor,w
  5100  15EC  022E               	subwf	___lldiv@dividend,w
  5101  15ED                     u4755:
  5102  15ED  1C03               	skipc
  5103  15EE  2DF0               	goto	u4751
  5104  15EF  2DF1               	goto	u4750
  5105  15F0                     u4751:
  5106  15F0  2E00               	goto	l7382
  5107  15F1                     u4750:
  5108  15F1                     l7378:
  5109  15F1  082A               	movf	___lldiv@divisor,w
  5110  15F2  02AE               	subwf	___lldiv@dividend,f
  5111  15F3  082B               	movf	___lldiv@divisor+1,w
  5112  15F4  1C03               	skipc
  5113  15F5  0F2B               	incfsz	___lldiv@divisor+1,w
  5114  15F6  02AF               	subwf	___lldiv@dividend+1,f
  5115  15F7  082C               	movf	___lldiv@divisor+2,w
  5116  15F8  1C03               	skipc
  5117  15F9  0F2C               	incfsz	___lldiv@divisor+2,w
  5118  15FA  02B0               	subwf	___lldiv@dividend+2,f
  5119  15FB  082D               	movf	___lldiv@divisor+3,w
  5120  15FC  1C03               	skipc
  5121  15FD  0F2D               	incfsz	___lldiv@divisor+3,w
  5122  15FE  02B1               	subwf	___lldiv@dividend+3,f
  5123  15FF                     l7380:
  5124  15FF  1433               	bsf	___lldiv@quotient,0
  5125  1600                     l7382:
  5126  1600  3001               	movlw	1
  5127  1601                     u4765:
  5128  1601  1003               	clrc
  5129  1602  0CAD               	rrf	___lldiv@divisor+3,f
  5130  1603  0CAC               	rrf	___lldiv@divisor+2,f
  5131  1604  0CAB               	rrf	___lldiv@divisor+1,f
  5132  1605  0CAA               	rrf	___lldiv@divisor,f
  5133  1606  3EFF               	addlw	-1
  5134  1607  1D03               	skipz
  5135  1608  2E01               	goto	u4765
  5136  1609                     l7384:
  5137  1609  3001               	movlw	1
  5138  160A  02B7               	subwf	___lldiv@counter,f
  5139  160B  1D03               	btfss	3,2
  5140  160C  2E0E               	goto	u4771
  5141  160D  2E0F               	goto	u4770
  5142  160E                     u4771:
  5143  160E  2DD6               	goto	l7374
  5144  160F                     u4770:
  5145  160F                     l7386:
  5146  160F  0836               	movf	___lldiv@quotient+3,w
  5147  1610  00AD               	movwf	?___lldiv+3
  5148  1611  0835               	movf	___lldiv@quotient+2,w
  5149  1612  00AC               	movwf	?___lldiv+2
  5150  1613  0834               	movf	___lldiv@quotient+1,w
  5151  1614  00AB               	movwf	?___lldiv+1
  5152  1615  0833               	movf	___lldiv@quotient,w
  5153  1616  00AA               	movwf	?___lldiv
  5154  1617                     l998:
  5155  1617  0008               	return
  5156  1618                     __end_of___lldiv:
  5157                           
  5158                           	psect	text21
  5159  1C2E                     __ptext21:	
  5160 ;; *************** function _Display_Init *****************
  5161 ;; Defined at:
  5162 ;;		line 48 in file "Display.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5176 ;;      Params:         0       0       0       0       0
  5177 ;;      Locals:         0       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0
  5179 ;;      Totals:         0       0       0       0       0
  5180 ;;Total ram usage:        0 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    5
  5183 ;; This function calls:
  5184 ;;		_SSD_Init
  5185 ;; This function is called by:
  5186 ;;		_App_init
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _Display_Init
  5192  1C2E                     _Display_Init:
  5193  1C2E                     l8176:	
  5194                           ;incstack = 0
  5195                           ; Regs used in _Display_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5196                           
  5197                           
  5198                           ;Display.c: 50:     SSD_Init(0);
  5199  1C2E  3000               	movlw	0
  5200  1C2F  160A  118A  2368  160A  158A  	fcall	_SSD_Init
  5201                           
  5202                           ;Display.c: 51:     SSD_Init(1);
  5203  1C34  3001               	movlw	1
  5204  1C35  160A  118A  2368  160A  158A  	fcall	_SSD_Init
  5205  1C3A                     l8178:
  5206                           
  5207                           ;Display.c: 53:     u16_DisplayBlinkCounter=0;
  5208  1C3A  1683               	bsf	3,5	;RP0=1, select bank1
  5209  1C3B  1303               	bcf	3,6	;RP1=0, select bank1
  5210  1C3C  01C0               	clrf	_u16_DisplayBlinkCounter^(0+128)
  5211  1C3D  01C1               	clrf	(_u16_DisplayBlinkCounter+1)^(0+128)
  5212  1C3E                     l8180:
  5213                           
  5214                           ;Display.c: 54:     u8_DisplayTickCounter=0;
  5215  1C3E  1283               	bcf	3,5	;RP0=0, select bank0
  5216  1C3F  1303               	bcf	3,6	;RP1=0, select bank0
  5217  1C40  01DE               	clrf	_u8_DisplayTickCounter
  5218  1C41                     l8182:
  5219                           
  5220                           ;Display.c: 55:     u8_Mode=0;
  5221  1C41  01DF               	clrf	_u8_Mode@Display$F109
  5222  1C42                     l8184:
  5223                           
  5224                           ;Display.c: 56:     u8_Data=0;
  5225  1C42  01E0               	clrf	_u8_Data
  5226  1C43                     l169:
  5227  1C43  0008               	return
  5228  1C44                     __end_of_Display_Init:
  5229                           
  5230                           	psect	text22
  5231  1368                     __ptext22:	
  5232 ;; *************** function _SSD_Init *****************
  5233 ;; Defined at:
  5234 ;;		line 76 in file "SSD.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  u8_SSD_ID       1    wreg     unsigned char 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  u8_SSD_ID       1   17[BANK0 ] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5248 ;;      Params:         0       0       0       0       0
  5249 ;;      Locals:         0       1       0       0       0
  5250 ;;      Temps:          0       2       0       0       0
  5251 ;;      Totals:         0       3       0       0       0
  5252 ;;Total ram usage:        3 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    4
  5255 ;; This function calls:
  5256 ;;		_DIO_init
  5257 ;; This function is called by:
  5258 ;;		_Display_Init
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _SSD_Init
  5264  1368                     _SSD_Init:
  5265                           
  5266                           ;incstack = 0
  5267                           ; Regs used in _SSD_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5268                           ;SSD_Init@u8_SSD_ID stored from wreg
  5269  1368  1283               	bcf	3,5	;RP0=0, select bank0
  5270  1369  1303               	bcf	3,6	;RP1=0, select bank0
  5271  136A  00B1               	movwf	SSD_Init@u8_SSD_ID
  5272  136B                     l7878:
  5273                           
  5274                           ;SSD.c: 76: void SSD_Init(uint8 u8_SSD_ID);SSD.c: 77: {;SSD.c: 79:     u8_SSD_Current=0;
  5275  136B  01F7               	clrf	_u8_SSD_Current
  5276                           
  5277                           ;SSD.c: 80:     u8_SSD_TickCounter = 0;
  5278  136C  01F6               	clrf	_u8_SSD_TickCounter
  5279                           
  5280                           ;SSD.c: 82:     switch(u8_SSD_ID)
  5281  136D  2B9E               	goto	l7890
  5282  136E                     l7880:
  5283                           
  5284                           ;SSD.c: 85:             DIO_init(0,0x20,0x00);
  5285  136E  3020               	movlw	32
  5286  136F  00FF               	movwf	btemp+1
  5287  1370  087F               	movf	btemp+1,w
  5288  1371  00AA               	movwf	DIO_init@u8_pins
  5289  1372  01AB               	clrf	DIO_init@u8_direction
  5290  1373  3000               	movlw	0
  5291  1374  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  5292                           
  5293                           ;SSD.c: 86:             break;
  5294  1379  2BB4               	goto	l7892
  5295  137A                     l7882:
  5296                           
  5297                           ;SSD.c: 88:             DIO_init(0,0x10,0x00);
  5298  137A  3010               	movlw	16
  5299  137B  00FF               	movwf	btemp+1
  5300  137C  087F               	movf	btemp+1,w
  5301  137D  00AA               	movwf	DIO_init@u8_pins
  5302  137E  01AB               	clrf	DIO_init@u8_direction
  5303  137F  3000               	movlw	0
  5304  1380  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  5305                           
  5306                           ;SSD.c: 89:             break;
  5307  1385  2BB4               	goto	l7892
  5308  1386                     l7884:
  5309                           
  5310                           ;SSD.c: 91:             DIO_init(0,0x08,0x00);
  5311  1386  3008               	movlw	8
  5312  1387  00FF               	movwf	btemp+1
  5313  1388  087F               	movf	btemp+1,w
  5314  1389  00AA               	movwf	DIO_init@u8_pins
  5315  138A  01AB               	clrf	DIO_init@u8_direction
  5316  138B  3000               	movlw	0
  5317  138C  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  5318                           
  5319                           ;SSD.c: 92:             break;
  5320  1391  2BB4               	goto	l7892
  5321  1392                     l7886:
  5322                           
  5323                           ;SSD.c: 94:             DIO_init(0,0x04,0x00);
  5324  1392  3004               	movlw	4
  5325  1393  00FF               	movwf	btemp+1
  5326  1394  087F               	movf	btemp+1,w
  5327  1395  00AA               	movwf	DIO_init@u8_pins
  5328  1396  01AB               	clrf	DIO_init@u8_direction
  5329  1397  3000               	movlw	0
  5330  1398  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  5331                           
  5332                           ;SSD.c: 95:             break;
  5333  139D  2BB4               	goto	l7892
  5334  139E                     l7890:
  5335  139E  0831               	movf	SSD_Init@u8_SSD_ID,w
  5336  139F  00AF               	movwf	??_SSD_Init
  5337  13A0  01B0               	clrf	??_SSD_Init+1
  5338                           
  5339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5340                           ; Switch size 1, requested type "simple"
  5341                           ; Number of cases is 1, Range of values is 0 to 0
  5342                           ; switch strategies available:
  5343                           ; Name         Instructions Cycles
  5344                           ; simple_byte            4     3 (average)
  5345                           ; direct_byte           11     8 (fixed)
  5346                           ; jumptable            260     6 (fixed)
  5347                           ;	Chosen strategy is simple_byte
  5348  13A1  0830               	movf	??_SSD_Init+1,w
  5349  13A2  3A00               	xorlw	0	; case 0
  5350  13A3  1903               	skipnz
  5351  13A4  2BA6               	goto	l9818
  5352  13A5  2BB4               	goto	l7892
  5353  13A6                     l9818:
  5354                           
  5355                           ; Switch size 1, requested type "simple"
  5356                           ; Number of cases is 4, Range of values is 0 to 3
  5357                           ; switch strategies available:
  5358                           ; Name         Instructions Cycles
  5359                           ; simple_byte           13     7 (average)
  5360                           ; direct_byte           20     8 (fixed)
  5361                           ; jumptable            260     6 (fixed)
  5362                           ;	Chosen strategy is simple_byte
  5363  13A6  082F               	movf	??_SSD_Init,w
  5364  13A7  3A00               	xorlw	0	; case 0
  5365  13A8  1903               	skipnz
  5366  13A9  2B6E               	goto	l7880
  5367  13AA  3A01               	xorlw	1	; case 1
  5368  13AB  1903               	skipnz
  5369  13AC  2B7A               	goto	l7882
  5370  13AD  3A03               	xorlw	3	; case 2
  5371  13AE  1903               	skipnz
  5372  13AF  2B86               	goto	l7884
  5373  13B0  3A01               	xorlw	1	; case 3
  5374  13B1  1903               	skipnz
  5375  13B2  2B92               	goto	l7886
  5376  13B3  2BB4               	goto	l7892
  5377  13B4                     l7892:
  5378                           
  5379                           ;SSD.c: 99:     DIO_init(3,0xFF,0x00);
  5380  13B4  30FF               	movlw	255
  5381  13B5  00FF               	movwf	btemp+1
  5382  13B6  087F               	movf	btemp+1,w
  5383  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  5384  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  5385  13B9  00AA               	movwf	DIO_init@u8_pins
  5386  13BA  01AB               	clrf	DIO_init@u8_direction
  5387  13BB  3003               	movlw	3
  5388  13BC  160A  118A  26EA  160A  118A  	fcall	_DIO_init
  5389  13C1                     l450:
  5390  13C1  0008               	return
  5391  13C2                     __end_of_SSD_Init:
  5392                           
  5393                           	psect	text23
  5394  1B43                     __ptext23:	
  5395 ;; *************** function _Cooler_Init *****************
  5396 ;; Defined at:
  5397 ;;		line 30 in file "Cooler.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       0       0       0       0
  5412 ;;      Locals:         0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0
  5414 ;;      Totals:         0       0       0       0       0
  5415 ;;Total ram usage:        0 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    4
  5418 ;; This function calls:
  5419 ;;		_DIO_init
  5420 ;; This function is called by:
  5421 ;;		_App_init
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _Cooler_Init
  5427  1B43                     _Cooler_Init:
  5428  1B43                     l8174:	
  5429                           ;incstack = 0
  5430                           ; Regs used in _Cooler_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5431                           
  5432                           
  5433                           ;Cooler.c: 32:     DIO_init(2,0x04,0x00);
  5434  1B43  3004               	movlw	4
  5435  1B44  00FF               	movwf	btemp+1
  5436  1B45  087F               	movf	btemp+1,w
  5437  1B46  1283               	bcf	3,5	;RP0=0, select bank0
  5438  1B47  1303               	bcf	3,6	;RP1=0, select bank0
  5439  1B48  00AA               	movwf	DIO_init@u8_pins
  5440  1B49  01AB               	clrf	DIO_init@u8_direction
  5441  1B4A  3002               	movlw	2
  5442  1B4B  160A  118A  26EA  160A  158A  	fcall	_DIO_init
  5443  1B50                     l43:
  5444  1B50  0008               	return
  5445  1B51                     __end_of_Cooler_Init:
  5446                           
  5447                           	psect	text24
  5448  16EA                     __ptext24:	
  5449 ;; *************** function _DIO_init *****************
  5450 ;; Defined at:
  5451 ;;		line 70 in file "DIO.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  u8_port         1    wreg     unsigned char 
  5454 ;;  u8_pins         1   10[BANK0 ] unsigned char 
  5455 ;;  u8_direction    1   11[BANK0 ] unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  u8_port         1   14[BANK0 ] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5467 ;;      Params:         0       2       0       0       0
  5468 ;;      Locals:         0       1       0       0       0
  5469 ;;      Temps:          0       2       0       0       0
  5470 ;;      Totals:         0       5       0       0       0
  5471 ;;Total ram usage:        5 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    3
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_Cooler_Init
  5478 ;;		_Heater_Init
  5479 ;;		_pushButton_Init
  5480 ;;		_SSD_Init
  5481 ;;		_Led_Init
  5482 ;;		_I2C_Master_Init
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function _DIO_init
  5488  16EA                     _DIO_init:
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in _DIO_init: [wreg-fsr0h+status,2+status,0+btemp+1]
  5492                           ;DIO_init@u8_port stored from wreg
  5493  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  5494  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  5495  16EC  00AE               	movwf	DIO_init@u8_port
  5496  16ED                     l7214:
  5497                           
  5498                           ;DIO.c: 70: void DIO_init(uint8 u8_port, uint8 u8_pins, uint8 u8_direction);DIO.c: 71: {
      +                          ;DIO.c: 72:     switch(u8_port)
  5499  16ED  2F4D               	goto	l7248
  5500  16EE                     l7216:
  5501                           
  5502                           ;DIO.c: 75:    if (u8_direction)
  5503  16EE  082B               	movf	DIO_init@u8_direction,w
  5504  16EF  1903               	btfsc	3,2
  5505  16F0  2EF2               	goto	u4631
  5506  16F1  2EF3               	goto	u4630
  5507  16F2                     u4631:
  5508  16F2  2EFA               	goto	l7220
  5509  16F3                     u4630:
  5510  16F3                     l7218:
  5511                           
  5512                           ;DIO.c: 76:    {;DIO.c: 77:     ((TRISA))|=(u8_pins);
  5513  16F3  082A               	movf	DIO_init@u8_pins,w	;volatile
  5514  16F4  00FF               	movwf	btemp+1
  5515  16F5  087F               	movf	btemp+1,w
  5516  16F6  1683               	bsf	3,5	;RP0=1, select bank1
  5517  16F7  1303               	bcf	3,6	;RP1=0, select bank1
  5518  16F8  0485               	iorwf	5,f	;volatile
  5519                           
  5520                           ;DIO.c: 78:    }
  5521  16F9  2F66               	goto	l87
  5522  16FA                     l7220:
  5523                           
  5524                           ;DIO.c: 80:    {;DIO.c: 81:     ((TRISA))&=~(u8_pins);
  5525  16FA  092A               	comf	DIO_init@u8_pins,w	;volatile
  5526  16FB  00FF               	movwf	btemp+1
  5527  16FC  087F               	movf	btemp+1,w
  5528  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  5529  16FE  1303               	bcf	3,6	;RP1=0, select bank1
  5530  16FF  0585               	andwf	5,f	;volatile
  5531  1700  2F66               	goto	l87
  5532  1701                     l7222:
  5533                           
  5534                           ;DIO.c: 85:    if (u8_direction)
  5535  1701  082B               	movf	DIO_init@u8_direction,w
  5536  1702  1903               	btfsc	3,2
  5537  1703  2F05               	goto	u4641
  5538  1704  2F06               	goto	u4640
  5539  1705                     u4641:
  5540  1705  2F0D               	goto	l7226
  5541  1706                     u4640:
  5542  1706                     l7224:
  5543                           
  5544                           ;DIO.c: 86:    {;DIO.c: 87:     ((TRISB))|=(u8_pins);
  5545  1706  082A               	movf	DIO_init@u8_pins,w	;volatile
  5546  1707  00FF               	movwf	btemp+1
  5547  1708  087F               	movf	btemp+1,w
  5548  1709  1683               	bsf	3,5	;RP0=1, select bank1
  5549  170A  1303               	bcf	3,6	;RP1=0, select bank1
  5550  170B  0486               	iorwf	6,f	;volatile
  5551                           
  5552                           ;DIO.c: 88:    }
  5553  170C  2F66               	goto	l87
  5554  170D                     l7226:
  5555                           
  5556                           ;DIO.c: 90:    {;DIO.c: 91:     ((TRISB))&=~(u8_pins);
  5557  170D  092A               	comf	DIO_init@u8_pins,w	;volatile
  5558  170E  00FF               	movwf	btemp+1
  5559  170F  087F               	movf	btemp+1,w
  5560  1710  1683               	bsf	3,5	;RP0=1, select bank1
  5561  1711  1303               	bcf	3,6	;RP1=0, select bank1
  5562  1712  0586               	andwf	6,f	;volatile
  5563  1713  2F66               	goto	l87
  5564  1714                     l7228:
  5565                           
  5566                           ;DIO.c: 95:    if (u8_direction)
  5567  1714  082B               	movf	DIO_init@u8_direction,w
  5568  1715  1903               	btfsc	3,2
  5569  1716  2F18               	goto	u4651
  5570  1717  2F19               	goto	u4650
  5571  1718                     u4651:
  5572  1718  2F20               	goto	l7232
  5573  1719                     u4650:
  5574  1719                     l7230:
  5575                           
  5576                           ;DIO.c: 96:    {;DIO.c: 97:     ((TRISC))|=(u8_pins);
  5577  1719  082A               	movf	DIO_init@u8_pins,w	;volatile
  5578  171A  00FF               	movwf	btemp+1
  5579  171B  087F               	movf	btemp+1,w
  5580  171C  1683               	bsf	3,5	;RP0=1, select bank1
  5581  171D  1303               	bcf	3,6	;RP1=0, select bank1
  5582  171E  0487               	iorwf	7,f	;volatile
  5583                           
  5584                           ;DIO.c: 98:    }
  5585  171F  2F66               	goto	l87
  5586  1720                     l7232:
  5587                           
  5588                           ;DIO.c: 100:    {;DIO.c: 101:     ((TRISC))&=~(u8_pins);
  5589  1720  092A               	comf	DIO_init@u8_pins,w	;volatile
  5590  1721  00FF               	movwf	btemp+1
  5591  1722  087F               	movf	btemp+1,w
  5592  1723  1683               	bsf	3,5	;RP0=1, select bank1
  5593  1724  1303               	bcf	3,6	;RP1=0, select bank1
  5594  1725  0587               	andwf	7,f	;volatile
  5595  1726  2F66               	goto	l87
  5596  1727                     l7234:
  5597                           
  5598                           ;DIO.c: 105:    if (u8_direction)
  5599  1727  082B               	movf	DIO_init@u8_direction,w
  5600  1728  1903               	btfsc	3,2
  5601  1729  2F2B               	goto	u4661
  5602  172A  2F2C               	goto	u4660
  5603  172B                     u4661:
  5604  172B  2F33               	goto	l7238
  5605  172C                     u4660:
  5606  172C                     l7236:
  5607                           
  5608                           ;DIO.c: 106:    {;DIO.c: 107:     ((TRISD))|=(u8_pins);
  5609  172C  082A               	movf	DIO_init@u8_pins,w	;volatile
  5610  172D  00FF               	movwf	btemp+1
  5611  172E  087F               	movf	btemp+1,w
  5612  172F  1683               	bsf	3,5	;RP0=1, select bank1
  5613  1730  1303               	bcf	3,6	;RP1=0, select bank1
  5614  1731  0488               	iorwf	8,f	;volatile
  5615                           
  5616                           ;DIO.c: 108:    }
  5617  1732  2F66               	goto	l87
  5618  1733                     l7238:
  5619                           
  5620                           ;DIO.c: 110:    {;DIO.c: 111:     ((TRISD))&=~(u8_pins);
  5621  1733  092A               	comf	DIO_init@u8_pins,w	;volatile
  5622  1734  00FF               	movwf	btemp+1
  5623  1735  087F               	movf	btemp+1,w
  5624  1736  1683               	bsf	3,5	;RP0=1, select bank1
  5625  1737  1303               	bcf	3,6	;RP1=0, select bank1
  5626  1738  0588               	andwf	8,f	;volatile
  5627  1739  2F66               	goto	l87
  5628  173A                     l7240:
  5629                           
  5630                           ;DIO.c: 115:    if (u8_direction)
  5631  173A  082B               	movf	DIO_init@u8_direction,w
  5632  173B  1903               	btfsc	3,2
  5633  173C  2F3E               	goto	u4671
  5634  173D  2F3F               	goto	u4670
  5635  173E                     u4671:
  5636  173E  2F46               	goto	l7244
  5637  173F                     u4670:
  5638  173F                     l7242:
  5639                           
  5640                           ;DIO.c: 116:    {;DIO.c: 117:     ((TRISE))|=(u8_pins);
  5641  173F  082A               	movf	DIO_init@u8_pins,w	;volatile
  5642  1740  00FF               	movwf	btemp+1
  5643  1741  087F               	movf	btemp+1,w
  5644  1742  1683               	bsf	3,5	;RP0=1, select bank1
  5645  1743  1303               	bcf	3,6	;RP1=0, select bank1
  5646  1744  0489               	iorwf	9,f	;volatile
  5647                           
  5648                           ;DIO.c: 118:    }
  5649  1745  2F66               	goto	l87
  5650  1746                     l7244:
  5651                           
  5652                           ;DIO.c: 120:    {;DIO.c: 121:     ((TRISE))&=~(u8_pins);
  5653  1746  092A               	comf	DIO_init@u8_pins,w	;volatile
  5654  1747  00FF               	movwf	btemp+1
  5655  1748  087F               	movf	btemp+1,w
  5656  1749  1683               	bsf	3,5	;RP0=1, select bank1
  5657  174A  1303               	bcf	3,6	;RP1=0, select bank1
  5658  174B  0589               	andwf	9,f	;volatile
  5659  174C  2F66               	goto	l87
  5660  174D                     l7248:
  5661  174D  082E               	movf	DIO_init@u8_port,w
  5662  174E  00AC               	movwf	??_DIO_init
  5663  174F  01AD               	clrf	??_DIO_init+1
  5664                           
  5665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5666                           ; Switch size 1, requested type "simple"
  5667                           ; Number of cases is 1, Range of values is 0 to 0
  5668                           ; switch strategies available:
  5669                           ; Name         Instructions Cycles
  5670                           ; simple_byte            4     3 (average)
  5671                           ; direct_byte           11     8 (fixed)
  5672                           ; jumptable            260     6 (fixed)
  5673                           ;	Chosen strategy is simple_byte
  5674  1750  082D               	movf	??_DIO_init+1,w
  5675  1751  3A00               	xorlw	0	; case 0
  5676  1752  1903               	skipnz
  5677  1753  2F55               	goto	l9820
  5678  1754  2F66               	goto	l87
  5679  1755                     l9820:
  5680                           
  5681                           ; Switch size 1, requested type "simple"
  5682                           ; Number of cases is 5, Range of values is 0 to 4
  5683                           ; switch strategies available:
  5684                           ; Name         Instructions Cycles
  5685                           ; simple_byte           16     9 (average)
  5686                           ; direct_byte           23     8 (fixed)
  5687                           ; jumptable            260     6 (fixed)
  5688                           ;	Chosen strategy is simple_byte
  5689  1755  082C               	movf	??_DIO_init,w
  5690  1756  3A00               	xorlw	0	; case 0
  5691  1757  1903               	skipnz
  5692  1758  2EEE               	goto	l7216
  5693  1759  3A01               	xorlw	1	; case 1
  5694  175A  1903               	skipnz
  5695  175B  2F01               	goto	l7222
  5696  175C  3A03               	xorlw	3	; case 2
  5697  175D  1903               	skipnz
  5698  175E  2F14               	goto	l7228
  5699  175F  3A01               	xorlw	1	; case 3
  5700  1760  1903               	skipnz
  5701  1761  2F27               	goto	l7234
  5702  1762  3A07               	xorlw	7	; case 4
  5703  1763  1903               	skipnz
  5704  1764  2F3A               	goto	l7240
  5705  1765  2F66               	goto	l87
  5706  1766                     l87:
  5707  1766  0008               	return
  5708  1767                     __end_of_DIO_init:
  5709                           
  5710                           	psect	text25
  5711  1DC0                     __ptext25:	
  5712 ;; *************** function _App_MainLoop *****************
  5713 ;; Defined at:
  5714 ;;		line 302 in file "MainAppSW.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5728 ;;      Params:         0       0       0       0       0
  5729 ;;      Locals:         0       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0
  5731 ;;      Totals:         0       0       0       0       0
  5732 ;;Total ram usage:        0 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    7
  5735 ;; This function calls:
  5736 ;;		_App_Update
  5737 ;;		_CPU_SleepUpdate
  5738 ;;		_Display_Update
  5739 ;;		_SSD_Update
  5740 ;;		_TemperatureAVGReading_Update
  5741 ;;		_pushButton_Update
  5742 ;; This function is called by:
  5743 ;;		_main
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _App_MainLoop
  5749  1DC0                     _App_MainLoop:
  5750  1DC0                     l375:	
  5751                           ;incstack = 0
  5752                           ; Regs used in _App_MainLoop: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5753                           ;MainAppSW.c: 304:     while(1)
  5754                           
  5755  1DC0                     l8730:
  5756                           
  5757                           ;MainAppSW.c: 305:     {;MainAppSW.c: 306:         if(u8_MainLoopStatus == 15 )
  5758  1DC0  300F               	movlw	15
  5759  1DC1  1283               	bcf	3,5	;RP0=0, select bank0
  5760  1DC2  1303               	bcf	3,6	;RP1=0, select bank0
  5761  1DC3  0665               	xorwf	_u8_MainLoopStatus,w
  5762  1DC4  1D03               	btfss	3,2
  5763  1DC5  2DC7               	goto	u6581
  5764  1DC6  2DC8               	goto	u6580
  5765  1DC7                     u6581:
  5766  1DC7  2DC0               	goto	l375
  5767  1DC8                     u6580:
  5768  1DC8                     l8732:
  5769                           
  5770                           ;MainAppSW.c: 307:         {;MainAppSW.c: 308:             SSD_Update();
  5771  1DC8  120A  158A  2530  160A  158A  	fcall	_SSD_Update
  5772                           
  5773                           ;MainAppSW.c: 309:             pushButton_Update();
  5774  1DCD  120A  118A  2669  160A  158A  	fcall	_pushButton_Update
  5775                           
  5776                           ;MainAppSW.c: 310:             TemperatureAVGReading_Update();
  5777  1DD2  160A  158A  25EE  160A  158A  	fcall	_TemperatureAVGReading_Update
  5778                           
  5779                           ;MainAppSW.c: 311:             App_Update();
  5780  1DD7  120A  158A  2332  160A  158A  	fcall	_App_Update
  5781                           
  5782                           ;MainAppSW.c: 312:             Display_Update();
  5783  1DDC  120A  158A  242A  160A  158A  	fcall	_Display_Update
  5784  1DE1                     l8734:
  5785                           
  5786                           ;MainAppSW.c: 313:             u8_MainLoopStatus=16;
  5787  1DE1  3010               	movlw	16
  5788  1DE2  00FF               	movwf	btemp+1
  5789  1DE3  087F               	movf	btemp+1,w
  5790  1DE4  1283               	bcf	3,5	;RP0=0, select bank0
  5791  1DE5  1303               	bcf	3,6	;RP1=0, select bank0
  5792  1DE6  00E5               	movwf	_u8_MainLoopStatus
  5793  1DE7                     l8736:
  5794                           
  5795                           ;MainAppSW.c: 314:             CPU_SleepUpdate();
  5796  1DE7  160A  158A  2304  160A  158A  	fcall	_CPU_SleepUpdate
  5797  1DEC  2DC0               	goto	l375
  5798  1DED  0008               	return
  5799  1DEE                     __end_of_App_MainLoop:
  5800                           
  5801                           	psect	text26
  5802  0669                     __ptext26:	
  5803 ;; *************** function _pushButton_Update *****************
  5804 ;; Defined at:
  5805 ;;		line 100 in file "PushButton.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  counter         1   21[BANK0 ] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5819 ;;      Params:         0       0       0       0       0
  5820 ;;      Locals:         0       1       0       0       0
  5821 ;;      Temps:          0       2       0       0       0
  5822 ;;      Totals:         0       3       0       0       0
  5823 ;;Total ram usage:        3 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    5
  5826 ;; This function calls:
  5827 ;;		_DIO_Read
  5828 ;;		___bmul
  5829 ;; This function is called by:
  5830 ;;		_App_MainLoop
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           
  5835                           ;psect for function _pushButton_Update
  5836  0669                     _pushButton_Update:
  5837  0669                     l8612:	
  5838                           ;incstack = 0
  5839                           ; Regs used in _pushButton_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5840                           
  5841                           
  5842                           ;PushButton.c: 102:     u8_PB_TickCounter += 20;
  5843  0669  3014               	movlw	20
  5844  066A  00FF               	movwf	btemp+1
  5845  066B  087F               	movf	btemp+1,w
  5846  066C  1283               	bcf	3,5	;RP0=0, select bank0
  5847  066D  1303               	bcf	3,6	;RP1=0, select bank0
  5848  066E  07DD               	addwf	_u8_PB_TickCounter,f
  5849  066F                     l8614:
  5850                           
  5851                           ;PushButton.c: 104:     if (u8_PB_TickCounter!= 20){
  5852  066F  3014               	movlw	20
  5853  0670  065D               	xorwf	_u8_PB_TickCounter,w
  5854  0671  1903               	btfsc	3,2
  5855  0672  2E74               	goto	u6461
  5856  0673  2E75               	goto	u6460
  5857  0674                     u6461:
  5858  0674  2E76               	goto	l8618
  5859  0675                     u6460:
  5860  0675  2FFE               	goto	l400
  5861  0676                     l8618:
  5862                           
  5863                           ;PushButton.c: 108:     u8_PB_TickCounter = 0 ;
  5864  0676  01DD               	clrf	_u8_PB_TickCounter
  5865                           
  5866                           ;PushButton.c: 110:  uint8 counter;;PushButton.c: 113:     for (counter=0;counter<(3);co
      +                          unter++)
  5867  0677  01B5               	clrf	pushButton_Update@counter
  5868  0678                     l8624:
  5869                           
  5870                           ;PushButton.c: 114:     {;PushButton.c: 115:         if((STA_buttons+counter)->buttonIni
      +                          t==Init)
  5871  0678  3006               	movlw	6
  5872  0679  00FF               	movwf	btemp+1
  5873  067A  087F               	movf	btemp+1,w
  5874  067B  00AA               	movwf	___bmul@multiplicand
  5875  067C  0835               	movf	pushButton_Update@counter,w
  5876  067D  160A  158A  2444  120A  118A  	fcall	___bmul
  5877  0682  3EBB               	addlw	(low ((_STA_buttons| (0+256)+3)))& (0+255)
  5878  0683  0084               	movwf	4
  5879  0684  1783               	bsf	3,7	;select IRP bank3
  5880  0685  0800               	movf	0,w
  5881  0686  1D03               	btfss	3,2
  5882  0687  2E89               	goto	u6471
  5883  0688  2E8A               	goto	u6470
  5884  0689                     u6471:
  5885  0689  2FF2               	goto	l8654
  5886  068A                     u6470:
  5887  068A                     l8626:
  5888                           
  5889                           ;PushButton.c: 116:         {;PushButton.c: 118:         (STA_buttons+counter)->samples[
      +                          0] = (STA_buttons+counter)->samples[1] ;
  5890  068A  3006               	movlw	6
  5891  068B  00FF               	movwf	btemp+1
  5892  068C  087F               	movf	btemp+1,w
  5893  068D  1283               	bcf	3,5	;RP0=0, select bank0
  5894  068E  1303               	bcf	3,6	;RP1=0, select bank0
  5895  068F  00AA               	movwf	___bmul@multiplicand
  5896  0690  0835               	movf	pushButton_Update@counter,w
  5897  0691  160A  158A  2444  120A  118A  	fcall	___bmul
  5898  0696  3EBD               	addlw	(low ((_STA_buttons| (0+256)+5)))& (0+255)
  5899  0697  0084               	movwf	4
  5900  0698  1783               	bsf	3,7	;select IRP bank3
  5901  0699  0800               	movf	0,w
  5902  069A  1283               	bcf	3,5	;RP0=0, select bank0
  5903  069B  1303               	bcf	3,6	;RP1=0, select bank0
  5904  069C  00B3               	movwf	??_pushButton_Update
  5905  069D  3006               	movlw	6
  5906  069E  00FF               	movwf	btemp+1
  5907  069F  087F               	movf	btemp+1,w
  5908  06A0  00AA               	movwf	___bmul@multiplicand
  5909  06A1  0835               	movf	pushButton_Update@counter,w
  5910  06A2  160A  158A  2444  120A  118A  	fcall	___bmul
  5911  06A7  3EBC               	addlw	(low ((_STA_buttons| (0+256)+4)))& (0+255)
  5912  06A8  0084               	movwf	4
  5913  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  5914  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  5915  06AB  0833               	movf	??_pushButton_Update,w
  5916  06AC  1783               	bsf	3,7	;select IRP bank3
  5917  06AD  0080               	movwf	0
  5918                           
  5919                           ;PushButton.c: 121:             DIO_Read((STA_buttons+counter)->buttonGpio,(STA_buttons+
      +                          counter)->buttonBit
  5920  06AE  3006               	movlw	6
  5921  06AF  00FF               	movwf	btemp+1
  5922  06B0  087F               	movf	btemp+1,w
  5923  06B1  00AA               	movwf	___bmul@multiplicand
  5924  06B2  0835               	movf	pushButton_Update@counter,w
  5925  06B3  160A  158A  2444  120A  118A  	fcall	___bmul
  5926  06B8  3EB9               	addlw	(low ((_STA_buttons| (0+256)+1)))& (0+255)
  5927  06B9  0084               	movwf	4
  5928  06BA  1783               	bsf	3,7	;select IRP bank3
  5929  06BB  0800               	movf	0,w
  5930  06BC  00FF               	movwf	btemp+1
  5931  06BD  087F               	movf	btemp+1,w
  5932  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  5933  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  5934  06C0  00AE               	movwf	DIO_Read@u8_pins
  5935  06C1  3006               	movlw	6
  5936  06C2  00FF               	movwf	btemp+1
  5937  06C3  087F               	movf	btemp+1,w
  5938  06C4  00AA               	movwf	___bmul@multiplicand
  5939  06C5  0835               	movf	pushButton_Update@counter,w
  5940  06C6  160A  158A  2444  120A  118A  	fcall	___bmul
  5941  06CB  3EBD               	addlw	(low ((_STA_buttons| (0+256)+5)))& (0+255)
  5942  06CC  00FF               	movwf	btemp+1
  5943  06CD  087F               	movf	btemp+1,w
  5944  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  5945  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  5946  06D0  00AF               	movwf	DIO_Read@pu8_data
  5947  06D1  3006               	movlw	6
  5948  06D2  00FF               	movwf	btemp+1
  5949  06D3  087F               	movf	btemp+1,w
  5950  06D4  00AA               	movwf	___bmul@multiplicand
  5951  06D5  0835               	movf	pushButton_Update@counter,w
  5952  06D6  160A  158A  2444  120A  118A  	fcall	___bmul
  5953  06DB  3EB8               	addlw	(low (_STA_buttons| (0+256)))& (0+255)
  5954  06DC  0084               	movwf	4
  5955  06DD  1783               	bsf	3,7	;select IRP bank3
  5956  06DE  0800               	movf	0,w
  5957  06DF  120A  158A  2004  120A  118A  	fcall	_DIO_Read
  5958                           
  5959                           ;PushButton.c: 124:             if ( (STA_buttons+counter)->samples[0] == (STA_buttons+c
      +                          ounter)->samples[1] )
  5960  06E4  3006               	movlw	6
  5961  06E5  00FF               	movwf	btemp+1
  5962  06E6  087F               	movf	btemp+1,w
  5963  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  5964  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  5965  06E9  00AA               	movwf	___bmul@multiplicand
  5966  06EA  0835               	movf	pushButton_Update@counter,w
  5967  06EB  160A  158A  2444  120A  118A  	fcall	___bmul
  5968  06F0  3EBD               	addlw	(low ((_STA_buttons| (0+256)+5)))& (0+255)
  5969  06F1  0084               	movwf	4
  5970  06F2  1783               	bsf	3,7	;select IRP bank3
  5971  06F3  0800               	movf	0,w
  5972  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  5973  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  5974  06F6  00B3               	movwf	??_pushButton_Update
  5975  06F7  3006               	movlw	6
  5976  06F8  00FF               	movwf	btemp+1
  5977  06F9  087F               	movf	btemp+1,w
  5978  06FA  00AA               	movwf	___bmul@multiplicand
  5979  06FB  0835               	movf	pushButton_Update@counter,w
  5980  06FC  160A  158A  2444  120A  118A  	fcall	___bmul
  5981  0701  3EBC               	addlw	(low ((_STA_buttons| (0+256)+4)))& (0+255)
  5982  0702  0084               	movwf	4
  5983  0703  1783               	bsf	3,7	;select IRP bank3
  5984  0704  0800               	movf	0,w
  5985  0705  1283               	bcf	3,5	;RP0=0, select bank0
  5986  0706  1303               	bcf	3,6	;RP1=0, select bank0
  5987  0707  0633               	xorwf	??_pushButton_Update,w
  5988  0708  1D03               	skipz
  5989  0709  2F0B               	goto	u6481
  5990  070A  2F0C               	goto	u6480
  5991  070B                     u6481:
  5992  070B  2FF2               	goto	l8654
  5993  070C                     u6480:
  5994  070C  2FCD               	goto	l8652
  5995  070D                     l8630:
  5996                           
  5997                           ;PushButton.c: 129:                         if((STA_buttons+counter)->samples[1] == 0 )
  5998  070D  3006               	movlw	6
  5999  070E  00FF               	movwf	btemp+1
  6000  070F  087F               	movf	btemp+1,w
  6001  0710  00AA               	movwf	___bmul@multiplicand
  6002  0711  0835               	movf	pushButton_Update@counter,w
  6003  0712  160A  158A  2444  120A  118A  	fcall	___bmul
  6004  0717  3EBD               	addlw	(low ((_STA_buttons| (0+256)+5)))& (0+255)
  6005  0718  0084               	movwf	4
  6006  0719  1783               	bsf	3,7	;select IRP bank3
  6007  071A  0800               	movf	0,w
  6008  071B  1D03               	btfss	3,2
  6009  071C  2F1E               	goto	u6491
  6010  071D  2F1F               	goto	u6490
  6011  071E                     u6491:
  6012  071E  2FF2               	goto	l404
  6013  071F                     u6490:
  6014  071F                     l8632:
  6015                           
  6016                           ;PushButton.c: 130:                         {;PushButton.c: 131:                        
      +                               (STA_buttons+counter)->buttonStatus=0x11;
  6017  071F  3006               	movlw	6
  6018  0720  00FF               	movwf	btemp+1
  6019  0721  087F               	movf	btemp+1,w
  6020  0722  1283               	bcf	3,5	;RP0=0, select bank0
  6021  0723  1303               	bcf	3,6	;RP1=0, select bank0
  6022  0724  00AA               	movwf	___bmul@multiplicand
  6023  0725  0835               	movf	pushButton_Update@counter,w
  6024  0726  160A  158A  2444  120A  118A  	fcall	___bmul
  6025  072B  3EBA               	addlw	(low ((_STA_buttons| (0+256)+2)))& (0+255)
  6026  072C  0084               	movwf	4
  6027  072D  3011               	movlw	17
  6028  072E  00FF               	movwf	btemp+1
  6029  072F  087F               	movf	btemp+1,w
  6030  0730  1783               	bsf	3,7	;select IRP bank3
  6031  0731  0080               	movwf	0
  6032                           
  6033                           ;PushButton.c: 132:                         }
  6034  0732  2FF2               	goto	l8654
  6035  0733                     l8634:
  6036                           
  6037                           ;PushButton.c: 140:                         if((STA_buttons+counter)->samples[1] == 0)
  6038  0733  3006               	movlw	6
  6039  0734  00FF               	movwf	btemp+1
  6040  0735  087F               	movf	btemp+1,w
  6041  0736  00AA               	movwf	___bmul@multiplicand
  6042  0737  0835               	movf	pushButton_Update@counter,w
  6043  0738  160A  158A  2444  120A  118A  	fcall	___bmul
  6044  073D  3EBD               	addlw	(low ((_STA_buttons| (0+256)+5)))& (0+255)
  6045  073E  0084               	movwf	4
  6046  073F  1783               	bsf	3,7	;select IRP bank3
  6047  0740  0800               	movf	0,w
  6048  0741  1D03               	btfss	3,2
  6049  0742  2F44               	goto	u6501
  6050  0743  2F45               	goto	u6500
  6051  0744                     u6501:
  6052  0744  2F59               	goto	l8638
  6053  0745                     u6500:
  6054  0745                     l8636:
  6055                           
  6056                           ;PushButton.c: 141:                         {;PushButton.c: 142:                        
      +                               (STA_buttons+counter)->buttonStatus=0x11;
  6057  0745  3006               	movlw	6
  6058  0746  00FF               	movwf	btemp+1
  6059  0747  087F               	movf	btemp+1,w
  6060  0748  1283               	bcf	3,5	;RP0=0, select bank0
  6061  0749  1303               	bcf	3,6	;RP1=0, select bank0
  6062  074A  00AA               	movwf	___bmul@multiplicand
  6063  074B  0835               	movf	pushButton_Update@counter,w
  6064  074C  160A  158A  2444  120A  118A  	fcall	___bmul
  6065  0751  3EBA               	addlw	(low ((_STA_buttons| (0+256)+2)))& (0+255)
  6066  0752  0084               	movwf	4
  6067  0753  3011               	movlw	17
  6068  0754  00FF               	movwf	btemp+1
  6069  0755  087F               	movf	btemp+1,w
  6070  0756  1783               	bsf	3,7	;select IRP bank3
  6071  0757  0080               	movwf	0
  6072                           
  6073                           ;PushButton.c: 143:                         }
  6074  0758  2FF2               	goto	l8654
  6075  0759                     l8638:
  6076                           
  6077                           ;PushButton.c: 145:                         {;PushButton.c: 146:                        
      +                               (STA_buttons+counter)->buttonStatus=0x10;
  6078  0759  3006               	movlw	6
  6079  075A  00FF               	movwf	btemp+1
  6080  075B  087F               	movf	btemp+1,w
  6081  075C  1283               	bcf	3,5	;RP0=0, select bank0
  6082  075D  1303               	bcf	3,6	;RP1=0, select bank0
  6083  075E  00AA               	movwf	___bmul@multiplicand
  6084  075F  0835               	movf	pushButton_Update@counter,w
  6085  0760  160A  158A  2444  120A  118A  	fcall	___bmul
  6086  0765  3EBA               	addlw	(low ((_STA_buttons| (0+256)+2)))& (0+255)
  6087  0766  0084               	movwf	4
  6088  0767  3010               	movlw	16
  6089  0768  00FF               	movwf	btemp+1
  6090  0769  087F               	movf	btemp+1,w
  6091  076A  1783               	bsf	3,7	;select IRP bank3
  6092  076B  0080               	movwf	0
  6093  076C  2FF2               	goto	l8654
  6094  076D                     l8640:
  6095                           
  6096                           ;PushButton.c: 151:                         if((STA_buttons+counter)->samples[1] == 0)
  6097  076D  3006               	movlw	6
  6098  076E  00FF               	movwf	btemp+1
  6099  076F  087F               	movf	btemp+1,w
  6100  0770  00AA               	movwf	___bmul@multiplicand
  6101  0771  0835               	movf	pushButton_Update@counter,w
  6102  0772  160A  158A  2444  120A  118A  	fcall	___bmul
  6103  0777  3EBD               	addlw	(low ((_STA_buttons| (0+256)+5)))& (0+255)
  6104  0778  0084               	movwf	4
  6105  0779  1783               	bsf	3,7	;select IRP bank3
  6106  077A  0800               	movf	0,w
  6107  077B  1D03               	btfss	3,2
  6108  077C  2F7E               	goto	u6511
  6109  077D  2F7F               	goto	u6510
  6110  077E                     u6511:
  6111  077E  2F93               	goto	l8644
  6112  077F                     u6510:
  6113  077F                     l8642:
  6114                           
  6115                           ;PushButton.c: 152:                                 (STA_buttons+counter)->buttonStatus=
      +                          0x12;
  6116  077F  3006               	movlw	6
  6117  0780  00FF               	movwf	btemp+1
  6118  0781  087F               	movf	btemp+1,w
  6119  0782  1283               	bcf	3,5	;RP0=0, select bank0
  6120  0783  1303               	bcf	3,6	;RP1=0, select bank0
  6121  0784  00AA               	movwf	___bmul@multiplicand
  6122  0785  0835               	movf	pushButton_Update@counter,w
  6123  0786  160A  158A  2444  120A  118A  	fcall	___bmul
  6124  078B  3EBA               	addlw	(low ((_STA_buttons| (0+256)+2)))& (0+255)
  6125  078C  0084               	movwf	4
  6126  078D  3012               	movlw	18
  6127  078E  00FF               	movwf	btemp+1
  6128  078F  087F               	movf	btemp+1,w
  6129  0790  1783               	bsf	3,7	;select IRP bank3
  6130  0791  0080               	movwf	0
  6131  0792  2FF2               	goto	l8654
  6132  0793                     l8644:
  6133                           
  6134                           ;PushButton.c: 154:                                 (STA_buttons+counter)->buttonStatus=
      +                          0x13;
  6135  0793  3006               	movlw	6
  6136  0794  00FF               	movwf	btemp+1
  6137  0795  087F               	movf	btemp+1,w
  6138  0796  1283               	bcf	3,5	;RP0=0, select bank0
  6139  0797  1303               	bcf	3,6	;RP1=0, select bank0
  6140  0798  00AA               	movwf	___bmul@multiplicand
  6141  0799  0835               	movf	pushButton_Update@counter,w
  6142  079A  160A  158A  2444  120A  118A  	fcall	___bmul
  6143  079F  3EBA               	addlw	(low ((_STA_buttons| (0+256)+2)))& (0+255)
  6144  07A0  0084               	movwf	4
  6145  07A1  3013               	movlw	19
  6146  07A2  00FF               	movwf	btemp+1
  6147  07A3  087F               	movf	btemp+1,w
  6148  07A4  1783               	bsf	3,7	;select IRP bank3
  6149  07A5  0080               	movwf	0
  6150  07A6  2FF2               	goto	l8654
  6151  07A7                     l8646:
  6152                           
  6153                           ;PushButton.c: 158:                         if((STA_buttons+counter)->samples[1] == 0xFF
      +                          )
  6154  07A7  3006               	movlw	6
  6155  07A8  00FF               	movwf	btemp+1
  6156  07A9  087F               	movf	btemp+1,w
  6157  07AA  00AA               	movwf	___bmul@multiplicand
  6158  07AB  0835               	movf	pushButton_Update@counter,w
  6159  07AC  160A  158A  2444  120A  118A  	fcall	___bmul
  6160  07B1  3EBD               	addlw	(low ((_STA_buttons| (0+256)+5)))& (0+255)
  6161  07B2  0084               	movwf	4
  6162  07B3  1783               	bsf	3,7	;select IRP bank3
  6163  07B4  0A00               	incf	0,w
  6164  07B5  1D03               	btfss	3,2
  6165  07B6  2FB8               	goto	u6521
  6166  07B7  2FB9               	goto	u6520
  6167  07B8                     u6521:
  6168  07B8  2FF2               	goto	l404
  6169  07B9                     u6520:
  6170  07B9                     l8648:
  6171                           
  6172                           ;PushButton.c: 159:                             (STA_buttons+counter)->buttonStatus=0x13
      +                          ;
  6173  07B9  3006               	movlw	6
  6174  07BA  00FF               	movwf	btemp+1
  6175  07BB  087F               	movf	btemp+1,w
  6176  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  6177  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  6178  07BE  00AA               	movwf	___bmul@multiplicand
  6179  07BF  0835               	movf	pushButton_Update@counter,w
  6180  07C0  160A  158A  2444  120A  118A  	fcall	___bmul
  6181  07C5  3EBA               	addlw	(low ((_STA_buttons| (0+256)+2)))& (0+255)
  6182  07C6  0084               	movwf	4
  6183  07C7  3013               	movlw	19
  6184  07C8  00FF               	movwf	btemp+1
  6185  07C9  087F               	movf	btemp+1,w
  6186  07CA  1783               	bsf	3,7	;select IRP bank3
  6187  07CB  0080               	movwf	0
  6188  07CC  2FF2               	goto	l8654
  6189  07CD                     l8652:
  6190  07CD  3006               	movlw	6
  6191  07CE  00FF               	movwf	btemp+1
  6192  07CF  087F               	movf	btemp+1,w
  6193  07D0  00AA               	movwf	___bmul@multiplicand
  6194  07D1  0835               	movf	pushButton_Update@counter,w
  6195  07D2  160A  158A  2444  120A  118A  	fcall	___bmul
  6196  07D7  3EBA               	addlw	(low ((_STA_buttons| (0+256)+2)))& (0+255)
  6197  07D8  0084               	movwf	4
  6198  07D9  1783               	bsf	3,7	;select IRP bank3
  6199  07DA  0800               	movf	0,w
  6200  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  6201  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  6202  07DD  00B3               	movwf	??_pushButton_Update
  6203  07DE  01B4               	clrf	??_pushButton_Update+1
  6204                           
  6205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6206                           ; Switch size 1, requested type "simple"
  6207                           ; Number of cases is 1, Range of values is 0 to 0
  6208                           ; switch strategies available:
  6209                           ; Name         Instructions Cycles
  6210                           ; simple_byte            4     3 (average)
  6211                           ; direct_byte           11     8 (fixed)
  6212                           ; jumptable            260     6 (fixed)
  6213                           ;	Chosen strategy is simple_byte
  6214  07DF  0834               	movf	??_pushButton_Update+1,w
  6215  07E0  3A00               	xorlw	0	; case 0
  6216  07E1  1903               	skipnz
  6217  07E2  2FE4               	goto	l9822
  6218  07E3  2FF2               	goto	l8654
  6219  07E4                     l9822:
  6220                           
  6221                           ; Switch size 1, requested type "simple"
  6222                           ; Number of cases is 4, Range of values is 16 to 19
  6223                           ; switch strategies available:
  6224                           ; Name         Instructions Cycles
  6225                           ; simple_byte           13     7 (average)
  6226                           ; direct_byte           23    11 (fixed)
  6227                           ; jumptable            263     9 (fixed)
  6228                           ;	Chosen strategy is simple_byte
  6229  07E4  0833               	movf	??_pushButton_Update,w
  6230  07E5  3A10               	xorlw	16	; case 16
  6231  07E6  1903               	skipnz
  6232  07E7  2F0D               	goto	l8630
  6233  07E8  3A01               	xorlw	1	; case 17
  6234  07E9  1903               	skipnz
  6235  07EA  2F6D               	goto	l8640
  6236  07EB  3A03               	xorlw	3	; case 18
  6237  07EC  1903               	skipnz
  6238  07ED  2FA7               	goto	l8646
  6239  07EE  3A01               	xorlw	1	; case 19
  6240  07EF  1903               	skipnz
  6241  07F0  2F33               	goto	l8634
  6242  07F1  2FF2               	goto	l8654
  6243  07F2                     l404:	
  6244                           ;PushButton.c: 162:             }
  6245                           
  6246  07F2                     l8654:
  6247                           
  6248                           ;PushButton.c: 164:     }
  6249  07F2  3001               	movlw	1
  6250  07F3  00FF               	movwf	btemp+1
  6251  07F4  087F               	movf	btemp+1,w
  6252  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  6253  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  6254  07F7  07B5               	addwf	pushButton_Update@counter,f
  6255  07F8                     l8656:
  6256  07F8  3003               	movlw	3
  6257  07F9  0235               	subwf	pushButton_Update@counter,w
  6258  07FA  1C03               	skipc
  6259  07FB  2FFD               	goto	u6531
  6260  07FC  2FFE               	goto	u6530
  6261  07FD                     u6531:
  6262  07FD  2E78               	goto	l8624
  6263  07FE                     u6530:
  6264  07FE                     l400:
  6265  07FE  0008               	return
  6266  07FF                     __end_of_pushButton_Update:
  6267                           
  6268                           	psect	text27
  6269  1C44                     __ptext27:	
  6270 ;; *************** function ___bmul *****************
  6271 ;; Defined at:
  6272 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  multiplier      1    wreg     unsigned char 
  6275 ;;  multiplicand    1   10[BANK0 ] unsigned char 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  multiplier      1   12[BANK0 ] unsigned char 
  6278 ;;  product         1   11[BANK0 ] unsigned char 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      unsigned char 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, btemp+1
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6288 ;;      Params:         0       1       0       0       0
  6289 ;;      Locals:         0       2       0       0       0
  6290 ;;      Temps:          0       0       0       0       0
  6291 ;;      Totals:         0       3       0       0       0
  6292 ;;Total ram usage:        3 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    3
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_pushButton_Update
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           
  6303                           ;psect for function ___bmul
  6304  1C44                     ___bmul:
  6305                           
  6306                           ;incstack = 0
  6307                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  6308                           ;___bmul@multiplier stored from wreg
  6309  1C44  1283               	bcf	3,5	;RP0=0, select bank0
  6310  1C45  1303               	bcf	3,6	;RP1=0, select bank0
  6311  1C46  00AC               	movwf	___bmul@multiplier
  6312  1C47                     l8076:
  6313  1C47  01AB               	clrf	___bmul@product
  6314  1C48                     l8078:
  6315  1C48  1C2C               	btfss	___bmul@multiplier,0
  6316  1C49  2C4B               	goto	u6061
  6317  1C4A  2C4C               	goto	u6060
  6318  1C4B                     u6061:
  6319  1C4B  2C50               	goto	l8082
  6320  1C4C                     u6060:
  6321  1C4C                     l8080:
  6322  1C4C  082A               	movf	___bmul@multiplicand,w
  6323  1C4D  00FF               	movwf	btemp+1
  6324  1C4E  087F               	movf	btemp+1,w
  6325  1C4F  07AB               	addwf	___bmul@product,f
  6326  1C50                     l8082:
  6327  1C50  1003               	clrc
  6328  1C51  0DAA               	rlf	___bmul@multiplicand,f
  6329  1C52                     l8084:
  6330  1C52  1003               	clrc
  6331  1C53  0CAC               	rrf	___bmul@multiplier,f
  6332  1C54                     l8086:
  6333  1C54  082C               	movf	___bmul@multiplier,w
  6334  1C55  1D03               	btfss	3,2
  6335  1C56  2C58               	goto	u6071
  6336  1C57  2C59               	goto	u6070
  6337  1C58                     u6071:
  6338  1C58  2C48               	goto	l8078
  6339  1C59                     u6070:
  6340  1C59                     l8088:
  6341  1C59  082B               	movf	___bmul@product,w
  6342  1C5A                     l988:
  6343  1C5A  0008               	return
  6344  1C5B                     __end_of___bmul:
  6345                           
  6346                           	psect	text28
  6347  0804                     __ptext28:	
  6348 ;; *************** function _DIO_Read *****************
  6349 ;; Defined at:
  6350 ;;		line 243 in file "DIO.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  u8_GPIO         1    wreg     unsigned char 
  6353 ;;  u8_pins         1   14[BANK0 ] unsigned char 
  6354 ;;  pu8_data        1   15[BANK0 ] PTR unsigned char 
  6355 ;;		 -> STA_buttons.samples(2), STA_buttons(24), 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  u8_GPIO         1   18[BANK0 ] unsigned char 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1    wreg      void 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6367 ;;      Params:         0       2       0       0       0
  6368 ;;      Locals:         0       1       0       0       0
  6369 ;;      Temps:          0       2       0       0       0
  6370 ;;      Totals:         0       5       0       0       0
  6371 ;;Total ram usage:        5 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    4
  6374 ;; This function calls:
  6375 ;;		___lbdiv
  6376 ;; This function is called by:
  6377 ;;		_pushButton_Update
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           
  6382                           ;psect for function _DIO_Read
  6383  0804                     _DIO_Read:
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in _DIO_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6387                           ;DIO_Read@u8_GPIO stored from wreg
  6388  0804  1283               	bcf	3,5	;RP0=0, select bank0
  6389  0805  1303               	bcf	3,6	;RP1=0, select bank0
  6390  0806  00B2               	movwf	DIO_Read@u8_GPIO
  6391  0807                     l7814:
  6392                           
  6393                           ;DIO.c: 243: void DIO_Read (uint8 u8_GPIO,uint8 u8_pins, uint8 *pu8_data);DIO.c: 244: {;
      +                          DIO.c: 245:     switch(u8_GPIO)
  6394  0807  286D               	goto	l7848
  6395  0808                     l7816:
  6396                           
  6397                           ;DIO.c: 248:    if(((((PORTA))&(u8_pins))/(u8_pins)))
  6398  0808  082E               	movf	DIO_Read@u8_pins,w	;volatile
  6399  0809  00FF               	movwf	btemp+1
  6400  080A  087F               	movf	btemp+1,w
  6401  080B  00AA               	movwf	___lbdiv@divisor
  6402  080C  0805               	movf	5,w	;volatile
  6403  080D  052E               	andwf	DIO_Read@u8_pins,w
  6404  080E  160A  158A  2568  120A  158A  	fcall	___lbdiv
  6405  0813  3A00               	xorlw	0
  6406  0814  1903               	skipnz
  6407  0815  2817               	goto	u5801
  6408  0816  2818               	goto	u5800
  6409  0817                     u5801:
  6410  0817  2822               	goto	l7820
  6411  0818                     u5800:
  6412  0818                     l7818:
  6413                           
  6414                           ;DIO.c: 249:    {;DIO.c: 250:                 *pu8_data = 0xFF;
  6415  0818  30FF               	movlw	255
  6416  0819  00FF               	movwf	btemp+1
  6417  081A  1283               	bcf	3,5	;RP0=0, select bank0
  6418  081B  1303               	bcf	3,6	;RP1=0, select bank0
  6419  081C  082F               	movf	DIO_Read@pu8_data,w
  6420  081D  0084               	movwf	4
  6421  081E  087F               	movf	btemp+1,w
  6422  081F  1783               	bsf	3,7	;select IRP bank2
  6423  0820  0080               	movwf	0
  6424                           
  6425                           ;DIO.c: 251:    }
  6426  0821  2886               	goto	l129
  6427  0822                     l7820:
  6428                           
  6429                           ;DIO.c: 253:             {;DIO.c: 254:                 *pu8_data = 0;
  6430  0822  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0823  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0824  082F               	movf	DIO_Read@pu8_data,w
  6433  0825  0084               	movwf	4
  6434  0826  1783               	bsf	3,7	;select IRP bank2
  6435  0827  0180               	clrf	0
  6436  0828  2886               	goto	l129
  6437  0829                     l7822:
  6438                           
  6439                           ;DIO.c: 258:    if(((((PORTB))&(u8_pins))/(u8_pins)))
  6440  0829  082E               	movf	DIO_Read@u8_pins,w	;volatile
  6441  082A  00FF               	movwf	btemp+1
  6442  082B  087F               	movf	btemp+1,w
  6443  082C  00AA               	movwf	___lbdiv@divisor
  6444  082D  0806               	movf	6,w	;volatile
  6445  082E  052E               	andwf	DIO_Read@u8_pins,w
  6446  082F  160A  158A  2568  120A  158A  	fcall	___lbdiv
  6447  0834  3A00               	xorlw	0
  6448  0835  1903               	skipnz
  6449  0836  2838               	goto	u5811
  6450  0837  2839               	goto	u5810
  6451  0838                     u5811:
  6452  0838  2822               	goto	l7820
  6453  0839                     u5810:
  6454  0839  2818               	goto	l7818
  6455  083A                     l7828:
  6456                           
  6457                           ;DIO.c: 268:    if(((((PORTC))&(u8_pins))/(u8_pins)))
  6458  083A  082E               	movf	DIO_Read@u8_pins,w	;volatile
  6459  083B  00FF               	movwf	btemp+1
  6460  083C  087F               	movf	btemp+1,w
  6461  083D  00AA               	movwf	___lbdiv@divisor
  6462  083E  0807               	movf	7,w	;volatile
  6463  083F  052E               	andwf	DIO_Read@u8_pins,w
  6464  0840  160A  158A  2568  120A  158A  	fcall	___lbdiv
  6465  0845  3A00               	xorlw	0
  6466  0846  1903               	skipnz
  6467  0847  2849               	goto	u5821
  6468  0848  284A               	goto	u5820
  6469  0849                     u5821:
  6470  0849  2822               	goto	l7820
  6471  084A                     u5820:
  6472  084A  2818               	goto	l7818
  6473  084B                     l7834:
  6474                           
  6475                           ;DIO.c: 278:    if(((((PORTD))&(u8_pins))/(u8_pins)))
  6476  084B  082E               	movf	DIO_Read@u8_pins,w	;volatile
  6477  084C  00FF               	movwf	btemp+1
  6478  084D  087F               	movf	btemp+1,w
  6479  084E  00AA               	movwf	___lbdiv@divisor
  6480  084F  0808               	movf	8,w	;volatile
  6481  0850  052E               	andwf	DIO_Read@u8_pins,w
  6482  0851  160A  158A  2568  120A  158A  	fcall	___lbdiv
  6483  0856  3A00               	xorlw	0
  6484  0857  1903               	skipnz
  6485  0858  285A               	goto	u5831
  6486  0859  285B               	goto	u5830
  6487  085A                     u5831:
  6488  085A  2822               	goto	l7820
  6489  085B                     u5830:
  6490  085B  2818               	goto	l7818
  6491  085C                     l7840:
  6492                           
  6493                           ;DIO.c: 288:    if(((((PORTE))&(u8_pins))/(u8_pins)))
  6494  085C  082E               	movf	DIO_Read@u8_pins,w	;volatile
  6495  085D  00FF               	movwf	btemp+1
  6496  085E  087F               	movf	btemp+1,w
  6497  085F  00AA               	movwf	___lbdiv@divisor
  6498  0860  0809               	movf	9,w	;volatile
  6499  0861  052E               	andwf	DIO_Read@u8_pins,w
  6500  0862  160A  158A  2568  120A  158A  	fcall	___lbdiv
  6501  0867  3A00               	xorlw	0
  6502  0868  1903               	skipnz
  6503  0869  286B               	goto	u5841
  6504  086A  286C               	goto	u5840
  6505  086B                     u5841:
  6506  086B  2822               	goto	l7820
  6507  086C                     u5840:
  6508  086C  2818               	goto	l7818
  6509  086D                     l7848:
  6510  086D  0832               	movf	DIO_Read@u8_GPIO,w
  6511  086E  00B0               	movwf	??_DIO_Read
  6512  086F  01B1               	clrf	??_DIO_Read+1
  6513                           
  6514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6515                           ; Switch size 1, requested type "simple"
  6516                           ; Number of cases is 1, Range of values is 0 to 0
  6517                           ; switch strategies available:
  6518                           ; Name         Instructions Cycles
  6519                           ; simple_byte            4     3 (average)
  6520                           ; direct_byte           11     8 (fixed)
  6521                           ; jumptable            260     6 (fixed)
  6522                           ;	Chosen strategy is simple_byte
  6523  0870  0831               	movf	??_DIO_Read+1,w
  6524  0871  3A00               	xorlw	0	; case 0
  6525  0872  1903               	skipnz
  6526  0873  2875               	goto	l9824
  6527  0874  2886               	goto	l129
  6528  0875                     l9824:
  6529                           
  6530                           ; Switch size 1, requested type "simple"
  6531                           ; Number of cases is 5, Range of values is 0 to 4
  6532                           ; switch strategies available:
  6533                           ; Name         Instructions Cycles
  6534                           ; simple_byte           16     9 (average)
  6535                           ; direct_byte           23     8 (fixed)
  6536                           ; jumptable            260     6 (fixed)
  6537                           ;	Chosen strategy is simple_byte
  6538  0875  0830               	movf	??_DIO_Read,w
  6539  0876  3A00               	xorlw	0	; case 0
  6540  0877  1903               	skipnz
  6541  0878  2808               	goto	l7816
  6542  0879  3A01               	xorlw	1	; case 1
  6543  087A  1903               	skipnz
  6544  087B  2829               	goto	l7822
  6545  087C  3A03               	xorlw	3	; case 2
  6546  087D  1903               	skipnz
  6547  087E  283A               	goto	l7828
  6548  087F  3A01               	xorlw	1	; case 3
  6549  0880  1903               	skipnz
  6550  0881  284B               	goto	l7834
  6551  0882  3A07               	xorlw	7	; case 4
  6552  0883  1903               	skipnz
  6553  0884  285C               	goto	l7840
  6554  0885  2886               	goto	l129
  6555  0886                     l129:
  6556  0886  0008               	return
  6557  0887                     __end_of_DIO_Read:
  6558                           
  6559                           	psect	text29
  6560  1D68                     __ptext29:	
  6561 ;; *************** function ___lbdiv *****************
  6562 ;; Defined at:
  6563 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbdiv.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  dividend        1    wreg     unsigned char 
  6566 ;;  divisor         1   10[BANK0 ] unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  dividend        1   11[BANK0 ] unsigned char 
  6569 ;;  quotient        1   13[BANK0 ] unsigned char 
  6570 ;;  counter         1   12[BANK0 ] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      unsigned char 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, btemp+1
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6580 ;;      Params:         0       1       0       0       0
  6581 ;;      Locals:         0       3       0       0       0
  6582 ;;      Temps:          0       0       0       0       0
  6583 ;;      Totals:         0       4       0       0       0
  6584 ;;Total ram usage:        4 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    3
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_DIO_Read
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           
  6595                           ;psect for function ___lbdiv
  6596  1D68                     ___lbdiv:
  6597                           
  6598                           ;incstack = 0
  6599                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  6600                           ;___lbdiv@dividend stored from wreg
  6601  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  6602  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  6603  1D6A  00AB               	movwf	___lbdiv@dividend
  6604  1D6B                     l7428:
  6605  1D6B  01AD               	clrf	___lbdiv@quotient
  6606  1D6C                     l7430:
  6607  1D6C  082A               	movf	___lbdiv@divisor,w
  6608  1D6D  1903               	btfsc	3,2
  6609  1D6E  2D70               	goto	u4881
  6610  1D6F  2D71               	goto	u4880
  6611  1D70                     u4881:
  6612  1D70  2D91               	goto	l7450
  6613  1D71                     u4880:
  6614  1D71                     l7432:
  6615  1D71  01AC               	clrf	___lbdiv@counter
  6616  1D72  0AAC               	incf	___lbdiv@counter,f
  6617  1D73  2D7A               	goto	l7438
  6618  1D74                     l7434:
  6619  1D74  1003               	clrc
  6620  1D75  0DAA               	rlf	___lbdiv@divisor,f
  6621  1D76                     l7436:
  6622  1D76  3001               	movlw	1
  6623  1D77  00FF               	movwf	btemp+1
  6624  1D78  087F               	movf	btemp+1,w
  6625  1D79  07AC               	addwf	___lbdiv@counter,f
  6626  1D7A                     l7438:
  6627  1D7A  1FAA               	btfss	___lbdiv@divisor,7
  6628  1D7B  2D7D               	goto	u4891
  6629  1D7C  2D7E               	goto	u4890
  6630  1D7D                     u4891:
  6631  1D7D  2D74               	goto	l7434
  6632  1D7E                     u4890:
  6633  1D7E                     l7440:
  6634  1D7E  1003               	clrc
  6635  1D7F  0DAD               	rlf	___lbdiv@quotient,f
  6636  1D80  082A               	movf	___lbdiv@divisor,w
  6637  1D81  022B               	subwf	___lbdiv@dividend,w
  6638  1D82  1C03               	skipc
  6639  1D83  2D85               	goto	u4901
  6640  1D84  2D86               	goto	u4900
  6641  1D85                     u4901:
  6642  1D85  2D89               	goto	l7446
  6643  1D86                     u4900:
  6644  1D86                     l7442:
  6645  1D86  082A               	movf	___lbdiv@divisor,w
  6646  1D87  02AB               	subwf	___lbdiv@dividend,f
  6647  1D88                     l7444:
  6648  1D88  142D               	bsf	___lbdiv@quotient,0
  6649  1D89                     l7446:
  6650  1D89  1003               	clrc
  6651  1D8A  0CAA               	rrf	___lbdiv@divisor,f
  6652  1D8B                     l7448:
  6653  1D8B  3001               	movlw	1
  6654  1D8C  02AC               	subwf	___lbdiv@counter,f
  6655  1D8D  1D03               	btfss	3,2
  6656  1D8E  2D90               	goto	u4911
  6657  1D8F  2D91               	goto	u4910
  6658  1D90                     u4911:
  6659  1D90  2D7E               	goto	l7440
  6660  1D91                     u4910:
  6661  1D91                     l7450:
  6662  1D91  082D               	movf	___lbdiv@quotient,w
  6663  1D92                     l1168:
  6664  1D92  0008               	return
  6665  1D93                     __end_of___lbdiv:
  6666                           
  6667                           	psect	text30
  6668  1DEE                     __ptext30:	
  6669 ;; *************** function _TemperatureAVGReading_Update *****************
  6670 ;; Defined at:
  6671 ;;		line 64 in file "TempAvgReading.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  u8_LoopCount    1    5[BANK3 ] unsigned char 
  6676 ;;  u8_LMTempera    1    4[BANK3 ] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         0       0       0       0       0
  6687 ;;      Locals:         0       0       0       2       0
  6688 ;;      Temps:          0       0       0       0       0
  6689 ;;      Totals:         0       0       0       2       0
  6690 ;;Total ram usage:        2 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    6
  6693 ;; This function calls:
  6694 ;;		_LM_Read
  6695 ;;		_LM_Update
  6696 ;; This function is called by:
  6697 ;;		_App_MainLoop
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           
  6702                           ;psect for function _TemperatureAVGReading_Update
  6703  1DEE                     _TemperatureAVGReading_Update:
  6704  1DEE                     l8662:	
  6705                           ;incstack = 0
  6706                           ; Regs used in _TemperatureAVGReading_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
      +                          th+cstack]
  6707                           
  6708                           
  6709                           ;TempAvgReading.c: 66:         u8_TR_TickCounter += 20;
  6710  1DEE  3014               	movlw	20
  6711  1DEF  00FF               	movwf	btemp+1
  6712  1DF0  087F               	movf	btemp+1,w
  6713  1DF1  1683               	bsf	3,5	;RP0=1, select bank1
  6714  1DF2  1303               	bcf	3,6	;RP1=0, select bank1
  6715  1DF3  07C2               	addwf	_u8_TR_TickCounter^(0+128),f
  6716  1DF4                     l8664:
  6717                           
  6718                           ;TempAvgReading.c: 68:     if (u8_TR_TickCounter != 100){
  6719  1DF4  3064               	movlw	100
  6720  1DF5  0642               	xorwf	_u8_TR_TickCounter^(0+128),w
  6721  1DF6  1903               	btfsc	3,2
  6722  1DF7  2DF9               	goto	u6541
  6723  1DF8  2DFA               	goto	u6540
  6724  1DF9                     u6541:
  6725  1DF9  2DFB               	goto	l8668
  6726  1DFA                     u6540:
  6727  1DFA  2E23               	goto	l728
  6728  1DFB                     l8668:
  6729                           
  6730                           ;TempAvgReading.c: 72:     u8_TR_TickCounter = 0 ;
  6731  1DFB  01C2               	clrf	_u8_TR_TickCounter^(0+128)
  6732  1DFC                     l8670:
  6733                           
  6734                           ;TempAvgReading.c: 75:     uint8 u8_LMTemperature;;TempAvgReading.c: 76:     uint8 u8_Lo
      +                          opCounter;;TempAvgReading.c: 78:     LM_Update();
  6735  1DFC  160A  158A  231B  160A  158A  	fcall	_LM_Update
  6736  1E01                     l8672:
  6737                           
  6738                           ;TempAvgReading.c: 79:     LM_Read(&u8_LMTemperature);
  6739  1E01  30DE               	movlw	(low (TemperatureAVGReading_Update@u8_LMTemperature| (0+256)))& (0+255)
  6740  1E02  160A  118A  24E3  160A  158A  	fcall	_LM_Read
  6741                           
  6742                           ;TempAvgReading.c: 81:     for(u8_LoopCounter=0;u8_LoopCounter < (10 -1);u8_LoopCounter+
      +                          +)
  6743  1E07  1683               	bsf	3,5	;RP0=1, select bank3
  6744  1E08  1703               	bsf	3,6	;RP1=1, select bank3
  6745  1E09  01DF               	clrf	TemperatureAVGReading_Update@u8_LoopCounter^(0+384)
  6746  1E0A                     l8678:
  6747                           
  6748                           ;TempAvgReading.c: 82:     {;TempAvgReading.c: 83:         au8_TemperatureSamples[u8_Loo
      +                          pCounter] = au8_TemperatureSamples[(u8_LoopCounter+1)];
  6749  1E0A  085F               	movf	TemperatureAVGReading_Update@u8_LoopCounter^(0+384),w
  6750  1E0B  3ED1               	addlw	(low ((_au8_TemperatureSamples| (0+256)+1)))& (0+255)
  6751  1E0C  0084               	movwf	4
  6752  1E0D  1783               	bsf	3,7	;select IRP bank3
  6753  1E0E  0800               	movf	0,w
  6754  1E0F  00FF               	movwf	btemp+1
  6755  1E10  085F               	movf	TemperatureAVGReading_Update@u8_LoopCounter^(0+384),w
  6756  1E11  3ED0               	addlw	(low (_au8_TemperatureSamples| (0+256)))& (0+255)
  6757  1E12  0084               	movwf	4
  6758  1E13  087F               	movf	btemp+1,w
  6759  1E14  0080               	movwf	0
  6760  1E15                     l8680:
  6761                           
  6762                           ;TempAvgReading.c: 84:     }
  6763  1E15  3001               	movlw	1
  6764  1E16  00FF               	movwf	btemp+1
  6765  1E17  087F               	movf	btemp+1,w
  6766  1E18  07DF               	addwf	TemperatureAVGReading_Update@u8_LoopCounter^(0+384),f
  6767  1E19                     l8682:
  6768  1E19  3009               	movlw	9
  6769  1E1A  025F               	subwf	TemperatureAVGReading_Update@u8_LoopCounter^(0+384),w
  6770  1E1B  1C03               	skipc
  6771  1E1C  2E1E               	goto	u6551
  6772  1E1D  2E1F               	goto	u6550
  6773  1E1E                     u6551:
  6774  1E1E  2E0A               	goto	l8678
  6775  1E1F                     u6550:
  6776  1E1F                     l8684:
  6777                           
  6778                           ;TempAvgReading.c: 86:     au8_TemperatureSamples[9]=u8_LMTemperature;
  6779  1E1F  085E               	movf	TemperatureAVGReading_Update@u8_LMTemperature^(0+384),w
  6780  1E20  00FF               	movwf	btemp+1
  6781  1E21  087F               	movf	btemp+1,w
  6782  1E22  00D9               	movwf	(_au8_TemperatureSamples^(0+384)+9)
  6783  1E23                     l728:
  6784  1E23  0008               	return
  6785  1E24                     __end_of_TemperatureAVGReading_Update:
  6786                           
  6787                           	psect	text31
  6788  1B1B                     __ptext31:	
  6789 ;; *************** function _LM_Update *****************
  6790 ;; Defined at:
  6791 ;;		line 77 in file "LM35.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6805 ;;      Params:         0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0
  6808 ;;      Totals:         0       0       0       0       0
  6809 ;;Total ram usage:        0 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    4
  6812 ;; This function calls:
  6813 ;;		_ADC_ReadResult
  6814 ;;		_ADC_startConversion
  6815 ;; This function is called by:
  6816 ;;		_TemperatureAVGReading_Update
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           
  6821                           ;psect for function _LM_Update
  6822  1B1B                     _LM_Update:
  6823  1B1B                     l7922:	
  6824                           ;incstack = 0
  6825                           ; Regs used in _LM_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6826                           
  6827                           
  6828                           ;LM35.c: 79:         ADC_startConversion((0x10));
  6829  1B1B  3010               	movlw	16
  6830  1B1C  160A  158A  23B0  160A  158A  	fcall	_ADC_startConversion
  6831  1B21                     l7924:
  6832                           
  6833                           ;LM35.c: 80:         ADC_ReadResult(&u16_ADCReading);
  6834  1B21  3062               	movlw	(low (_u16_ADCReading| 0))& (0+255)
  6835  1B22  160A  158A  2704  160A  158A  	fcall	_ADC_ReadResult
  6836  1B27                     l237:
  6837  1B27  0008               	return
  6838  1B28                     __end_of_LM_Update:
  6839                           
  6840                           	psect	text32
  6841  1BB0                     __ptext32:	
  6842 ;; *************** function _ADC_startConversion *****************
  6843 ;; Defined at:
  6844 ;;		line 150 in file "ADC.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  u8_channel      1    wreg     unsigned char 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  u8_channel      1   10[BANK0 ] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  1    wreg      void 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0, btemp+1
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6858 ;;      Params:         0       0       0       0       0
  6859 ;;      Locals:         0       1       0       0       0
  6860 ;;      Temps:          0       0       0       0       0
  6861 ;;      Totals:         0       1       0       0       0
  6862 ;;Total ram usage:        1 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    3
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_LM_Update
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           
  6873                           ;psect for function _ADC_startConversion
  6874  1BB0                     _ADC_startConversion:
  6875                           
  6876                           ;incstack = 0
  6877                           ; Regs used in _ADC_startConversion: [wreg+status,2+status,0+btemp+1]
  6878                           ;ADC_startConversion@u8_channel stored from wreg
  6879  1BB0  1283               	bcf	3,5	;RP0=0, select bank0
  6880  1BB1  1303               	bcf	3,6	;RP1=0, select bank0
  6881  1BB2  00AA               	movwf	ADC_startConversion@u8_channel
  6882  1BB3                     l7188:
  6883                           
  6884                           ;ADC.c: 150: extern void ADC_startConversion(uint8 u8_channel);ADC.c: 151: {;ADC.c: 152:
      +                               u8_channel &= 0x38;
  6885  1BB3  3038               	movlw	56
  6886  1BB4  00FF               	movwf	btemp+1
  6887  1BB5  087F               	movf	btemp+1,w
  6888  1BB6  05AA               	andwf	ADC_startConversion@u8_channel,f
  6889  1BB7                     l7190:
  6890                           
  6891                           ;ADC.c: 154:     (ADCON0)&=~(0x38);
  6892  1BB7  30C7               	movlw	199
  6893  1BB8  00FF               	movwf	btemp+1
  6894  1BB9  087F               	movf	btemp+1,w
  6895  1BBA  059F               	andwf	31,f	;volatile
  6896  1BBB                     l7192:
  6897                           
  6898                           ;ADC.c: 155:     (ADCON0)|=(u8_channel);
  6899  1BBB  082A               	movf	ADC_startConversion@u8_channel,w	;volatile
  6900  1BBC  00FF               	movwf	btemp+1
  6901  1BBD  087F               	movf	btemp+1,w
  6902  1BBE  049F               	iorwf	31,f	;volatile
  6903  1BBF                     l7194:
  6904                           
  6905                           ;ADC.c: 158:     (ADCON0)|=(0x04);
  6906  1BBF  151F               	bsf	31,2	;volatile
  6907  1BC0                     l26:
  6908  1BC0  0008               	return
  6909  1BC1                     __end_of_ADC_startConversion:
  6910                           
  6911                           	psect	text33
  6912  1F04                     __ptext33:	
  6913 ;; *************** function _ADC_ReadResult *****************
  6914 ;; Defined at:
  6915 ;;		line 174 in file "ADC.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  ptru16_Resul    1    wreg     PTR unsigned int 
  6918 ;;		 -> u16_ADCReading(2), 
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  ptru16_Resul    1   12[BANK0 ] PTR unsigned int 
  6921 ;;		 -> u16_ADCReading(2), 
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6931 ;;      Params:         0       0       0       0       0
  6932 ;;      Locals:         0       1       0       0       0
  6933 ;;      Temps:          0       2       0       0       0
  6934 ;;      Totals:         0       3       0       0       0
  6935 ;;Total ram usage:        3 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    3
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_LM_Update
  6942 ;;		_LM_ReadingADC_CBK
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           
  6947                           ;psect for function _ADC_ReadResult
  6948  1F04                     _ADC_ReadResult:
  6949                           
  6950                           ;incstack = 0
  6951                           ; Regs used in _ADC_ReadResult: [wreg-fsr0h+status,2+status,0+btemp+1]
  6952                           ;ADC_ReadResult@ptru16_Result stored from wreg
  6953  1F04  1283               	bcf	3,5	;RP0=0, select bank0
  6954  1F05  1303               	bcf	3,6	;RP1=0, select bank0
  6955  1F06  00AC               	movwf	ADC_ReadResult@ptru16_Result
  6956  1F07                     l7196:
  6957                           
  6958                           ;ADC.c: 174: extern void ADC_ReadResult(uint16 *ptru16_Result);ADC.c: 175: {;ADC.c: 176:
      +                               switch (u8_Mode)
  6959  1F07  2F2E               	goto	l7206
  6960  1F08                     l31:
  6961  1F08  191F               	btfsc	31,2	;volatile
  6962  1F09  2F0B               	goto	u4621
  6963  1F0A  2F0C               	goto	u4620
  6964  1F0B                     u4621:
  6965  1F0B  2F08               	goto	l31
  6966  1F0C                     u4620:
  6967  1F0C                     l7198:
  6968                           
  6969                           ;ADC.c: 181:             *ptru16_Result = 0;
  6970  1F0C  082C               	movf	ADC_ReadResult@ptru16_Result,w
  6971  1F0D  0084               	movwf	4
  6972  1F0E  1383               	bcf	3,7	;select IRP bank0
  6973  1F0F  0180               	clrf	0
  6974  1F10  0A84               	incf	4,f
  6975  1F11  0180               	clrf	0
  6976  1F12                     l7200:
  6977                           
  6978                           ;ADC.c: 182:             *ptru16_Result = ADRESL;
  6979  1F12  1683               	bsf	3,5	;RP0=1, select bank1
  6980  1F13  1303               	bcf	3,6	;RP1=0, select bank1
  6981  1F14  081E               	movf	30,w	;volatile
  6982  1F15  1283               	bcf	3,5	;RP0=0, select bank0
  6983  1F16  1303               	bcf	3,6	;RP1=0, select bank0
  6984  1F17  00AA               	movwf	??_ADC_ReadResult
  6985  1F18  01AB               	clrf	??_ADC_ReadResult+1
  6986  1F19  082C               	movf	ADC_ReadResult@ptru16_Result,w
  6987  1F1A  0084               	movwf	4
  6988  1F1B  082A               	movf	??_ADC_ReadResult,w
  6989  1F1C  0080               	movwf	0
  6990  1F1D  0A84               	incf	4,f
  6991  1F1E  082B               	movf	??_ADC_ReadResult+1,w
  6992  1F1F  0080               	movwf	0
  6993  1F20                     l7202:
  6994                           
  6995                           ;ADC.c: 183:             *ptru16_Result |= (uint16)(ADRESH<<8);
  6996  1F20  081E               	movf	30,w	;volatile
  6997  1F21  00AA               	movwf	??_ADC_ReadResult
  6998  1F22  01AB               	clrf	??_ADC_ReadResult+1
  6999  1F23  082A               	movf	??_ADC_ReadResult,w
  7000  1F24  00AB               	movwf	??_ADC_ReadResult+1
  7001  1F25  01AA               	clrf	??_ADC_ReadResult
  7002  1F26  082C               	movf	ADC_ReadResult@ptru16_Result,w
  7003  1F27  0084               	movwf	4
  7004  1F28  082A               	movf	??_ADC_ReadResult,w
  7005  1F29  0480               	iorwf	0,f
  7006  1F2A  0A84               	incf	4,f
  7007  1F2B  082B               	movf	??_ADC_ReadResult+1,w
  7008  1F2C  0480               	iorwf	0,f
  7009                           
  7010                           ;ADC.c: 184:             break;
  7011  1F2D  2F3E               	goto	l36
  7012  1F2E                     l7206:
  7013  1F2E  0861               	movf	_u8_Mode@ADC$F29,w
  7014  1F2F  00AA               	movwf	??_ADC_ReadResult
  7015  1F30  01AB               	clrf	??_ADC_ReadResult+1
  7016                           
  7017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7018                           ; Switch size 1, requested type "simple"
  7019                           ; Number of cases is 1, Range of values is 0 to 0
  7020                           ; switch strategies available:
  7021                           ; Name         Instructions Cycles
  7022                           ; simple_byte            4     3 (average)
  7023                           ; direct_byte           11     8 (fixed)
  7024                           ; jumptable            260     6 (fixed)
  7025                           ;	Chosen strategy is simple_byte
  7026  1F31  082B               	movf	??_ADC_ReadResult+1,w
  7027  1F32  3A00               	xorlw	0	; case 0
  7028  1F33  1903               	skipnz
  7029  1F34  2F36               	goto	l9826
  7030  1F35  2F3E               	goto	l36
  7031  1F36                     l9826:
  7032                           
  7033                           ; Switch size 1, requested type "simple"
  7034                           ; Number of cases is 2, Range of values is 0 to 8
  7035                           ; switch strategies available:
  7036                           ; Name         Instructions Cycles
  7037                           ; simple_byte            7     4 (average)
  7038                           ; direct_byte           35     8 (fixed)
  7039                           ; jumptable            260     6 (fixed)
  7040                           ;	Chosen strategy is simple_byte
  7041  1F36  082A               	movf	??_ADC_ReadResult,w
  7042  1F37  3A00               	xorlw	0	; case 0
  7043  1F38  1903               	skipnz
  7044  1F39  2F08               	goto	l31
  7045  1F3A  3A08               	xorlw	8	; case 8
  7046  1F3B  1903               	skipnz
  7047  1F3C  2F3E               	goto	l36
  7048  1F3D  2F3E               	goto	l36
  7049  1F3E                     l36:
  7050  1F3E  0008               	return
  7051  1F3F                     __end_of_ADC_ReadResult:
  7052                           
  7053                           	psect	text34
  7054  0D30                     __ptext34:	
  7055 ;; *************** function _SSD_Update *****************
  7056 ;; Defined at:
  7057 ;;		line 110 in file "SSD.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7071 ;;      Params:         0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0
  7073 ;;      Temps:          0       2       0       0       0
  7074 ;;      Totals:         0       2       0       0       0
  7075 ;;Total ram usage:        2 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    4
  7078 ;; This function calls:
  7079 ;;		_DIO_PortWrite
  7080 ;;		_DIO_Write
  7081 ;; This function is called by:
  7082 ;;		_App_MainLoop
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           
  7087                           ;psect for function _SSD_Update
  7088  0D30                     _SSD_Update:
  7089  0D30                     l8568:	
  7090                           ;incstack = 0
  7091                           ; Regs used in _SSD_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7092                           
  7093                           
  7094                           ;SSD.c: 114:     u8_SSD_TickCounter += 20;
  7095  0D30  3014               	movlw	20
  7096  0D31  00FF               	movwf	btemp+1
  7097  0D32  087F               	movf	btemp+1,w
  7098  0D33  07F6               	addwf	_u8_SSD_TickCounter,f
  7099  0D34                     l8570:
  7100                           
  7101                           ;SSD.c: 116:     if (u8_SSD_TickCounter != 20){
  7102  0D34  3014               	movlw	20
  7103  0D35  0676               	xorwf	_u8_SSD_TickCounter,w
  7104  0D36  1903               	btfsc	3,2
  7105  0D37  2D39               	goto	u6431
  7106  0D38  2D3A               	goto	u6430
  7107  0D39                     u6431:
  7108  0D39  2D3B               	goto	l8574
  7109  0D3A                     u6430:
  7110  0D3A  2E36               	goto	l454
  7111  0D3B                     l8574:
  7112                           
  7113                           ;SSD.c: 120:     u8_SSD_TickCounter = 0 ;
  7114  0D3B  01F6               	clrf	_u8_SSD_TickCounter
  7115  0D3C                     l8576:
  7116                           
  7117                           ;SSD.c: 123:     DIO_Write(0,0x20,0);
  7118  0D3C  3020               	movlw	32
  7119  0D3D  00FF               	movwf	btemp+1
  7120  0D3E  087F               	movf	btemp+1,w
  7121  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  7122  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  7123  0D41  00AA               	movwf	DIO_Write@u8_pins
  7124  0D42  01AB               	clrf	DIO_Write@u8_value
  7125  0D43  3000               	movlw	0
  7126  0D44  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7127  0D49                     l8578:
  7128                           
  7129                           ;SSD.c: 124:     DIO_Write(0,0x10,0);
  7130  0D49  3010               	movlw	16
  7131  0D4A  00FF               	movwf	btemp+1
  7132  0D4B  087F               	movf	btemp+1,w
  7133  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  7134  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  7135  0D4E  00AA               	movwf	DIO_Write@u8_pins
  7136  0D4F  01AB               	clrf	DIO_Write@u8_value
  7137  0D50  3000               	movlw	0
  7138  0D51  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7139  0D56                     l8580:
  7140                           
  7141                           ;SSD.c: 125:     DIO_Write(0,0x08,0);
  7142  0D56  3008               	movlw	8
  7143  0D57  00FF               	movwf	btemp+1
  7144  0D58  087F               	movf	btemp+1,w
  7145  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  7146  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  7147  0D5B  00AA               	movwf	DIO_Write@u8_pins
  7148  0D5C  01AB               	clrf	DIO_Write@u8_value
  7149  0D5D  3000               	movlw	0
  7150  0D5E  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7151  0D63                     l8582:
  7152                           
  7153                           ;SSD.c: 126:     DIO_Write(0,0x04,0);
  7154  0D63  3004               	movlw	4
  7155  0D64  00FF               	movwf	btemp+1
  7156  0D65  087F               	movf	btemp+1,w
  7157  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  7158  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  7159  0D68  00AA               	movwf	DIO_Write@u8_pins
  7160  0D69  01AB               	clrf	DIO_Write@u8_value
  7161  0D6A  3000               	movlw	0
  7162  0D6B  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7163  0D70                     l8584:
  7164                           
  7165                           ;SSD.c: 130:     if(astr_SSDs[u8_SSD_Current].u8_SSD_State == 1 )
  7166  0D70  0877               	movf	_u8_SSD_Current,w
  7167  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  7168  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  7169  0D73  00AF               	movwf	??_SSD_Update
  7170  0D74  072F               	addwf	??_SSD_Update,w
  7171  0D75  3EA1               	addlw	(low ((_astr_SSDs| 0+1)))& (0+255)
  7172  0D76  0084               	movwf	4
  7173  0D77  1383               	bcf	3,7	;select IRP bank1
  7174  0D78  0300               	decf	0,w
  7175  0D79  1D03               	btfss	3,2
  7176  0D7A  2D7C               	goto	u6441
  7177  0D7B  2D7D               	goto	u6440
  7178  0D7C                     u6441:
  7179  0D7C  2E20               	goto	l8600
  7180  0D7D                     u6440:
  7181  0D7D  2E0A               	goto	l8598
  7182  0D7E                     l8588:
  7183                           
  7184                           ;SSD.c: 137:                 DIO_PortWrite (3, au8_SSD_DataMask [ astr_SSDs[u8_SSD_Curre
      +                          nt].u8_SSD_Data ] );
  7185  0D7E  0877               	movf	_u8_SSD_Current,w
  7186  0D7F  00AF               	movwf	??_SSD_Update
  7187  0D80  072F               	addwf	??_SSD_Update,w
  7188  0D81  3EA0               	addlw	(low (_astr_SSDs| 0))& (0+255)
  7189  0D82  0084               	movwf	4
  7190  0D83  0800               	movf	0,w
  7191  0D84  3EDC               	addlw	(low (_au8_SSD_DataMask| 0))& (0+255)
  7192  0D85  0084               	movwf	4
  7193  0D86  0800               	movf	0,w
  7194  0D87  00FF               	movwf	btemp+1
  7195  0D88  087F               	movf	btemp+1,w
  7196  0D89  00AA               	movwf	DIO_PortWrite@u8_value
  7197  0D8A  3003               	movlw	3
  7198  0D8B  160A  158A  2593  120A  158A  	fcall	_DIO_PortWrite
  7199                           
  7200                           ;SSD.c: 139:                 DIO_Write(0,0x20,0xFF);
  7201  0D90  3020               	movlw	32
  7202  0D91  00FF               	movwf	btemp+1
  7203  0D92  087F               	movf	btemp+1,w
  7204  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  7205  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  7206  0D95  00AA               	movwf	DIO_Write@u8_pins
  7207  0D96  30FF               	movlw	255
  7208  0D97  00FF               	movwf	btemp+1
  7209  0D98  087F               	movf	btemp+1,w
  7210  0D99  00AB               	movwf	DIO_Write@u8_value
  7211  0D9A  3000               	movlw	0
  7212  0D9B  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7213                           
  7214                           ;SSD.c: 140:                 break;
  7215  0DA0  2E2B               	goto	l8602
  7216  0DA1                     l8590:
  7217                           
  7218                           ;SSD.c: 143:                 DIO_PortWrite (3, au8_SSD_DataMask [ astr_SSDs[u8_SSD_Curre
      +                          nt].u8_SSD_Data ] );
  7219  0DA1  0877               	movf	_u8_SSD_Current,w
  7220  0DA2  00AF               	movwf	??_SSD_Update
  7221  0DA3  072F               	addwf	??_SSD_Update,w
  7222  0DA4  3EA0               	addlw	(low (_astr_SSDs| 0))& (0+255)
  7223  0DA5  0084               	movwf	4
  7224  0DA6  0800               	movf	0,w
  7225  0DA7  3EDC               	addlw	(low (_au8_SSD_DataMask| 0))& (0+255)
  7226  0DA8  0084               	movwf	4
  7227  0DA9  0800               	movf	0,w
  7228  0DAA  00FF               	movwf	btemp+1
  7229  0DAB  087F               	movf	btemp+1,w
  7230  0DAC  00AA               	movwf	DIO_PortWrite@u8_value
  7231  0DAD  3003               	movlw	3
  7232  0DAE  160A  158A  2593  120A  158A  	fcall	_DIO_PortWrite
  7233                           
  7234                           ;SSD.c: 145:                 DIO_Write(0,0x10,0xFF);
  7235  0DB3  3010               	movlw	16
  7236  0DB4  00FF               	movwf	btemp+1
  7237  0DB5  087F               	movf	btemp+1,w
  7238  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  7239  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  7240  0DB8  00AA               	movwf	DIO_Write@u8_pins
  7241  0DB9  30FF               	movlw	255
  7242  0DBA  00FF               	movwf	btemp+1
  7243  0DBB  087F               	movf	btemp+1,w
  7244  0DBC  00AB               	movwf	DIO_Write@u8_value
  7245  0DBD  3000               	movlw	0
  7246  0DBE  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7247                           
  7248                           ;SSD.c: 146:                 break;
  7249  0DC3  2E2B               	goto	l8602
  7250  0DC4                     l8592:
  7251                           
  7252                           ;SSD.c: 149:                 DIO_PortWrite (3, au8_SSD_DataMask [ astr_SSDs[u8_SSD_Curre
      +                          nt].u8_SSD_Data ] );
  7253  0DC4  0877               	movf	_u8_SSD_Current,w
  7254  0DC5  00AF               	movwf	??_SSD_Update
  7255  0DC6  072F               	addwf	??_SSD_Update,w
  7256  0DC7  3EA0               	addlw	(low (_astr_SSDs| 0))& (0+255)
  7257  0DC8  0084               	movwf	4
  7258  0DC9  0800               	movf	0,w
  7259  0DCA  3EDC               	addlw	(low (_au8_SSD_DataMask| 0))& (0+255)
  7260  0DCB  0084               	movwf	4
  7261  0DCC  0800               	movf	0,w
  7262  0DCD  00FF               	movwf	btemp+1
  7263  0DCE  087F               	movf	btemp+1,w
  7264  0DCF  00AA               	movwf	DIO_PortWrite@u8_value
  7265  0DD0  3003               	movlw	3
  7266  0DD1  160A  158A  2593  120A  158A  	fcall	_DIO_PortWrite
  7267                           
  7268                           ;SSD.c: 151:                 DIO_Write(0,0x08,0xFF);
  7269  0DD6  3008               	movlw	8
  7270  0DD7  00FF               	movwf	btemp+1
  7271  0DD8  087F               	movf	btemp+1,w
  7272  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  7273  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  7274  0DDB  00AA               	movwf	DIO_Write@u8_pins
  7275  0DDC  30FF               	movlw	255
  7276  0DDD  00FF               	movwf	btemp+1
  7277  0DDE  087F               	movf	btemp+1,w
  7278  0DDF  00AB               	movwf	DIO_Write@u8_value
  7279  0DE0  3000               	movlw	0
  7280  0DE1  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7281                           
  7282                           ;SSD.c: 152:                 break;
  7283  0DE6  2E2B               	goto	l8602
  7284  0DE7                     l8594:
  7285                           
  7286                           ;SSD.c: 155:                 DIO_PortWrite (3, au8_SSD_DataMask [ astr_SSDs[u8_SSD_Curre
      +                          nt].u8_SSD_Data ] );
  7287  0DE7  0877               	movf	_u8_SSD_Current,w
  7288  0DE8  00AF               	movwf	??_SSD_Update
  7289  0DE9  072F               	addwf	??_SSD_Update,w
  7290  0DEA  3EA0               	addlw	(low (_astr_SSDs| 0))& (0+255)
  7291  0DEB  0084               	movwf	4
  7292  0DEC  0800               	movf	0,w
  7293  0DED  3EDC               	addlw	(low (_au8_SSD_DataMask| 0))& (0+255)
  7294  0DEE  0084               	movwf	4
  7295  0DEF  0800               	movf	0,w
  7296  0DF0  00FF               	movwf	btemp+1
  7297  0DF1  087F               	movf	btemp+1,w
  7298  0DF2  00AA               	movwf	DIO_PortWrite@u8_value
  7299  0DF3  3003               	movlw	3
  7300  0DF4  160A  158A  2593  120A  158A  	fcall	_DIO_PortWrite
  7301                           
  7302                           ;SSD.c: 157:                 DIO_Write(0,0x04,0xFF);
  7303  0DF9  3004               	movlw	4
  7304  0DFA  00FF               	movwf	btemp+1
  7305  0DFB  087F               	movf	btemp+1,w
  7306  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  7307  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  7308  0DFE  00AA               	movwf	DIO_Write@u8_pins
  7309  0DFF  30FF               	movlw	255
  7310  0E00  00FF               	movwf	btemp+1
  7311  0E01  087F               	movf	btemp+1,w
  7312  0E02  00AB               	movwf	DIO_Write@u8_value
  7313  0E03  3000               	movlw	0
  7314  0E04  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7315                           
  7316                           ;SSD.c: 158:                 break;
  7317  0E09  2E2B               	goto	l8602
  7318  0E0A                     l8598:
  7319  0E0A  0877               	movf	_u8_SSD_Current,w
  7320  0E0B  00AF               	movwf	??_SSD_Update
  7321  0E0C  01B0               	clrf	??_SSD_Update+1
  7322                           
  7323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7324                           ; Switch size 1, requested type "simple"
  7325                           ; Number of cases is 1, Range of values is 0 to 0
  7326                           ; switch strategies available:
  7327                           ; Name         Instructions Cycles
  7328                           ; simple_byte            4     3 (average)
  7329                           ; direct_byte           11     8 (fixed)
  7330                           ; jumptable            260     6 (fixed)
  7331                           ;	Chosen strategy is simple_byte
  7332  0E0D  0830               	movf	??_SSD_Update+1,w
  7333  0E0E  3A00               	xorlw	0	; case 0
  7334  0E0F  1903               	skipnz
  7335  0E10  2E12               	goto	l9828
  7336  0E11  2E2B               	goto	l8602
  7337  0E12                     l9828:
  7338                           
  7339                           ; Switch size 1, requested type "simple"
  7340                           ; Number of cases is 4, Range of values is 0 to 3
  7341                           ; switch strategies available:
  7342                           ; Name         Instructions Cycles
  7343                           ; simple_byte           13     7 (average)
  7344                           ; direct_byte           20     8 (fixed)
  7345                           ; jumptable            260     6 (fixed)
  7346                           ;	Chosen strategy is simple_byte
  7347  0E12  082F               	movf	??_SSD_Update,w
  7348  0E13  3A00               	xorlw	0	; case 0
  7349  0E14  1903               	skipnz
  7350  0E15  2D7E               	goto	l8588
  7351  0E16  3A01               	xorlw	1	; case 1
  7352  0E17  1903               	skipnz
  7353  0E18  2DA1               	goto	l8590
  7354  0E19  3A03               	xorlw	3	; case 2
  7355  0E1A  1903               	skipnz
  7356  0E1B  2DC4               	goto	l8592
  7357  0E1C  3A01               	xorlw	1	; case 3
  7358  0E1D  1903               	skipnz
  7359  0E1E  2DE7               	goto	l8594
  7360  0E1F  2E2B               	goto	l8602
  7361  0E20                     l8600:
  7362                           
  7363                           ;SSD.c: 164:     {;SSD.c: 165:         DIO_Write(3,0xFF,0);
  7364  0E20  30FF               	movlw	255
  7365  0E21  00FF               	movwf	btemp+1
  7366  0E22  087F               	movf	btemp+1,w
  7367  0E23  00AA               	movwf	DIO_Write@u8_pins
  7368  0E24  01AB               	clrf	DIO_Write@u8_value
  7369  0E25  3003               	movlw	3
  7370  0E26  160A  118A  2618  120A  158A  	fcall	_DIO_Write
  7371  0E2B                     l8602:
  7372                           
  7373                           ;SSD.c: 169:     if(u8_SSD_Current == 1)
  7374  0E2B  0377               	decf	_u8_SSD_Current,w
  7375  0E2C  1D03               	btfss	3,2
  7376  0E2D  2E2F               	goto	u6451
  7377  0E2E  2E30               	goto	u6450
  7378  0E2F                     u6451:
  7379  0E2F  2E32               	goto	l8606
  7380  0E30                     u6450:
  7381  0E30                     l8604:
  7382                           
  7383                           ;SSD.c: 170:     {;SSD.c: 171:         u8_SSD_Current=0;
  7384  0E30  01F7               	clrf	_u8_SSD_Current
  7385                           
  7386                           ;SSD.c: 172:     }
  7387  0E31  2E36               	goto	l454
  7388  0E32                     l8606:
  7389                           
  7390                           ;SSD.c: 174:     {;SSD.c: 175:         u8_SSD_Current++;
  7391  0E32  3001               	movlw	1
  7392  0E33  00FF               	movwf	btemp+1
  7393  0E34  087F               	movf	btemp+1,w
  7394  0E35  07F7               	addwf	_u8_SSD_Current,f
  7395  0E36                     l454:
  7396  0E36  0008               	return
  7397  0E37                     __end_of_SSD_Update:
  7398                           
  7399                           	psect	text35
  7400  1D93                     __ptext35:	
  7401 ;; *************** function _DIO_PortWrite *****************
  7402 ;; Defined at:
  7403 ;;		line 367 in file "DIO.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  u8_GPIO         1    wreg     unsigned char 
  7406 ;;  u8_value        1   10[BANK0 ] unsigned char 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  u8_GPIO         1   13[BANK0 ] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      void 
  7411 ;; Registers used:
  7412 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7418 ;;      Params:         0       1       0       0       0
  7419 ;;      Locals:         0       1       0       0       0
  7420 ;;      Temps:          0       2       0       0       0
  7421 ;;      Totals:         0       4       0       0       0
  7422 ;;Total ram usage:        4 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    3
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_SSD_Update
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           
  7433                           ;psect for function _DIO_PortWrite
  7434  1D93                     _DIO_PortWrite:
  7435                           
  7436                           ;incstack = 0
  7437                           ; Regs used in _DIO_PortWrite: [wreg-fsr0h+status,2+status,0]
  7438                           ;DIO_PortWrite@u8_GPIO stored from wreg
  7439  1D93  1283               	bcf	3,5	;RP0=0, select bank0
  7440  1D94  1303               	bcf	3,6	;RP1=0, select bank0
  7441  1D95  00AD               	movwf	DIO_PortWrite@u8_GPIO
  7442  1D96                     l7856:
  7443                           
  7444                           ;DIO.c: 367: void DIO_PortWrite (uint8 u8_GPIO, uint8 u8_value);DIO.c: 368: {;DIO.c: 369
      +                          :  switch (u8_GPIO)
  7445  1D96  2DA6               	goto	l7870
  7446  1D97                     l7858:
  7447                           
  7448                           ;DIO.c: 372:    (PORTA) = u8_value ;
  7449  1D97  082A               	movf	DIO_PortWrite@u8_value,w
  7450  1D98  0085               	movwf	5	;volatile
  7451                           
  7452                           ;DIO.c: 373:    break;
  7453  1D99  2DBF               	goto	l150
  7454  1D9A                     l7860:
  7455                           
  7456                           ;DIO.c: 375:    (PORTB) = u8_value ;
  7457  1D9A  082A               	movf	DIO_PortWrite@u8_value,w
  7458  1D9B  0086               	movwf	6	;volatile
  7459                           
  7460                           ;DIO.c: 376:    break;
  7461  1D9C  2DBF               	goto	l150
  7462  1D9D                     l7862:
  7463                           
  7464                           ;DIO.c: 378:    (PORTC) = u8_value ;
  7465  1D9D  082A               	movf	DIO_PortWrite@u8_value,w
  7466  1D9E  0087               	movwf	7	;volatile
  7467                           
  7468                           ;DIO.c: 379:    break;
  7469  1D9F  2DBF               	goto	l150
  7470  1DA0                     l7864:
  7471                           
  7472                           ;DIO.c: 381:    (PORTD) = u8_value ;
  7473  1DA0  082A               	movf	DIO_PortWrite@u8_value,w
  7474  1DA1  0088               	movwf	8	;volatile
  7475                           
  7476                           ;DIO.c: 382:    break;
  7477  1DA2  2DBF               	goto	l150
  7478  1DA3                     l7866:
  7479                           
  7480                           ;DIO.c: 384:    (PORTE) = u8_value ;
  7481  1DA3  082A               	movf	DIO_PortWrite@u8_value,w
  7482  1DA4  0089               	movwf	9	;volatile
  7483                           
  7484                           ;DIO.c: 385:    break;
  7485  1DA5  2DBF               	goto	l150
  7486  1DA6                     l7870:
  7487  1DA6  082D               	movf	DIO_PortWrite@u8_GPIO,w
  7488  1DA7  00AB               	movwf	??_DIO_PortWrite
  7489  1DA8  01AC               	clrf	??_DIO_PortWrite+1
  7490                           
  7491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7492                           ; Switch size 1, requested type "simple"
  7493                           ; Number of cases is 1, Range of values is 0 to 0
  7494                           ; switch strategies available:
  7495                           ; Name         Instructions Cycles
  7496                           ; simple_byte            4     3 (average)
  7497                           ; direct_byte           11     8 (fixed)
  7498                           ; jumptable            260     6 (fixed)
  7499                           ;	Chosen strategy is simple_byte
  7500  1DA9  082C               	movf	??_DIO_PortWrite+1,w
  7501  1DAA  3A00               	xorlw	0	; case 0
  7502  1DAB  1903               	skipnz
  7503  1DAC  2DAE               	goto	l9830
  7504  1DAD  2DBF               	goto	l150
  7505  1DAE                     l9830:
  7506                           
  7507                           ; Switch size 1, requested type "simple"
  7508                           ; Number of cases is 5, Range of values is 0 to 4
  7509                           ; switch strategies available:
  7510                           ; Name         Instructions Cycles
  7511                           ; simple_byte           16     9 (average)
  7512                           ; direct_byte           23     8 (fixed)
  7513                           ; jumptable            260     6 (fixed)
  7514                           ;	Chosen strategy is simple_byte
  7515  1DAE  082B               	movf	??_DIO_PortWrite,w
  7516  1DAF  3A00               	xorlw	0	; case 0
  7517  1DB0  1903               	skipnz
  7518  1DB1  2D97               	goto	l7858
  7519  1DB2  3A01               	xorlw	1	; case 1
  7520  1DB3  1903               	skipnz
  7521  1DB4  2D9A               	goto	l7860
  7522  1DB5  3A03               	xorlw	3	; case 2
  7523  1DB6  1903               	skipnz
  7524  1DB7  2D9D               	goto	l7862
  7525  1DB8  3A01               	xorlw	1	; case 3
  7526  1DB9  1903               	skipnz
  7527  1DBA  2DA0               	goto	l7864
  7528  1DBB  3A07               	xorlw	7	; case 4
  7529  1DBC  1903               	skipnz
  7530  1DBD  2DA3               	goto	l7866
  7531  1DBE  2DBF               	goto	l150
  7532  1DBF                     l150:
  7533  1DBF  0008               	return
  7534  1DC0                     __end_of_DIO_PortWrite:
  7535                           
  7536                           	psect	text36
  7537  0C2A                     __ptext36:	
  7538 ;; *************** function _Display_Update *****************
  7539 ;; Defined at:
  7540 ;;		line 66 in file "Display.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;		None
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7554 ;;      Params:         0       0       0       0       0
  7555 ;;      Locals:         0       0       0       0       0
  7556 ;;      Temps:          0       2       0       0       0
  7557 ;;      Totals:         0       2       0       0       0
  7558 ;;Total ram usage:        2 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    4
  7561 ;; This function calls:
  7562 ;;		_SSD_SetState
  7563 ;;		_SSD_SetValue
  7564 ;;		___awdiv
  7565 ;;		___awmod
  7566 ;; This function is called by:
  7567 ;;		_App_MainLoop
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           
  7572                           ;psect for function _Display_Update
  7573  0C2A                     _Display_Update:
  7574  0C2A                     l8186:	
  7575                           ;incstack = 0
  7576                           ; Regs used in _Display_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7577                           
  7578                           
  7579                           ;Display.c: 68:     u8_DisplayTickCounter += 20 ;
  7580  0C2A  3014               	movlw	20
  7581  0C2B  00FF               	movwf	btemp+1
  7582  0C2C  087F               	movf	btemp+1,w
  7583  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7584  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7585  0C2F  07DE               	addwf	_u8_DisplayTickCounter,f
  7586  0C30                     l8188:
  7587                           
  7588                           ;Display.c: 71:     if (u8_DisplayTickCounter != 40 )
  7589  0C30  3028               	movlw	40
  7590  0C31  065E               	xorwf	_u8_DisplayTickCounter,w
  7591  0C32  1903               	btfsc	3,2
  7592  0C33  2C35               	goto	u6271
  7593  0C34  2C36               	goto	u6270
  7594  0C35                     u6271:
  7595  0C35  2C37               	goto	l8192
  7596  0C36                     u6270:
  7597  0C36  2D2F               	goto	l173
  7598  0C37                     l8192:
  7599                           
  7600                           ;Display.c: 75:     u8_DisplayTickCounter=0;
  7601  0C37  01DE               	clrf	_u8_DisplayTickCounter
  7602                           
  7603                           ;Display.c: 77:     switch(u8_Mode)
  7604  0C38  2D1C               	goto	l8214
  7605  0C39                     l8194:
  7606                           
  7607                           ;Display.c: 80:             SSD_SetState(0,1);
  7608  0C39  01AA               	clrf	SSD_SetState@u8_SSD_State
  7609  0C3A  0AAA               	incf	SSD_SetState@u8_SSD_State,f
  7610  0C3B  3000               	movlw	0
  7611  0C3C  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7612                           
  7613                           ;Display.c: 81:             SSD_SetState(1,1);
  7614  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  7615  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  7616  0C43  01AA               	clrf	SSD_SetState@u8_SSD_State
  7617  0C44  0AAA               	incf	SSD_SetState@u8_SSD_State,f
  7618  0C45  3001               	movlw	1
  7619  0C46  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7620                           
  7621                           ;Display.c: 83:             SSD_SetValue(0,u8_Data%10);
  7622  0C4B  300A               	movlw	10
  7623  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  7624  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  7625  0C4E  00AA               	movwf	___awmod@divisor
  7626  0C4F  3000               	movlw	0
  7627  0C50  00AB               	movwf	___awmod@divisor+1
  7628  0C51  0860               	movf	_u8_Data,w
  7629  0C52  00B6               	movwf	??_Display_Update
  7630  0C53  01B7               	clrf	??_Display_Update+1
  7631  0C54  0836               	movf	??_Display_Update,w
  7632  0C55  00AC               	movwf	___awmod@dividend
  7633  0C56  0837               	movf	??_Display_Update+1,w
  7634  0C57  00AD               	movwf	___awmod@dividend+1
  7635  0C58  160A  118A  23C2  120A  158A  	fcall	___awmod
  7636  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  7637  0C5E  1303               	bcf	3,6	;RP1=0, select bank0
  7638  0C5F  082A               	movf	?___awmod,w
  7639  0C60  00FF               	movwf	btemp+1
  7640  0C61  087F               	movf	btemp+1,w
  7641  0C62  00B2               	movwf	SSD_SetValue@u8_SSD_Data
  7642  0C63  3000               	movlw	0
  7643  0C64  160A  158A  2692  120A  158A  	fcall	_SSD_SetValue
  7644                           
  7645                           ;Display.c: 84:             SSD_SetValue(1,u8_Data/10);
  7646  0C69  300A               	movlw	10
  7647  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  7648  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  7649  0C6C  00AA               	movwf	___awdiv@divisor
  7650  0C6D  3000               	movlw	0
  7651  0C6E  00AB               	movwf	___awdiv@divisor+1
  7652  0C6F  0860               	movf	_u8_Data,w
  7653  0C70  00B6               	movwf	??_Display_Update
  7654  0C71  01B7               	clrf	??_Display_Update+1
  7655  0C72  0836               	movf	??_Display_Update,w
  7656  0C73  00AC               	movwf	___awdiv@dividend
  7657  0C74  0837               	movf	??_Display_Update+1,w
  7658  0C75  00AD               	movwf	___awdiv@dividend+1
  7659  0C76  160A  118A  2681  120A  158A  	fcall	___awdiv
  7660  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  7661  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  7662  0C7D  082A               	movf	?___awdiv,w
  7663  0C7E  00FF               	movwf	btemp+1
  7664  0C7F  087F               	movf	btemp+1,w
  7665  0C80  00B2               	movwf	SSD_SetValue@u8_SSD_Data
  7666  0C81  3001               	movlw	1
  7667  0C82  160A  158A  2692  120A  158A  	fcall	_SSD_SetValue
  7668  0C87                     l8196:
  7669                           
  7670                           ;Display.c: 86:             u16_DisplayBlinkCounter = 0 ;
  7671  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  7672  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  7673  0C89  01C0               	clrf	_u16_DisplayBlinkCounter^(0+128)
  7674  0C8A  01C1               	clrf	(_u16_DisplayBlinkCounter+1)^(0+128)
  7675                           
  7676                           ;Display.c: 87:             break;
  7677  0C8B  2D2F               	goto	l173
  7678  0C8C                     l8198:
  7679                           
  7680                           ;Display.c: 90:             u16_DisplayBlinkCounter+= 40;
  7681  0C8C  3028               	movlw	40
  7682  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  7683  0C8E  1303               	bcf	3,6	;RP1=0, select bank1
  7684  0C8F  07C0               	addwf	_u16_DisplayBlinkCounter^(0+128),f
  7685  0C90  1803               	skipnc
  7686  0C91  0AC1               	incf	(_u16_DisplayBlinkCounter+1)^(0+128),f
  7687  0C92  3000               	movlw	0
  7688  0C93  07C1               	addwf	(_u16_DisplayBlinkCounter+1)^(0+128),f
  7689                           
  7690                           ;Display.c: 92:             if(u16_DisplayBlinkCounter >= 2000)
  7691  0C94  3007               	movlw	7
  7692  0C95  0241               	subwf	(_u16_DisplayBlinkCounter+1)^(0+128),w
  7693  0C96  30D0               	movlw	208
  7694  0C97  1903               	skipnz
  7695  0C98  0240               	subwf	_u16_DisplayBlinkCounter^(0+128),w
  7696  0C99  1C03               	skipc
  7697  0C9A  2C9C               	goto	u6281
  7698  0C9B  2C9D               	goto	u6280
  7699  0C9C                     u6281:
  7700  0C9C  2C9E               	goto	l8202
  7701  0C9D                     u6280:
  7702  0C9D  2C87               	goto	l8196
  7703  0C9E                     l8202:
  7704  0C9E  3003               	movlw	3
  7705  0C9F  0241               	subwf	(_u16_DisplayBlinkCounter+1)^(0+128),w
  7706  0CA0  30E9               	movlw	233
  7707  0CA1  1903               	skipnz
  7708  0CA2  0240               	subwf	_u16_DisplayBlinkCounter^(0+128),w
  7709  0CA3  1C03               	skipc
  7710  0CA4  2CA6               	goto	u6291
  7711  0CA5  2CA7               	goto	u6290
  7712  0CA6                     u6291:
  7713  0CA6  2CBA               	goto	l8206
  7714  0CA7                     u6290:
  7715  0CA7                     l8204:
  7716                           
  7717                           ;Display.c: 97:             {;Display.c: 98:                 SSD_SetState(0,0);
  7718  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  7719  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  7720  0CA9  01AA               	clrf	SSD_SetState@u8_SSD_State
  7721  0CAA  3000               	movlw	0
  7722  0CAB  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7723                           
  7724                           ;Display.c: 99:                 SSD_SetState(1,0);
  7725  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  7726  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  7727  0CB2  01AA               	clrf	SSD_SetState@u8_SSD_State
  7728  0CB3  3001               	movlw	1
  7729  0CB4  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7730                           
  7731                           ;Display.c: 100:             }
  7732  0CB9  2D2F               	goto	l173
  7733  0CBA                     l8206:
  7734                           
  7735                           ;Display.c: 102:             {;Display.c: 103:                 SSD_SetState(0,1);
  7736  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  7737  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  7738  0CBC  01AA               	clrf	SSD_SetState@u8_SSD_State
  7739  0CBD  0AAA               	incf	SSD_SetState@u8_SSD_State,f
  7740  0CBE  3000               	movlw	0
  7741  0CBF  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7742                           
  7743                           ;Display.c: 104:                 SSD_SetState(1,1);
  7744  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  7745  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  7746  0CC6  01AA               	clrf	SSD_SetState@u8_SSD_State
  7747  0CC7  0AAA               	incf	SSD_SetState@u8_SSD_State,f
  7748  0CC8  3001               	movlw	1
  7749  0CC9  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7750                           
  7751                           ;Display.c: 106:                 SSD_SetValue(0,u8_Data%10);
  7752  0CCE  300A               	movlw	10
  7753  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  7754  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  7755  0CD1  00AA               	movwf	___awmod@divisor
  7756  0CD2  3000               	movlw	0
  7757  0CD3  00AB               	movwf	___awmod@divisor+1
  7758  0CD4  0860               	movf	_u8_Data,w
  7759  0CD5  00B6               	movwf	??_Display_Update
  7760  0CD6  01B7               	clrf	??_Display_Update+1
  7761  0CD7  0836               	movf	??_Display_Update,w
  7762  0CD8  00AC               	movwf	___awmod@dividend
  7763  0CD9  0837               	movf	??_Display_Update+1,w
  7764  0CDA  00AD               	movwf	___awmod@dividend+1
  7765  0CDB  160A  118A  23C2  120A  158A  	fcall	___awmod
  7766  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  7767  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  7768  0CE2  082A               	movf	?___awmod,w
  7769  0CE3  00FF               	movwf	btemp+1
  7770  0CE4  087F               	movf	btemp+1,w
  7771  0CE5  00B2               	movwf	SSD_SetValue@u8_SSD_Data
  7772  0CE6  3000               	movlw	0
  7773  0CE7  160A  158A  2692  120A  158A  	fcall	_SSD_SetValue
  7774                           
  7775                           ;Display.c: 107:                 SSD_SetValue(1,u8_Data/10);
  7776  0CEC  300A               	movlw	10
  7777  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  7778  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  7779  0CEF  00AA               	movwf	___awdiv@divisor
  7780  0CF0  3000               	movlw	0
  7781  0CF1  00AB               	movwf	___awdiv@divisor+1
  7782  0CF2  0860               	movf	_u8_Data,w
  7783  0CF3  00B6               	movwf	??_Display_Update
  7784  0CF4  01B7               	clrf	??_Display_Update+1
  7785  0CF5  0836               	movf	??_Display_Update,w
  7786  0CF6  00AC               	movwf	___awdiv@dividend
  7787  0CF7  0837               	movf	??_Display_Update+1,w
  7788  0CF8  00AD               	movwf	___awdiv@dividend+1
  7789  0CF9  160A  118A  2681  120A  158A  	fcall	___awdiv
  7790  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  7791  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  7792  0D00  082A               	movf	?___awdiv,w
  7793  0D01  00FF               	movwf	btemp+1
  7794  0D02  087F               	movf	btemp+1,w
  7795  0D03  00B2               	movwf	SSD_SetValue@u8_SSD_Data
  7796  0D04  3001               	movlw	1
  7797  0D05  160A  158A  2692  120A  158A  	fcall	_SSD_SetValue
  7798  0D0A  2D2F               	goto	l173
  7799  0D0B                     l8208:
  7800                           
  7801                           ;Display.c: 113:             SSD_SetState(0,0);
  7802  0D0B  01AA               	clrf	SSD_SetState@u8_SSD_State
  7803  0D0C  3000               	movlw	0
  7804  0D0D  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7805                           
  7806                           ;Display.c: 114:             SSD_SetState(1,0);
  7807  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  7808  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  7809  0D14  01AA               	clrf	SSD_SetState@u8_SSD_State
  7810  0D15  3001               	movlw	1
  7811  0D16  160A  158A  2335  120A  158A  	fcall	_SSD_SetState
  7812  0D1B  2C87               	goto	l8196
  7813  0D1C                     l8214:
  7814  0D1C  085F               	movf	_u8_Mode@Display$F109,w
  7815  0D1D  00B6               	movwf	??_Display_Update
  7816  0D1E  01B7               	clrf	??_Display_Update+1
  7817                           
  7818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7819                           ; Switch size 1, requested type "simple"
  7820                           ; Number of cases is 1, Range of values is 0 to 0
  7821                           ; switch strategies available:
  7822                           ; Name         Instructions Cycles
  7823                           ; simple_byte            4     3 (average)
  7824                           ; direct_byte           11     8 (fixed)
  7825                           ; jumptable            260     6 (fixed)
  7826                           ;	Chosen strategy is simple_byte
  7827  0D1F  0837               	movf	??_Display_Update+1,w
  7828  0D20  3A00               	xorlw	0	; case 0
  7829  0D21  1903               	skipnz
  7830  0D22  2D24               	goto	l9832
  7831  0D23  2D2F               	goto	l173
  7832  0D24                     l9832:
  7833                           
  7834                           ; Switch size 1, requested type "simple"
  7835                           ; Number of cases is 3, Range of values is 0 to 2
  7836                           ; switch strategies available:
  7837                           ; Name         Instructions Cycles
  7838                           ; simple_byte           10     6 (average)
  7839                           ; direct_byte           17     8 (fixed)
  7840                           ; jumptable            260     6 (fixed)
  7841                           ;	Chosen strategy is simple_byte
  7842  0D24  0836               	movf	??_Display_Update,w
  7843  0D25  3A00               	xorlw	0	; case 0
  7844  0D26  1903               	skipnz
  7845  0D27  2D0B               	goto	l8208
  7846  0D28  3A01               	xorlw	1	; case 1
  7847  0D29  1903               	skipnz
  7848  0D2A  2C8C               	goto	l8198
  7849  0D2B  3A03               	xorlw	3	; case 2
  7850  0D2C  1903               	skipnz
  7851  0D2D  2C39               	goto	l8194
  7852  0D2E  2D2F               	goto	l173
  7853  0D2F                     l173:
  7854  0D2F  0008               	return
  7855  0D30                     __end_of_Display_Update:
  7856                           
  7857                           	psect	text37
  7858  13C2                     __ptext37:	
  7859 ;; *************** function ___awmod *****************
  7860 ;; Defined at:
  7861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  divisor         2   10[BANK0 ] int 
  7864 ;;  dividend        2   12[BANK0 ] int 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  sign            1   15[BANK0 ] unsigned char 
  7867 ;;  counter         1   14[BANK0 ] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  2   10[BANK0 ] int 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, btemp+1
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7877 ;;      Params:         0       4       0       0       0
  7878 ;;      Locals:         0       2       0       0       0
  7879 ;;      Temps:          0       0       0       0       0
  7880 ;;      Totals:         0       6       0       0       0
  7881 ;;Total ram usage:        6 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    3
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_Display_Update
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           
  7892                           ;psect for function ___awmod
  7893  13C2                     ___awmod:
  7894  13C2                     l8136:	
  7895                           ;incstack = 0
  7896                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  7897                           
  7898  13C2  1283               	bcf	3,5	;RP0=0, select bank0
  7899  13C3  1303               	bcf	3,6	;RP1=0, select bank0
  7900  13C4  01AF               	clrf	___awmod@sign
  7901  13C5                     l8138:
  7902  13C5  1FAD               	btfss	___awmod@dividend+1,7
  7903  13C6  2BC8               	goto	u6181
  7904  13C7  2BC9               	goto	u6180
  7905  13C8                     u6181:
  7906  13C8  2BD0               	goto	l8144
  7907  13C9                     u6180:
  7908  13C9                     l8140:
  7909  13C9  09AC               	comf	___awmod@dividend,f
  7910  13CA  09AD               	comf	___awmod@dividend+1,f
  7911  13CB  0AAC               	incf	___awmod@dividend,f
  7912  13CC  1903               	skipnz
  7913  13CD  0AAD               	incf	___awmod@dividend+1,f
  7914  13CE                     l8142:
  7915  13CE  01AF               	clrf	___awmod@sign
  7916  13CF  0AAF               	incf	___awmod@sign,f
  7917  13D0                     l8144:
  7918  13D0  1FAB               	btfss	___awmod@divisor+1,7
  7919  13D1  2BD3               	goto	u6191
  7920  13D2  2BD4               	goto	u6190
  7921  13D3                     u6191:
  7922  13D3  2BD9               	goto	l8148
  7923  13D4                     u6190:
  7924  13D4                     l8146:
  7925  13D4  09AA               	comf	___awmod@divisor,f
  7926  13D5  09AB               	comf	___awmod@divisor+1,f
  7927  13D6  0AAA               	incf	___awmod@divisor,f
  7928  13D7  1903               	skipnz
  7929  13D8  0AAB               	incf	___awmod@divisor+1,f
  7930  13D9                     l8148:
  7931  13D9  082A               	movf	___awmod@divisor,w
  7932  13DA  042B               	iorwf	___awmod@divisor+1,w
  7933  13DB  1903               	btfsc	3,2
  7934  13DC  2BDE               	goto	u6201
  7935  13DD  2BDF               	goto	u6200
  7936  13DE                     u6201:
  7937  13DE  2C0E               	goto	l8166
  7938  13DF                     u6200:
  7939  13DF                     l8150:
  7940  13DF  01AE               	clrf	___awmod@counter
  7941  13E0  0AAE               	incf	___awmod@counter,f
  7942  13E1  2BED               	goto	l8156
  7943  13E2                     l8152:
  7944  13E2  3001               	movlw	1
  7945  13E3                     u6215:
  7946  13E3  1003               	clrc
  7947  13E4  0DAA               	rlf	___awmod@divisor,f
  7948  13E5  0DAB               	rlf	___awmod@divisor+1,f
  7949  13E6  3EFF               	addlw	-1
  7950  13E7  1D03               	skipz
  7951  13E8  2BE3               	goto	u6215
  7952  13E9                     l8154:
  7953  13E9  3001               	movlw	1
  7954  13EA  00FF               	movwf	btemp+1
  7955  13EB  087F               	movf	btemp+1,w
  7956  13EC  07AE               	addwf	___awmod@counter,f
  7957  13ED                     l8156:
  7958  13ED  1FAB               	btfss	___awmod@divisor+1,7
  7959  13EE  2BF0               	goto	u6221
  7960  13EF  2BF1               	goto	u6220
  7961  13F0                     u6221:
  7962  13F0  2BE2               	goto	l8152
  7963  13F1                     u6220:
  7964  13F1                     l8158:
  7965  13F1  082B               	movf	___awmod@divisor+1,w
  7966  13F2  022D               	subwf	___awmod@dividend+1,w
  7967  13F3  1D03               	skipz
  7968  13F4  2BF7               	goto	u6235
  7969  13F5  082A               	movf	___awmod@divisor,w
  7970  13F6  022C               	subwf	___awmod@dividend,w
  7971  13F7                     u6235:
  7972  13F7  1C03               	skipc
  7973  13F8  2BFA               	goto	u6231
  7974  13F9  2BFB               	goto	u6230
  7975  13FA                     u6231:
  7976  13FA  2C01               	goto	l8162
  7977  13FB                     u6230:
  7978  13FB                     l8160:
  7979  13FB  082A               	movf	___awmod@divisor,w
  7980  13FC  02AC               	subwf	___awmod@dividend,f
  7981  13FD  082B               	movf	___awmod@divisor+1,w
  7982  13FE  1C03               	skipc
  7983  13FF  03AD               	decf	___awmod@dividend+1,f
  7984  1400  02AD               	subwf	___awmod@dividend+1,f
  7985  1401                     l8162:
  7986  1401  3001               	movlw	1
  7987  1402                     u6245:
  7988  1402  1003               	clrc
  7989  1403  0CAB               	rrf	___awmod@divisor+1,f
  7990  1404  0CAA               	rrf	___awmod@divisor,f
  7991  1405  3EFF               	addlw	-1
  7992  1406  1D03               	skipz
  7993  1407  2C02               	goto	u6245
  7994  1408                     l8164:
  7995  1408  3001               	movlw	1
  7996  1409  02AE               	subwf	___awmod@counter,f
  7997  140A  1D03               	btfss	3,2
  7998  140B  2C0D               	goto	u6251
  7999  140C  2C0E               	goto	u6250
  8000  140D                     u6251:
  8001  140D  2BF1               	goto	l8158
  8002  140E                     u6250:
  8003  140E                     l8166:
  8004  140E  082F               	movf	___awmod@sign,w
  8005  140F  1903               	btfsc	3,2
  8006  1410  2C12               	goto	u6261
  8007  1411  2C13               	goto	u6260
  8008  1412                     u6261:
  8009  1412  2C18               	goto	l8170
  8010  1413                     u6260:
  8011  1413                     l8168:
  8012  1413  09AC               	comf	___awmod@dividend,f
  8013  1414  09AD               	comf	___awmod@dividend+1,f
  8014  1415  0AAC               	incf	___awmod@dividend,f
  8015  1416  1903               	skipnz
  8016  1417  0AAD               	incf	___awmod@dividend+1,f
  8017  1418                     l8170:
  8018  1418  082D               	movf	___awmod@dividend+1,w
  8019  1419  00AB               	movwf	?___awmod+1
  8020  141A  082C               	movf	___awmod@dividend,w
  8021  141B  00AA               	movwf	?___awmod
  8022  141C                     l1128:
  8023  141C  0008               	return
  8024  141D                     __end_of___awmod:
  8025                           
  8026                           	psect	text38
  8027  1681                     __ptext38:	
  8028 ;; *************** function ___awdiv *****************
  8029 ;; Defined at:
  8030 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  divisor         2   10[BANK0 ] int 
  8033 ;;  dividend        2   12[BANK0 ] int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  quotient        2   16[BANK0 ] int 
  8036 ;;  sign            1   15[BANK0 ] unsigned char 
  8037 ;;  counter         1   14[BANK0 ] unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  2   10[BANK0 ] int 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0, btemp+1
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8047 ;;      Params:         0       4       0       0       0
  8048 ;;      Locals:         0       4       0       0       0
  8049 ;;      Temps:          0       0       0       0       0
  8050 ;;      Totals:         0       8       0       0       0
  8051 ;;Total ram usage:        8 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    3
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_Display_Update
  8058 ;;		_Timer_GetStatus
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function ___awdiv
  8064  1681                     ___awdiv:
  8065  1681                     l8092:	
  8066                           ;incstack = 0
  8067                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  8068                           
  8069  1681  1283               	bcf	3,5	;RP0=0, select bank0
  8070  1682  1303               	bcf	3,6	;RP1=0, select bank0
  8071  1683  01AF               	clrf	___awdiv@sign
  8072  1684                     l8094:
  8073  1684  1FAB               	btfss	___awdiv@divisor+1,7
  8074  1685  2E87               	goto	u6081
  8075  1686  2E88               	goto	u6080
  8076  1687                     u6081:
  8077  1687  2E8F               	goto	l8100
  8078  1688                     u6080:
  8079  1688                     l8096:
  8080  1688  09AA               	comf	___awdiv@divisor,f
  8081  1689  09AB               	comf	___awdiv@divisor+1,f
  8082  168A  0AAA               	incf	___awdiv@divisor,f
  8083  168B  1903               	skipnz
  8084  168C  0AAB               	incf	___awdiv@divisor+1,f
  8085  168D                     l8098:
  8086  168D  01AF               	clrf	___awdiv@sign
  8087  168E  0AAF               	incf	___awdiv@sign,f
  8088  168F                     l8100:
  8089  168F  1FAD               	btfss	___awdiv@dividend+1,7
  8090  1690  2E92               	goto	u6091
  8091  1691  2E93               	goto	u6090
  8092  1692                     u6091:
  8093  1692  2E9C               	goto	l8106
  8094  1693                     u6090:
  8095  1693                     l8102:
  8096  1693  09AC               	comf	___awdiv@dividend,f
  8097  1694  09AD               	comf	___awdiv@dividend+1,f
  8098  1695  0AAC               	incf	___awdiv@dividend,f
  8099  1696  1903               	skipnz
  8100  1697  0AAD               	incf	___awdiv@dividend+1,f
  8101  1698                     l8104:
  8102  1698  3001               	movlw	1
  8103  1699  00FF               	movwf	btemp+1
  8104  169A  087F               	movf	btemp+1,w
  8105  169B  06AF               	xorwf	___awdiv@sign,f
  8106  169C                     l8106:
  8107  169C  01B0               	clrf	___awdiv@quotient
  8108  169D  01B1               	clrf	___awdiv@quotient+1
  8109  169E                     l8108:
  8110  169E  082A               	movf	___awdiv@divisor,w
  8111  169F  042B               	iorwf	___awdiv@divisor+1,w
  8112  16A0  1903               	btfsc	3,2
  8113  16A1  2EA3               	goto	u6101
  8114  16A2  2EA4               	goto	u6100
  8115  16A3                     u6101:
  8116  16A3  2EDB               	goto	l8128
  8117  16A4                     u6100:
  8118  16A4                     l8110:
  8119  16A4  01AE               	clrf	___awdiv@counter
  8120  16A5  0AAE               	incf	___awdiv@counter,f
  8121  16A6  2EB2               	goto	l8116
  8122  16A7                     l8112:
  8123  16A7  3001               	movlw	1
  8124  16A8                     u6115:
  8125  16A8  1003               	clrc
  8126  16A9  0DAA               	rlf	___awdiv@divisor,f
  8127  16AA  0DAB               	rlf	___awdiv@divisor+1,f
  8128  16AB  3EFF               	addlw	-1
  8129  16AC  1D03               	skipz
  8130  16AD  2EA8               	goto	u6115
  8131  16AE                     l8114:
  8132  16AE  3001               	movlw	1
  8133  16AF  00FF               	movwf	btemp+1
  8134  16B0  087F               	movf	btemp+1,w
  8135  16B1  07AE               	addwf	___awdiv@counter,f
  8136  16B2                     l8116:
  8137  16B2  1FAB               	btfss	___awdiv@divisor+1,7
  8138  16B3  2EB5               	goto	u6121
  8139  16B4  2EB6               	goto	u6120
  8140  16B5                     u6121:
  8141  16B5  2EA7               	goto	l8112
  8142  16B6                     u6120:
  8143  16B6                     l8118:
  8144  16B6  3001               	movlw	1
  8145  16B7                     u6135:
  8146  16B7  1003               	clrc
  8147  16B8  0DB0               	rlf	___awdiv@quotient,f
  8148  16B9  0DB1               	rlf	___awdiv@quotient+1,f
  8149  16BA  3EFF               	addlw	-1
  8150  16BB  1D03               	skipz
  8151  16BC  2EB7               	goto	u6135
  8152  16BD  082B               	movf	___awdiv@divisor+1,w
  8153  16BE  022D               	subwf	___awdiv@dividend+1,w
  8154  16BF  1D03               	skipz
  8155  16C0  2EC3               	goto	u6145
  8156  16C1  082A               	movf	___awdiv@divisor,w
  8157  16C2  022C               	subwf	___awdiv@dividend,w
  8158  16C3                     u6145:
  8159  16C3  1C03               	skipc
  8160  16C4  2EC6               	goto	u6141
  8161  16C5  2EC7               	goto	u6140
  8162  16C6                     u6141:
  8163  16C6  2ECE               	goto	l8124
  8164  16C7                     u6140:
  8165  16C7                     l8120:
  8166  16C7  082A               	movf	___awdiv@divisor,w
  8167  16C8  02AC               	subwf	___awdiv@dividend,f
  8168  16C9  082B               	movf	___awdiv@divisor+1,w
  8169  16CA  1C03               	skipc
  8170  16CB  03AD               	decf	___awdiv@dividend+1,f
  8171  16CC  02AD               	subwf	___awdiv@dividend+1,f
  8172  16CD                     l8122:
  8173  16CD  1430               	bsf	___awdiv@quotient,0
  8174  16CE                     l8124:
  8175  16CE  3001               	movlw	1
  8176  16CF                     u6155:
  8177  16CF  1003               	clrc
  8178  16D0  0CAB               	rrf	___awdiv@divisor+1,f
  8179  16D1  0CAA               	rrf	___awdiv@divisor,f
  8180  16D2  3EFF               	addlw	-1
  8181  16D3  1D03               	skipz
  8182  16D4  2ECF               	goto	u6155
  8183  16D5                     l8126:
  8184  16D5  3001               	movlw	1
  8185  16D6  02AE               	subwf	___awdiv@counter,f
  8186  16D7  1D03               	btfss	3,2
  8187  16D8  2EDA               	goto	u6161
  8188  16D9  2EDB               	goto	u6160
  8189  16DA                     u6161:
  8190  16DA  2EB6               	goto	l8118
  8191  16DB                     u6160:
  8192  16DB                     l8128:
  8193  16DB  082F               	movf	___awdiv@sign,w
  8194  16DC  1903               	btfsc	3,2
  8195  16DD  2EDF               	goto	u6171
  8196  16DE  2EE0               	goto	u6170
  8197  16DF                     u6171:
  8198  16DF  2EE5               	goto	l8132
  8199  16E0                     u6170:
  8200  16E0                     l8130:
  8201  16E0  09B0               	comf	___awdiv@quotient,f
  8202  16E1  09B1               	comf	___awdiv@quotient+1,f
  8203  16E2  0AB0               	incf	___awdiv@quotient,f
  8204  16E3  1903               	skipnz
  8205  16E4  0AB1               	incf	___awdiv@quotient+1,f
  8206  16E5                     l8132:
  8207  16E5  0831               	movf	___awdiv@quotient+1,w
  8208  16E6  00AB               	movwf	?___awdiv+1
  8209  16E7  0830               	movf	___awdiv@quotient,w
  8210  16E8  00AA               	movwf	?___awdiv
  8211  16E9                     l1115:
  8212  16E9  0008               	return
  8213  16EA                     __end_of___awdiv:
  8214                           
  8215                           	psect	text39
  8216  1E92                     __ptext39:	
  8217 ;; *************** function _SSD_SetValue *****************
  8218 ;; Defined at:
  8219 ;;		line 211 in file "SSD.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;  u8_SSD_ID       1    wreg     unsigned char 
  8222 ;;  u8_SSD_Data     1   18[BANK0 ] unsigned char 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  u8_SSD_ID       1   21[BANK0 ] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      void 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8234 ;;      Params:         0       1       0       0       0
  8235 ;;      Locals:         0       1       0       0       0
  8236 ;;      Temps:          0       2       0       0       0
  8237 ;;      Totals:         0       4       0       0       0
  8238 ;;Total ram usage:        4 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    3
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		_Display_Update
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248                           
  8249                           ;psect for function _SSD_SetValue
  8250  1E92                     _SSD_SetValue:
  8251                           
  8252                           ;incstack = 0
  8253                           ; Regs used in _SSD_SetValue: [wreg-fsr0h+status,2+status,0+btemp+1]
  8254                           ;SSD_SetValue@u8_SSD_ID stored from wreg
  8255  1E92  1283               	bcf	3,5	;RP0=0, select bank0
  8256  1E93  1303               	bcf	3,6	;RP1=0, select bank0
  8257  1E94  00B5               	movwf	SSD_SetValue@u8_SSD_ID
  8258  1E95                     l5074:
  8259                           
  8260                           ;SSD.c: 211: void SSD_SetValue(uint8 u8_SSD_ID,uint8 u8_SSD_Data);SSD.c: 212: {;SSD.c: 2
      +                          13:     switch(u8_SSD_ID)
  8261  1E95  2EB2               	goto	l5086
  8262  1E96                     l5076:
  8263                           
  8264                           ;SSD.c: 216:             astr_SSDs[0].u8_SSD_Data = u8_SSD_Data ;
  8265  1E96  0832               	movf	SSD_SetValue@u8_SSD_Data,w
  8266  1E97  00FF               	movwf	btemp+1
  8267  1E98  087F               	movf	btemp+1,w
  8268  1E99  1683               	bsf	3,5	;RP0=1, select bank1
  8269  1E9A  1303               	bcf	3,6	;RP1=0, select bank1
  8270  1E9B  00A0               	movwf	_astr_SSDs^(0+128)
  8271                           
  8272                           ;SSD.c: 217:             break;
  8273  1E9C  2EC8               	goto	l475
  8274  1E9D                     l5078:
  8275                           
  8276                           ;SSD.c: 219:             astr_SSDs[1].u8_SSD_Data = u8_SSD_Data;
  8277  1E9D  0832               	movf	SSD_SetValue@u8_SSD_Data,w
  8278  1E9E  00FF               	movwf	btemp+1
  8279  1E9F  087F               	movf	btemp+1,w
  8280  1EA0  1683               	bsf	3,5	;RP0=1, select bank1
  8281  1EA1  1303               	bcf	3,6	;RP1=0, select bank1
  8282  1EA2  00A2               	movwf	(_astr_SSDs^(0+128)+2)
  8283                           
  8284                           ;SSD.c: 220:             break;
  8285  1EA3  2EC8               	goto	l475
  8286  1EA4                     l5080:
  8287                           
  8288                           ;SSD.c: 222:             astr_SSDs[2].u8_SSD_Data = u8_SSD_Data;
  8289  1EA4  0832               	movf	SSD_SetValue@u8_SSD_Data,w
  8290  1EA5  00FF               	movwf	btemp+1
  8291  1EA6  087F               	movf	btemp+1,w
  8292  1EA7  1683               	bsf	3,5	;RP0=1, select bank1
  8293  1EA8  1303               	bcf	3,6	;RP1=0, select bank1
  8294  1EA9  00A4               	movwf	(_astr_SSDs^(0+128)+4)
  8295                           
  8296                           ;SSD.c: 223:             break;
  8297  1EAA  2EC8               	goto	l475
  8298  1EAB                     l5082:
  8299                           
  8300                           ;SSD.c: 225:             astr_SSDs[3].u8_SSD_Data = u8_SSD_Data;
  8301  1EAB  0832               	movf	SSD_SetValue@u8_SSD_Data,w
  8302  1EAC  00FF               	movwf	btemp+1
  8303  1EAD  087F               	movf	btemp+1,w
  8304  1EAE  1683               	bsf	3,5	;RP0=1, select bank1
  8305  1EAF  1303               	bcf	3,6	;RP1=0, select bank1
  8306  1EB0  00A6               	movwf	(_astr_SSDs^(0+128)+6)
  8307                           
  8308                           ;SSD.c: 226:             break;
  8309  1EB1  2EC8               	goto	l475
  8310  1EB2                     l5086:
  8311  1EB2  0835               	movf	SSD_SetValue@u8_SSD_ID,w
  8312  1EB3  00B3               	movwf	??_SSD_SetValue
  8313  1EB4  01B4               	clrf	??_SSD_SetValue+1
  8314                           
  8315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8316                           ; Switch size 1, requested type "simple"
  8317                           ; Number of cases is 1, Range of values is 0 to 0
  8318                           ; switch strategies available:
  8319                           ; Name         Instructions Cycles
  8320                           ; simple_byte            4     3 (average)
  8321                           ; direct_byte           11     8 (fixed)
  8322                           ; jumptable            260     6 (fixed)
  8323                           ;	Chosen strategy is simple_byte
  8324  1EB5  0834               	movf	??_SSD_SetValue+1,w
  8325  1EB6  3A00               	xorlw	0	; case 0
  8326  1EB7  1903               	skipnz
  8327  1EB8  2EBA               	goto	l9834
  8328  1EB9  2EC8               	goto	l475
  8329  1EBA                     l9834:
  8330                           
  8331                           ; Switch size 1, requested type "simple"
  8332                           ; Number of cases is 4, Range of values is 0 to 3
  8333                           ; switch strategies available:
  8334                           ; Name         Instructions Cycles
  8335                           ; simple_byte           13     7 (average)
  8336                           ; direct_byte           20     8 (fixed)
  8337                           ; jumptable            260     6 (fixed)
  8338                           ;	Chosen strategy is simple_byte
  8339  1EBA  0833               	movf	??_SSD_SetValue,w
  8340  1EBB  3A00               	xorlw	0	; case 0
  8341  1EBC  1903               	skipnz
  8342  1EBD  2E96               	goto	l5076
  8343  1EBE  3A01               	xorlw	1	; case 1
  8344  1EBF  1903               	skipnz
  8345  1EC0  2E9D               	goto	l5078
  8346  1EC1  3A03               	xorlw	3	; case 2
  8347  1EC2  1903               	skipnz
  8348  1EC3  2EA4               	goto	l5080
  8349  1EC4  3A01               	xorlw	1	; case 3
  8350  1EC5  1903               	skipnz
  8351  1EC6  2EAB               	goto	l5082
  8352  1EC7  2EC8               	goto	l475
  8353  1EC8                     l475:
  8354  1EC8  0008               	return
  8355  1EC9                     __end_of_SSD_SetValue:
  8356                           
  8357                           	psect	text40
  8358  1B35                     __ptext40:	
  8359 ;; *************** function _SSD_SetState *****************
  8360 ;; Defined at:
  8361 ;;		line 241 in file "SSD.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  u8_SSD_ID       1    wreg     unsigned char 
  8364 ;;  u8_SSD_State    1   10[BANK0 ] unsigned char 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  u8_SSD_ID       1   12[BANK0 ] unsigned char 
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1    wreg      void 
  8369 ;; Registers used:
  8370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8376 ;;      Params:         0       1       0       0       0
  8377 ;;      Locals:         0       1       0       0       0
  8378 ;;      Temps:          0       1       0       0       0
  8379 ;;      Totals:         0       3       0       0       0
  8380 ;;Total ram usage:        3 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    3
  8383 ;; This function calls:
  8384 ;;		Nothing
  8385 ;; This function is called by:
  8386 ;;		_Display_Update
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           
  8391                           ;psect for function _SSD_SetState
  8392  1B35                     _SSD_SetState:
  8393                           
  8394                           ;incstack = 0
  8395                           ; Regs used in _SSD_SetState: [wreg-fsr0h+status,2+status,0+btemp+1]
  8396                           ;SSD_SetState@u8_SSD_ID stored from wreg
  8397  1B35  1283               	bcf	3,5	;RP0=0, select bank0
  8398  1B36  1303               	bcf	3,6	;RP1=0, select bank0
  8399  1B37  00AC               	movwf	SSD_SetState@u8_SSD_ID
  8400  1B38                     l7900:
  8401                           
  8402                           ;SSD.c: 241: void SSD_SetState(uint8 u8_SSD_ID,uint8 u8_SSD_State);SSD.c: 242: {;SSD.c: 
      +                          243:     astr_SSDs[u8_SSD_ID].u8_SSD_State = u8_SSD_State;
  8403  1B38  082A               	movf	SSD_SetState@u8_SSD_State,w
  8404  1B39  00FF               	movwf	btemp+1
  8405  1B3A  082C               	movf	SSD_SetState@u8_SSD_ID,w
  8406  1B3B  00AB               	movwf	??_SSD_SetState
  8407  1B3C  072B               	addwf	??_SSD_SetState,w
  8408  1B3D  3EA1               	addlw	(low ((_astr_SSDs| 0+1)))& (0+255)
  8409  1B3E  0084               	movwf	4
  8410  1B3F  087F               	movf	btemp+1,w
  8411  1B40  1383               	bcf	3,7	;select IRP bank1
  8412  1B41  0080               	movwf	0
  8413  1B42                     l478:
  8414  1B42  0008               	return
  8415  1B43                     __end_of_SSD_SetState:
  8416                           
  8417                           	psect	text41
  8418  1B04                     __ptext41:	
  8419 ;; *************** function _CPU_SleepUpdate *****************
  8420 ;; Defined at:
  8421 ;;		line 48 in file "SLEEP.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;		None
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;		None
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		wreg, status,2, status,0
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8435 ;;      Params:         0       0       0       0       0
  8436 ;;      Locals:         0       0       0       0       0
  8437 ;;      Temps:          0       0       0       0       0
  8438 ;;      Totals:         0       0       0       0       0
  8439 ;;Total ram usage:        0 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; Hardware stack levels required when called:    3
  8442 ;; This function calls:
  8443 ;;		Nothing
  8444 ;; This function is called by:
  8445 ;;		_App_MainLoop
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           
  8450                           ;psect for function _CPU_SleepUpdate
  8451  1B04                     _CPU_SleepUpdate:
  8452  1B04                     l8686:	
  8453                           ;incstack = 0
  8454                           ; Regs used in _CPU_SleepUpdate: [wreg+status,2+status,0]
  8455                           
  8456                           
  8457                           ;SLEEP.c: 50:     if(u8_Mode == 20)
  8458  1B04  3014               	movlw	20
  8459  1B05  1283               	bcf	3,5	;RP0=0, select bank0
  8460  1B06  1303               	bcf	3,6	;RP1=0, select bank0
  8461  1B07  0664               	xorwf	_u8_Mode,w
  8462  1B08  1D03               	btfss	3,2
  8463  1B09  2B0B               	goto	u6561
  8464  1B0A  2B0C               	goto	u6560
  8465  1B0B                     u6561:
  8466  1B0B  2B0D               	goto	l744
  8467  1B0C                     u6560:
  8468  1B0C                     l8688:
  8469  1B0C  0063               	sleep	;# 
  8470  1B0D                     l744:
  8471  1B0D  0008               	return
  8472  1B0E                     __end_of_CPU_SleepUpdate:
  8473                           
  8474                           	psect	text42
  8475  0B32                     __ptext42:	
  8476 ;; *************** function _App_Update *****************
  8477 ;; Defined at:
  8478 ;;		line 212 in file "MainAppSW.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;		None
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;  u8_BtnDownSt    1    8[BANK3 ] unsigned char 
  8483 ;;  u8_BtnUpStat    1    7[BANK3 ] unsigned char 
  8484 ;;  u8_CurrentTe    1    6[BANK3 ] unsigned char 
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8494 ;;      Params:         0       0       0       0       0
  8495 ;;      Locals:         0       0       0       3       0
  8496 ;;      Temps:          0       0       0       2       0
  8497 ;;      Totals:         0       0       0       5       0
  8498 ;;Total ram usage:        5 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    6
  8501 ;; This function calls:
  8502 ;;		_CPU_SetSleep
  8503 ;;		_Cooler_Turn
  8504 ;;		_Display_SetData
  8505 ;;		_Display_TurnOff
  8506 ;;		_EEPROM_Write
  8507 ;;		_Heater_Cooler_action
  8508 ;;		_Heater_Turn
  8509 ;;		_LED_ACTION
  8510 ;;		_LM_Read
  8511 ;;		_TemperatureAVGReading_Read
  8512 ;;		_Timer_Stop
  8513 ;;		_pushButton_GetStatus
  8514 ;; This function is called by:
  8515 ;;		_App_MainLoop
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function _App_Update
  8521  0B32                     _App_Update:
  8522  0B32                     l8490:	
  8523                           ;incstack = 0
  8524                           ; Regs used in _App_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8525                           
  8526                           
  8527                           ;MainAppSW.c: 215:     u8_APP_TickCounter += 20;
  8528  0B32  3014               	movlw	20
  8529  0B33  00FF               	movwf	btemp+1
  8530  0B34  087F               	movf	btemp+1,w
  8531  0B35  1683               	bsf	3,5	;RP0=1, select bank1
  8532  0B36  1303               	bcf	3,6	;RP1=0, select bank1
  8533  0B37  07C3               	addwf	_u8_APP_TickCounter^(0+128),f
  8534  0B38                     l8492:
  8535                           
  8536                           ;MainAppSW.c: 217:     if (u8_APP_TickCounter != 20){
  8537  0B38  3014               	movlw	20
  8538  0B39  0643               	xorwf	_u8_APP_TickCounter^(0+128),w
  8539  0B3A  1903               	btfsc	3,2
  8540  0B3B  2B3D               	goto	u6351
  8541  0B3C  2B3E               	goto	u6350
  8542  0B3D                     u6351:
  8543  0B3D  2B3F               	goto	l8496
  8544  0B3E                     u6350:
  8545  0B3E  2C29               	goto	l357
  8546  0B3F                     l8496:
  8547                           
  8548                           ;MainAppSW.c: 222:     u8_APP_TickCounter=0;
  8549  0B3F  01C3               	clrf	_u8_APP_TickCounter^(0+128)
  8550                           
  8551                           ;MainAppSW.c: 226:     uint8 u8_BtnUpStatus=0;
  8552  0B40  1683               	bsf	3,5	;RP0=1, select bank3
  8553  0B41  1703               	bsf	3,6	;RP1=1, select bank3
  8554  0B42  01E1               	clrf	App_Update@u8_BtnUpStatus^(0+384)
  8555                           
  8556                           ;MainAppSW.c: 227:     uint8 u8_BtnDownStatus=0;
  8557  0B43  01E2               	clrf	App_Update@u8_BtnDownStatus^(0+384)
  8558  0B44                     l8498:
  8559                           
  8560                           ;MainAppSW.c: 228:     uint8 u8_CurrentTemperature;;MainAppSW.c: 232:     pushButton_Get
      +                          Status(2,&u8_BtnUpStatus);
  8561  0B44  30E1               	movlw	(low (App_Update@u8_BtnUpStatus| (0+256)))& (0+255)
  8562  0B45  00FF               	movwf	btemp+1
  8563  0B46  087F               	movf	btemp+1,w
  8564  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  8565  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  8566  0B49  00AA               	movwf	pushButton_GetStatus@pu8_BtnState
  8567  0B4A  3002               	movlw	2
  8568  0B4B  160A  118A  212F  120A  158A  	fcall	_pushButton_GetStatus
  8569  0B50                     l8500:
  8570                           
  8571                           ;MainAppSW.c: 233:     pushButton_GetStatus(1,&u8_BtnDownStatus);
  8572  0B50  30E2               	movlw	(low (App_Update@u8_BtnDownStatus| (0+256)))& (0+255)
  8573  0B51  00FF               	movwf	btemp+1
  8574  0B52  087F               	movf	btemp+1,w
  8575  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  8576  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  8577  0B55  00AA               	movwf	pushButton_GetStatus@pu8_BtnState
  8578  0B56  3001               	movlw	1
  8579  0B57  160A  118A  212F  120A  158A  	fcall	_pushButton_GetStatus
  8580  0B5C                     l8502:
  8581                           
  8582                           ;MainAppSW.c: 235:     TemperatureAVGReading_Read(&u8_AVG_Temperature);
  8583  0B5C  3079               	movlw	(low (_u8_AVG_Temperature| 0))& (0+255)
  8584  0B5D  160A  158A  265B  120A  158A  	fcall	_TemperatureAVGReading_Read
  8585  0B62                     l8504:
  8586                           
  8587                           ;MainAppSW.c: 237:     LM_Read(&u8_CurrentTemperature);
  8588  0B62  30E0               	movlw	(low (App_Update@u8_CurrentTemperature| (0+256)))& (0+255)
  8589  0B63  160A  118A  24E3  120A  158A  	fcall	_LM_Read
  8590                           
  8591                           ;MainAppSW.c: 239:     switch (u8_WaterHeaterStatus)
  8592  0B68  2C0F               	goto	l8558
  8593  0B69                     l8506:
  8594                           
  8595                           ;MainAppSW.c: 242:             Display_TurnOff();
  8596  0B69  160A  158A  235F  120A  158A  	fcall	_Display_TurnOff
  8597                           
  8598                           ;MainAppSW.c: 243:             Cooler_Turn(0);
  8599  0B6E  3000               	movlw	0
  8600  0B6F  160A  158A  23E4  120A  158A  	fcall	_Cooler_Turn
  8601                           
  8602                           ;MainAppSW.c: 244:             Heater_Turn(0);
  8603  0B74  3000               	movlw	0
  8604  0B75  160A  158A  23F6  120A  158A  	fcall	_Heater_Turn
  8605  0B7A                     l8508:
  8606                           
  8607                           ;MainAppSW.c: 245:             u8_DisplayMode=2;
  8608  0B7A  3002               	movlw	2
  8609  0B7B  00FF               	movwf	btemp+1
  8610  0B7C  087F               	movf	btemp+1,w
  8611  0B7D  1683               	bsf	3,5	;RP0=1, select bank1
  8612  0B7E  1303               	bcf	3,6	;RP1=0, select bank1
  8613  0B7F  00EE               	movwf	_u8_DisplayMode^(0+128)
  8614  0B80                     l8510:
  8615                           
  8616                           ;MainAppSW.c: 246:             u8_Heating_Element_Led_State = 0 ;
  8617  0B80  01F8               	clrf	_u8_Heating_Element_Led_State
  8618  0B81                     l8512:
  8619                           
  8620                           ;MainAppSW.c: 247:             Timer_Stop(1);
  8621  0B81  3001               	movlw	1
  8622  0B82  160A  118A  2053  120A  158A  	fcall	_Timer_Stop
  8623  0B87                     l8514:
  8624                           
  8625                           ;MainAppSW.c: 248:             CPU_SetSleep(20);
  8626  0B87  3014               	movlw	20
  8627  0B88  160A  158A  22F4  120A  158A  	fcall	_CPU_SetSleep
  8628                           
  8629                           ;MainAppSW.c: 249:             break;
  8630  0B8D  2C24               	goto	l8560
  8631  0B8E                     l8516:
  8632                           
  8633                           ;MainAppSW.c: 252:             Display_SetData(u8_CurrentTemperature,2);
  8634  0B8E  3002               	movlw	2
  8635  0B8F  00FF               	movwf	btemp+1
  8636  0B90  087F               	movf	btemp+1,w
  8637  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  8638  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  8639  0B93  00AA               	movwf	Display_SetData@u8_DisplayMode
  8640  0B94  1683               	bsf	3,5	;RP0=1, select bank3
  8641  0B95  1703               	bsf	3,6	;RP1=1, select bank3
  8642  0B96  0860               	movf	App_Update@u8_CurrentTemperature^(0+384),w
  8643  0B97  160A  118A  2000  120A  158A  	fcall	_Display_SetData
  8644  0B9C                     l8518:
  8645                           
  8646                           ;MainAppSW.c: 253:             Heater_Cooler_action();
  8647  0B9C  160A  118A  209A  120A  158A  	fcall	_Heater_Cooler_action
  8648  0BA1                     l8520:
  8649                           
  8650                           ;MainAppSW.c: 254:             if(u8_BtnDownStatus == 0x11 || u8_BtnUpStatus == 0x11)
  8651  0BA1  3011               	movlw	17
  8652  0BA2  1683               	bsf	3,5	;RP0=1, select bank3
  8653  0BA3  1703               	bsf	3,6	;RP1=1, select bank3
  8654  0BA4  0662               	xorwf	App_Update@u8_BtnDownStatus^(0+384),w
  8655  0BA5  1903               	btfsc	3,2
  8656  0BA6  2BA8               	goto	u6361
  8657  0BA7  2BA9               	goto	u6360
  8658  0BA8                     u6361:
  8659  0BA8  2BAF               	goto	l8524
  8660  0BA9                     u6360:
  8661  0BA9                     l8522:
  8662  0BA9  3011               	movlw	17
  8663  0BAA  0661               	xorwf	App_Update@u8_BtnUpStatus^(0+384),w
  8664  0BAB  1D03               	btfss	3,2
  8665  0BAC  2BAE               	goto	u6371
  8666  0BAD  2BAF               	goto	u6370
  8667  0BAE                     u6371:
  8668  0BAE  2C24               	goto	l8560
  8669  0BAF                     u6370:
  8670  0BAF                     l8524:
  8671                           
  8672                           ;MainAppSW.c: 255:             {;MainAppSW.c: 256:                 u8_WaterHeaterStatus 
      +                          = 12;
  8673  0BAF  300C               	movlw	12
  8674  0BB0  00FF               	movwf	btemp+1
  8675  0BB1  087F               	movf	btemp+1,w
  8676  0BB2  00FB               	movwf	_u8_WaterHeaterStatus
  8677  0BB3  2C24               	goto	l8560
  8678  0BB4                     l8526:
  8679                           
  8680                           ;MainAppSW.c: 261:             Heater_Cooler_action();
  8681  0BB4  160A  118A  209A  120A  158A  	fcall	_Heater_Cooler_action
  8682  0BB9                     l8528:
  8683                           
  8684                           ;MainAppSW.c: 262:             u16_SettingModeCounter +=20;
  8685  0BB9  3014               	movlw	20
  8686  0BBA  1683               	bsf	3,5	;RP0=1, select bank1
  8687  0BBB  1303               	bcf	3,6	;RP1=0, select bank1
  8688  0BBC  07BE               	addwf	_u16_SettingModeCounter^(0+128),f
  8689  0BBD  1803               	skipnc
  8690  0BBE  0ABF               	incf	(_u16_SettingModeCounter+1)^(0+128),f
  8691  0BBF  3000               	movlw	0
  8692  0BC0  07BF               	addwf	(_u16_SettingModeCounter+1)^(0+128),f
  8693  0BC1                     l8530:
  8694                           
  8695                           ;MainAppSW.c: 264:             if(u8_BtnDownStatus == 0x11 )
  8696  0BC1  3011               	movlw	17
  8697  0BC2  1683               	bsf	3,5	;RP0=1, select bank3
  8698  0BC3  1703               	bsf	3,6	;RP1=1, select bank3
  8699  0BC4  0662               	xorwf	App_Update@u8_BtnDownStatus^(0+384),w
  8700  0BC5  1D03               	btfss	3,2
  8701  0BC6  2BC8               	goto	u6381
  8702  0BC7  2BC9               	goto	u6380
  8703  0BC8                     u6381:
  8704  0BC8  2BD6               	goto	l8538
  8705  0BC9                     u6380:
  8706  0BC9                     l8532:
  8707                           
  8708                           ;MainAppSW.c: 265:             {;MainAppSW.c: 266:                 if(u8_SetTemperature 
      +                          >35)
  8709  0BC9  3024               	movlw	36
  8710  0BCA  027A               	subwf	_u8_SetTemperature,w
  8711  0BCB  1C03               	skipc
  8712  0BCC  2BCE               	goto	u6391
  8713  0BCD  2BCF               	goto	u6390
  8714  0BCE                     u6391:
  8715  0BCE  2BD1               	goto	l8536
  8716  0BCF                     u6390:
  8717  0BCF                     l8534:
  8718                           
  8719                           ;MainAppSW.c: 267:                 {;MainAppSW.c: 268:                     u8_SetTempera
      +                          ture-=5;
  8720  0BCF  3005               	movlw	5
  8721  0BD0  02FA               	subwf	_u8_SetTemperature,f
  8722  0BD1                     l8536:
  8723                           
  8724                           ;MainAppSW.c: 270:                 u16_SettingModeCounter=0;
  8725  0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  8726  0BD2  1303               	bcf	3,6	;RP1=0, select bank1
  8727  0BD3  01BE               	clrf	_u16_SettingModeCounter^(0+128)
  8728  0BD4  01BF               	clrf	(_u16_SettingModeCounter+1)^(0+128)
  8729                           
  8730                           ;MainAppSW.c: 271:             }
  8731  0BD5  2BE7               	goto	l8546
  8732  0BD6                     l8538:
  8733  0BD6  3011               	movlw	17
  8734  0BD7  0661               	xorwf	App_Update@u8_BtnUpStatus^(0+384),w
  8735  0BD8  1D03               	btfss	3,2
  8736  0BD9  2BDB               	goto	u6401
  8737  0BDA  2BDC               	goto	u6400
  8738  0BDB                     u6401:
  8739  0BDB  2BE7               	goto	l8546
  8740  0BDC                     u6400:
  8741  0BDC                     l8540:
  8742                           
  8743                           ;MainAppSW.c: 273:             {;MainAppSW.c: 274:                 if(u8_SetTemperature 
      +                          <75)
  8744  0BDC  304B               	movlw	75
  8745  0BDD  027A               	subwf	_u8_SetTemperature,w
  8746  0BDE  1803               	skipnc
  8747  0BDF  2BE1               	goto	u6411
  8748  0BE0  2BE2               	goto	u6410
  8749  0BE1                     u6411:
  8750  0BE1  2BD1               	goto	l8536
  8751  0BE2                     u6410:
  8752  0BE2                     l8542:
  8753                           
  8754                           ;MainAppSW.c: 275:                 {;MainAppSW.c: 276:                     u8_SetTempera
      +                          ture+=5;
  8755  0BE2  3005               	movlw	5
  8756  0BE3  00FF               	movwf	btemp+1
  8757  0BE4  087F               	movf	btemp+1,w
  8758  0BE5  07FA               	addwf	_u8_SetTemperature,f
  8759  0BE6  2BD1               	goto	l8536
  8760  0BE7                     l8546:
  8761                           
  8762                           ;MainAppSW.c: 280:             Display_SetData(u8_SetTemperature,1);
  8763  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  8764  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  8765  0BE9  01AA               	clrf	Display_SetData@u8_DisplayMode
  8766  0BEA  0AAA               	incf	Display_SetData@u8_DisplayMode,f
  8767  0BEB  087A               	movf	_u8_SetTemperature,w
  8768  0BEC  160A  118A  2000  120A  158A  	fcall	_Display_SetData
  8769  0BF1                     l8548:
  8770                           
  8771                           ;MainAppSW.c: 281:             if(u16_SettingModeCounter>=5000)
  8772  0BF1  3013               	movlw	19
  8773  0BF2  1683               	bsf	3,5	;RP0=1, select bank1
  8774  0BF3  1303               	bcf	3,6	;RP1=0, select bank1
  8775  0BF4  023F               	subwf	(_u16_SettingModeCounter+1)^(0+128),w
  8776  0BF5  3088               	movlw	136
  8777  0BF6  1903               	skipnz
  8778  0BF7  023E               	subwf	_u16_SettingModeCounter^(0+128),w
  8779  0BF8  1C03               	skipc
  8780  0BF9  2BFB               	goto	u6421
  8781  0BFA  2BFC               	goto	u6420
  8782  0BFB                     u6421:
  8783  0BFB  2C24               	goto	l8560
  8784  0BFC                     u6420:
  8785  0BFC                     l8550:
  8786                           
  8787                           ;MainAppSW.c: 282:             {;MainAppSW.c: 283:                 u8_WaterHeaterStatus 
      +                          = 10;
  8788  0BFC  300A               	movlw	10
  8789  0BFD  00FF               	movwf	btemp+1
  8790  0BFE  087F               	movf	btemp+1,w
  8791  0BFF  00FB               	movwf	_u8_WaterHeaterStatus
  8792  0C00                     l8552:
  8793                           
  8794                           ;MainAppSW.c: 284:                 u16_SettingModeCounter=0;
  8795  0C00  01BE               	clrf	_u16_SettingModeCounter^(0+128)
  8796  0C01  01BF               	clrf	(_u16_SettingModeCounter+1)^(0+128)
  8797  0C02                     l8554:
  8798                           
  8799                           ;MainAppSW.c: 285:                 EEPROM_Write(0x01,u8_SetTemperature);
  8800  0C02  087A               	movf	_u8_SetTemperature,w
  8801  0C03  00FF               	movwf	btemp+1
  8802  0C04  087F               	movf	btemp+1,w
  8803  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  8804  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  8805  0C07  00AB               	movwf	EEPROM_Write@u8_Data
  8806  0C08  3001               	movlw	1
  8807  0C09  160A  158A  24CB  120A  158A  	fcall	_EEPROM_Write
  8808  0C0E  2C24               	goto	l8560
  8809  0C0F                     l8558:
  8810  0C0F  087B               	movf	_u8_WaterHeaterStatus,w
  8811  0C10  1683               	bsf	3,5	;RP0=1, select bank3
  8812  0C11  1703               	bsf	3,6	;RP1=1, select bank3
  8813  0C12  00DE               	movwf	??_App_Update^(0+384)
  8814  0C13  01DF               	clrf	(??_App_Update^(0+384)+1)
  8815                           
  8816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8817                           ; Switch size 1, requested type "simple"
  8818                           ; Number of cases is 1, Range of values is 0 to 0
  8819                           ; switch strategies available:
  8820                           ; Name         Instructions Cycles
  8821                           ; simple_byte            4     3 (average)
  8822                           ; direct_byte           11     8 (fixed)
  8823                           ; jumptable            260     6 (fixed)
  8824                           ;	Chosen strategy is simple_byte
  8825  0C14  085F               	movf	(??_App_Update+1)^(0+384),w
  8826  0C15  3A00               	xorlw	0	; case 0
  8827  0C16  1903               	skipnz
  8828  0C17  2C19               	goto	l9836
  8829  0C18  2C24               	goto	l8560
  8830  0C19                     l9836:
  8831                           
  8832                           ; Switch size 1, requested type "simple"
  8833                           ; Number of cases is 3, Range of values is 10 to 12
  8834                           ; switch strategies available:
  8835                           ; Name         Instructions Cycles
  8836                           ; simple_byte           10     6 (average)
  8837                           ; direct_byte           20    11 (fixed)
  8838                           ; jumptable            263     9 (fixed)
  8839                           ;	Chosen strategy is simple_byte
  8840  0C19  085E               	movf	??_App_Update^(0+384),w
  8841  0C1A  3A0A               	xorlw	10	; case 10
  8842  0C1B  1903               	skipnz
  8843  0C1C  2B8E               	goto	l8516
  8844  0C1D  3A01               	xorlw	1	; case 11
  8845  0C1E  1903               	skipnz
  8846  0C1F  2B69               	goto	l8506
  8847  0C20  3A07               	xorlw	7	; case 12
  8848  0C21  1903               	skipnz
  8849  0C22  2BB4               	goto	l8526
  8850  0C23  2C24               	goto	l8560
  8851  0C24                     l8560:
  8852                           
  8853                           ;MainAppSW.c: 294:     LED_ACTION();
  8854  0C24  160A  158A  26C9  120A  158A  	fcall	_LED_ACTION
  8855  0C29                     l357:
  8856  0C29  0008               	return
  8857  0C2A                     __end_of_App_Update:
  8858                           
  8859                           	psect	text43
  8860  112F                     __ptext43:	
  8861 ;; *************** function _pushButton_GetStatus *****************
  8862 ;; Defined at:
  8863 ;;		line 173 in file "PushButton.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  u8_BtnId        1    wreg     unsigned char 
  8866 ;;  pu8_BtnState    1   10[BANK0 ] PTR unsigned char 
  8867 ;;		 -> App_Update@u8_BtnDownStatus(1), App_Update@u8_BtnUpStatus(1), 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  u8_BtnId        1   13[BANK0 ] unsigned char 
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      void 
  8872 ;; Registers used:
  8873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8879 ;;      Params:         0       1       0       0       0
  8880 ;;      Locals:         0       1       0       0       0
  8881 ;;      Temps:          0       2       0       0       0
  8882 ;;      Totals:         0       4       0       0       0
  8883 ;;Total ram usage:        4 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; Hardware stack levels required when called:    3
  8886 ;; This function calls:
  8887 ;;		Nothing
  8888 ;; This function is called by:
  8889 ;;		_App_Update
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function _pushButton_GetStatus
  8895  112F                     _pushButton_GetStatus:
  8896                           
  8897                           ;incstack = 0
  8898                           ; Regs used in _pushButton_GetStatus: [wreg-fsr0h+status,2+status,0+btemp+1]
  8899                           ;pushButton_GetStatus@u8_BtnId stored from wreg
  8900  112F  1283               	bcf	3,5	;RP0=0, select bank0
  8901  1130  1303               	bcf	3,6	;RP1=0, select bank0
  8902  1131  00AD               	movwf	pushButton_GetStatus@u8_BtnId
  8903  1132                     l7966:
  8904                           
  8905                           ;PushButton.c: 173: void pushButton_GetStatus(uint8 u8_BtnId,uint8 * pu8_BtnState);PushB
      +                          utton.c: 174: {;PushButton.c: 175:  switch (u8_BtnId)
  8906  1132  2963               	goto	l7978
  8907  1133                     l7968:
  8908                           
  8909                           ;PushButton.c: 178:    *pu8_BtnState = STA_buttons[0].buttonStatus;
  8910  1133  1683               	bsf	3,5	;RP0=1, select bank3
  8911  1134  1703               	bsf	3,6	;RP1=1, select bank3
  8912  1135  083A               	movf	(_STA_buttons^(0+384)+2),w
  8913  1136  00FF               	movwf	btemp+1
  8914  1137  1283               	bcf	3,5	;RP0=0, select bank0
  8915  1138  1303               	bcf	3,6	;RP1=0, select bank0
  8916  1139  082A               	movf	pushButton_GetStatus@pu8_BtnState,w
  8917  113A  0084               	movwf	4
  8918  113B  087F               	movf	btemp+1,w
  8919  113C  1783               	bsf	3,7	;select IRP bank2
  8920  113D  0080               	movwf	0
  8921                           
  8922                           ;PushButton.c: 179:    break;
  8923  113E  2979               	goto	l426
  8924  113F                     l7970:
  8925                           
  8926                           ;PushButton.c: 181:    *pu8_BtnState = STA_buttons[1].buttonStatus;
  8927  113F  1683               	bsf	3,5	;RP0=1, select bank3
  8928  1140  1703               	bsf	3,6	;RP1=1, select bank3
  8929  1141  0840               	movf	(_STA_buttons^(0+384)+8),w
  8930  1142  00FF               	movwf	btemp+1
  8931  1143  1283               	bcf	3,5	;RP0=0, select bank0
  8932  1144  1303               	bcf	3,6	;RP1=0, select bank0
  8933  1145  082A               	movf	pushButton_GetStatus@pu8_BtnState,w
  8934  1146  0084               	movwf	4
  8935  1147  087F               	movf	btemp+1,w
  8936  1148  1783               	bsf	3,7	;select IRP bank2
  8937  1149  0080               	movwf	0
  8938                           
  8939                           ;PushButton.c: 182:    break;
  8940  114A  2979               	goto	l426
  8941  114B                     l7972:
  8942                           
  8943                           ;PushButton.c: 184:    *pu8_BtnState = STA_buttons[2].buttonStatus;
  8944  114B  1683               	bsf	3,5	;RP0=1, select bank3
  8945  114C  1703               	bsf	3,6	;RP1=1, select bank3
  8946  114D  0846               	movf	(_STA_buttons^(0+384)+14),w
  8947  114E  00FF               	movwf	btemp+1
  8948  114F  1283               	bcf	3,5	;RP0=0, select bank0
  8949  1150  1303               	bcf	3,6	;RP1=0, select bank0
  8950  1151  082A               	movf	pushButton_GetStatus@pu8_BtnState,w
  8951  1152  0084               	movwf	4
  8952  1153  087F               	movf	btemp+1,w
  8953  1154  1783               	bsf	3,7	;select IRP bank2
  8954  1155  0080               	movwf	0
  8955                           
  8956                           ;PushButton.c: 185:    break;
  8957  1156  2979               	goto	l426
  8958  1157                     l7974:
  8959                           
  8960                           ;PushButton.c: 187:    *pu8_BtnState = STA_buttons[3].buttonStatus;
  8961  1157  1683               	bsf	3,5	;RP0=1, select bank3
  8962  1158  1703               	bsf	3,6	;RP1=1, select bank3
  8963  1159  084C               	movf	(_STA_buttons^(0+384)+20),w
  8964  115A  00FF               	movwf	btemp+1
  8965  115B  1283               	bcf	3,5	;RP0=0, select bank0
  8966  115C  1303               	bcf	3,6	;RP1=0, select bank0
  8967  115D  082A               	movf	pushButton_GetStatus@pu8_BtnState,w
  8968  115E  0084               	movwf	4
  8969  115F  087F               	movf	btemp+1,w
  8970  1160  1783               	bsf	3,7	;select IRP bank2
  8971  1161  0080               	movwf	0
  8972                           
  8973                           ;PushButton.c: 188:    break;
  8974  1162  2979               	goto	l426
  8975  1163                     l7978:
  8976  1163  082D               	movf	pushButton_GetStatus@u8_BtnId,w
  8977  1164  00AB               	movwf	??_pushButton_GetStatus
  8978  1165  01AC               	clrf	??_pushButton_GetStatus+1
  8979                           
  8980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8981                           ; Switch size 1, requested type "simple"
  8982                           ; Number of cases is 1, Range of values is 0 to 0
  8983                           ; switch strategies available:
  8984                           ; Name         Instructions Cycles
  8985                           ; simple_byte            4     3 (average)
  8986                           ; direct_byte           11     8 (fixed)
  8987                           ; jumptable            260     6 (fixed)
  8988                           ;	Chosen strategy is simple_byte
  8989  1166  082C               	movf	??_pushButton_GetStatus+1,w
  8990  1167  3A00               	xorlw	0	; case 0
  8991  1168  1903               	skipnz
  8992  1169  296B               	goto	l9838
  8993  116A  2979               	goto	l426
  8994  116B                     l9838:
  8995                           
  8996                           ; Switch size 1, requested type "simple"
  8997                           ; Number of cases is 4, Range of values is 0 to 3
  8998                           ; switch strategies available:
  8999                           ; Name         Instructions Cycles
  9000                           ; simple_byte           13     7 (average)
  9001                           ; direct_byte           20     8 (fixed)
  9002                           ; jumptable            260     6 (fixed)
  9003                           ;	Chosen strategy is simple_byte
  9004  116B  082B               	movf	??_pushButton_GetStatus,w
  9005  116C  3A00               	xorlw	0	; case 0
  9006  116D  1903               	skipnz
  9007  116E  2933               	goto	l7968
  9008  116F  3A01               	xorlw	1	; case 1
  9009  1170  1903               	skipnz
  9010  1171  293F               	goto	l7970
  9011  1172  3A03               	xorlw	3	; case 2
  9012  1173  1903               	skipnz
  9013  1174  294B               	goto	l7972
  9014  1175  3A01               	xorlw	1	; case 3
  9015  1176  1903               	skipnz
  9016  1177  2957               	goto	l7974
  9017  1178  2979               	goto	l426
  9018  1179                     l426:
  9019  1179  0008               	return
  9020  117A                     __end_of_pushButton_GetStatus:
  9021                           
  9022                           	psect	text44
  9023  1053                     __ptext44:	
  9024 ;; *************** function _Timer_Stop *****************
  9025 ;; Defined at:
  9026 ;;		line 388 in file "TIMER.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;  u8_Timer_CH_    1    wreg     unsigned char 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;  u8_Timer_CH_    1   12[BANK0 ] unsigned char 
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9040 ;;      Params:         0       0       0       0       0
  9041 ;;      Locals:         0       1       0       0       0
  9042 ;;      Temps:          0       2       0       0       0
  9043 ;;      Totals:         0       3       0       0       0
  9044 ;;Total ram usage:        3 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:    3
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_App_Update
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           
  9055                           ;psect for function _Timer_Stop
  9056  1053                     _Timer_Stop:
  9057                           
  9058                           ;incstack = 0
  9059                           ; Regs used in _Timer_Stop: [wreg-fsr0h+status,2+status,0+btemp+1]
  9060                           ;Timer_Stop@u8_Timer_CH_NO stored from wreg
  9061  1053  1283               	bcf	3,5	;RP0=0, select bank0
  9062  1054  1303               	bcf	3,6	;RP1=0, select bank0
  9063  1055  00AC               	movwf	Timer_Stop@u8_Timer_CH_NO
  9064  1056                     l8002:
  9065                           
  9066                           ;TIMER.c: 388: void Timer_Stop(uint8 u8_Timer_CH_NO);TIMER.c: 389: {;TIMER.c: 390:  swit
      +                          ch(u8_Timer_CH_NO)
  9067  1056  2886               	goto	l8028
  9068  1057                     l8004:
  9069                           
  9070                           ;TIMER.c: 394:    if(au8_Timer_Started[0] != 1)
  9071  1057  1683               	bsf	3,5	;RP0=1, select bank1
  9072  1058  1303               	bcf	3,6	;RP1=0, select bank1
  9073  1059  0336               	decf	_au8_Timer_Started^(0+128),w
  9074  105A  1903               	btfsc	3,2
  9075  105B  285D               	goto	u5961
  9076  105C  285E               	goto	u5960
  9077  105D                     u5961:
  9078  105D  285F               	goto	l604
  9079  105E                     u5960:
  9080  105E  2899               	goto	l614
  9081  105F                     l604:	
  9082                           ;TIMER.c: 397:    else
  9083                           
  9084                           
  9085                           ;TIMER.c: 398:    {;TIMER.c: 400:                 (OPTION_REG)|=(0x20);
  9086  105F  1681               	bsf	1,5	;volatile
  9087  1060                     l8008:
  9088                           
  9089                           ;TIMER.c: 401:     au8_Timer_Started[0]=0;
  9090  1060  01B6               	clrf	_au8_Timer_Started^(0+128)
  9091  1061  2899               	goto	l614
  9092  1062                     l8010:
  9093                           
  9094                           ;TIMER.c: 405:    if(au8_Timer_Started[1] != 1)
  9095  1062  1683               	bsf	3,5	;RP0=1, select bank1
  9096  1063  1303               	bcf	3,6	;RP1=0, select bank1
  9097  1064  0337               	decf	(_au8_Timer_Started^(0+128)+1),w
  9098  1065  1903               	btfsc	3,2
  9099  1066  2868               	goto	u5971
  9100  1067  2869               	goto	u5970
  9101  1068                     u5971:
  9102  1068  286A               	goto	l8014
  9103  1069                     u5970:
  9104  1069  2899               	goto	l614
  9105  106A                     l8014:
  9106                           
  9107                           ;TIMER.c: 410:    {;TIMER.c: 411:     (T1CON)&=~(0x01);
  9108  106A  30FE               	movlw	254
  9109  106B  00FF               	movwf	btemp+1
  9110  106C  087F               	movf	btemp+1,w
  9111  106D  1283               	bcf	3,5	;RP0=0, select bank0
  9112  106E  1303               	bcf	3,6	;RP1=0, select bank0
  9113  106F  0590               	andwf	16,f	;volatile
  9114  1070                     l8016:
  9115                           
  9116                           ;TIMER.c: 412:     au8_Timer_Started[1]=0;
  9117  1070  1683               	bsf	3,5	;RP0=1, select bank1
  9118  1071  1303               	bcf	3,6	;RP1=0, select bank1
  9119  1072  01B7               	clrf	(_au8_Timer_Started^(0+128)+1)
  9120  1073  2899               	goto	l614
  9121  1074                     l8018:
  9122                           
  9123                           ;TIMER.c: 416:    if(au8_Timer_Started[2] != 1)
  9124  1074  1683               	bsf	3,5	;RP0=1, select bank1
  9125  1075  1303               	bcf	3,6	;RP1=0, select bank1
  9126  1076  0338               	decf	(_au8_Timer_Started^(0+128)+2),w
  9127  1077  1903               	btfsc	3,2
  9128  1078  287A               	goto	u5981
  9129  1079  287B               	goto	u5980
  9130  107A                     u5981:
  9131  107A  287C               	goto	l8022
  9132  107B                     u5980:
  9133  107B  2899               	goto	l614
  9134  107C                     l8022:
  9135                           
  9136                           ;TIMER.c: 420:    {;TIMER.c: 421:     (T1CON)&=~(0x04);
  9137  107C  30FB               	movlw	251
  9138  107D  00FF               	movwf	btemp+1
  9139  107E  087F               	movf	btemp+1,w
  9140  107F  1283               	bcf	3,5	;RP0=0, select bank0
  9141  1080  1303               	bcf	3,6	;RP1=0, select bank0
  9142  1081  0590               	andwf	16,f	;volatile
  9143  1082                     l8024:
  9144                           
  9145                           ;TIMER.c: 422:     au8_Timer_Started[2]=0;
  9146  1082  1683               	bsf	3,5	;RP0=1, select bank1
  9147  1083  1303               	bcf	3,6	;RP1=0, select bank1
  9148  1084  01B8               	clrf	(_au8_Timer_Started^(0+128)+2)
  9149  1085  2899               	goto	l614
  9150  1086                     l8028:
  9151  1086  082C               	movf	Timer_Stop@u8_Timer_CH_NO,w
  9152  1087  00AA               	movwf	??_Timer_Stop
  9153  1088  01AB               	clrf	??_Timer_Stop+1
  9154                           
  9155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9156                           ; Switch size 1, requested type "simple"
  9157                           ; Number of cases is 1, Range of values is 0 to 0
  9158                           ; switch strategies available:
  9159                           ; Name         Instructions Cycles
  9160                           ; simple_byte            4     3 (average)
  9161                           ; direct_byte           11     8 (fixed)
  9162                           ; jumptable            260     6 (fixed)
  9163                           ;	Chosen strategy is simple_byte
  9164  1089  082B               	movf	??_Timer_Stop+1,w
  9165  108A  3A00               	xorlw	0	; case 0
  9166  108B  1903               	skipnz
  9167  108C  288E               	goto	l9840
  9168  108D  2899               	goto	l614
  9169  108E                     l9840:
  9170                           
  9171                           ; Switch size 1, requested type "simple"
  9172                           ; Number of cases is 3, Range of values is 0 to 2
  9173                           ; switch strategies available:
  9174                           ; Name         Instructions Cycles
  9175                           ; simple_byte           10     6 (average)
  9176                           ; direct_byte           17     8 (fixed)
  9177                           ; jumptable            260     6 (fixed)
  9178                           ;	Chosen strategy is simple_byte
  9179  108E  082A               	movf	??_Timer_Stop,w
  9180  108F  3A00               	xorlw	0	; case 0
  9181  1090  1903               	skipnz
  9182  1091  2857               	goto	l8004
  9183  1092  3A01               	xorlw	1	; case 1
  9184  1093  1903               	skipnz
  9185  1094  2862               	goto	l8010
  9186  1095  3A03               	xorlw	3	; case 2
  9187  1096  1903               	skipnz
  9188  1097  2874               	goto	l8018
  9189  1098  2899               	goto	l614
  9190  1099                     l614:
  9191  1099  0008               	return
  9192  109A                     __end_of_Timer_Stop:
  9193                           
  9194                           	psect	text45
  9195  1E5B                     __ptext45:	
  9196 ;; *************** function _TemperatureAVGReading_Read *****************
  9197 ;; Defined at:
  9198 ;;		line 101 in file "TempAvgReading.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  pu8_AVGtempe    1    wreg     PTR unsigned char 
  9201 ;;		 -> u8_AVG_Temperature(1), 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  pu8_AVGtempe    1   19[BANK0 ] PTR unsigned char 
  9204 ;;		 -> u8_AVG_Temperature(1), 
  9205 ;;  u16_CurrentA    2   20[BANK0 ] unsigned int 
  9206 ;;  u8_LoopCount    1   22[BANK0 ] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9216 ;;      Params:         0       0       0       0       0
  9217 ;;      Locals:         0       4       0       0       0
  9218 ;;      Temps:          0       2       0       0       0
  9219 ;;      Totals:         0       6       0       0       0
  9220 ;;Total ram usage:        6 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    4
  9223 ;; This function calls:
  9224 ;;		___lwdiv
  9225 ;; This function is called by:
  9226 ;;		_App_Update
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           
  9231                           ;psect for function _TemperatureAVGReading_Read
  9232  1E5B                     _TemperatureAVGReading_Read:
  9233                           
  9234                           ;incstack = 0
  9235                           ; Regs used in _TemperatureAVGReading_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  9236                           ;TemperatureAVGReading_Read@pu8_AVGtemperature stored from wreg
  9237  1E5B  1283               	bcf	3,5	;RP0=0, select bank0
  9238  1E5C  1303               	bcf	3,6	;RP1=0, select bank0
  9239  1E5D  00B3               	movwf	TemperatureAVGReading_Read@pu8_AVGtemperature
  9240  1E5E                     l7986:
  9241                           
  9242                           ;TempAvgReading.c: 101: extern void TemperatureAVGReading_Read(uint8 *pu8_AVGtemperature
      +                          );TempAvgReading.c: 102: {;TempAvgReading.c: 103:     uint16 u16_CurrentAvgTemerature=0;
  9243  1E5E  01B4               	clrf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature
  9244  1E5F  01B5               	clrf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature+1
  9245                           
  9246                           ;TempAvgReading.c: 104:     uint8 u8_LoopCounter;;TempAvgReading.c: 105:     for(u8_Loop
      +                          Counter=0;u8_LoopCounter < (10);u8_LoopCounter++)
  9247  1E60  01B6               	clrf	TemperatureAVGReading_Read@u8_LoopCounter
  9248  1E61                     l7992:
  9249                           
  9250                           ;TempAvgReading.c: 106:     {;TempAvgReading.c: 107:         u16_CurrentAvgTemerature +=
      +                           au8_TemperatureSamples[u8_LoopCounter];
  9251  1E61  0836               	movf	TemperatureAVGReading_Read@u8_LoopCounter,w
  9252  1E62  3ED0               	addlw	(low (_au8_TemperatureSamples| (0+256)))& (0+255)
  9253  1E63  0084               	movwf	4
  9254  1E64  1783               	bsf	3,7	;select IRP bank3
  9255  1E65  0800               	movf	0,w
  9256  1E66  00B1               	movwf	??_TemperatureAVGReading_Read
  9257  1E67  01B2               	clrf	??_TemperatureAVGReading_Read+1
  9258  1E68  0831               	movf	??_TemperatureAVGReading_Read,w
  9259  1E69  07B4               	addwf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature,f
  9260  1E6A  1803               	skipnc
  9261  1E6B  0AB5               	incf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature+1,f
  9262  1E6C  0832               	movf	??_TemperatureAVGReading_Read+1,w
  9263  1E6D  07B5               	addwf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature+1,f
  9264  1E6E                     l7994:
  9265                           
  9266                           ;TempAvgReading.c: 108:     }
  9267  1E6E  3001               	movlw	1
  9268  1E6F  00FF               	movwf	btemp+1
  9269  1E70  087F               	movf	btemp+1,w
  9270  1E71  07B6               	addwf	TemperatureAVGReading_Read@u8_LoopCounter,f
  9271  1E72                     l7996:
  9272  1E72  300A               	movlw	10
  9273  1E73  0236               	subwf	TemperatureAVGReading_Read@u8_LoopCounter,w
  9274  1E74  1C03               	skipc
  9275  1E75  2E77               	goto	u5951
  9276  1E76  2E78               	goto	u5950
  9277  1E77                     u5951:
  9278  1E77  2E61               	goto	l7992
  9279  1E78                     u5950:
  9280  1E78                     l7998:
  9281                           
  9282                           ;TempAvgReading.c: 109:     u16_CurrentAvgTemerature /= 10;
  9283  1E78  300A               	movlw	10
  9284  1E79  00AA               	movwf	___lwdiv@divisor
  9285  1E7A  3000               	movlw	0
  9286  1E7B  00AB               	movwf	___lwdiv@divisor+1
  9287  1E7C  0835               	movf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature+1,w
  9288  1E7D  00AD               	movwf	___lwdiv@dividend+1
  9289  1E7E  0834               	movf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature,w
  9290  1E7F  00AC               	movwf	___lwdiv@dividend
  9291  1E80  160A  158A  27BA  160A  158A  	fcall	___lwdiv
  9292  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  9293  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  9294  1E87  082B               	movf	?___lwdiv+1,w
  9295  1E88  00B5               	movwf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature+1
  9296  1E89  082A               	movf	?___lwdiv,w
  9297  1E8A  00B4               	movwf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature
  9298  1E8B                     l8000:
  9299                           
  9300                           ;TempAvgReading.c: 111:     *pu8_AVGtemperature=u16_CurrentAvgTemerature;
  9301  1E8B  0834               	movf	TemperatureAVGReading_Read@u16_CurrentAvgTemerature,w
  9302  1E8C  00FF               	movwf	btemp+1
  9303  1E8D  0833               	movf	TemperatureAVGReading_Read@pu8_AVGtemperature,w
  9304  1E8E  0084               	movwf	4
  9305  1E8F  087F               	movf	btemp+1,w
  9306  1E90  0080               	movwf	0
  9307  1E91                     l735:
  9308  1E91  0008               	return
  9309  1E92                     __end_of_TemperatureAVGReading_Read:
  9310                           
  9311                           	psect	text46
  9312  1FBA                     __ptext46:	
  9313 ;; *************** function ___lwdiv *****************
  9314 ;; Defined at:
  9315 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;  divisor         2   10[BANK0 ] unsigned int 
  9318 ;;  dividend        2   12[BANK0 ] unsigned int 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;  quotient        2   15[BANK0 ] unsigned int 
  9321 ;;  counter         1   14[BANK0 ] unsigned char 
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  2   10[BANK0 ] unsigned int 
  9324 ;; Registers used:
  9325 ;;		wreg, status,2, status,0, btemp+1
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9331 ;;      Params:         0       4       0       0       0
  9332 ;;      Locals:         0       3       0       0       0
  9333 ;;      Temps:          0       0       0       0       0
  9334 ;;      Totals:         0       7       0       0       0
  9335 ;;Total ram usage:        7 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; Hardware stack levels required when called:    3
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_TemperatureAVGReading_Read
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           
  9346                           ;psect for function ___lwdiv
  9347  1FBA                     ___lwdiv:
  9348  1FBA                     l7454:	
  9349                           ;incstack = 0
  9350                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  9351                           
  9352  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  9353  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  9354  1FBC  01AF               	clrf	___lwdiv@quotient
  9355  1FBD  01B0               	clrf	___lwdiv@quotient+1
  9356  1FBE                     l7456:
  9357  1FBE  082A               	movf	___lwdiv@divisor,w
  9358  1FBF  042B               	iorwf	___lwdiv@divisor+1,w
  9359  1FC0  1903               	btfsc	3,2
  9360  1FC1  2FC3               	goto	u4921
  9361  1FC2  2FC4               	goto	u4920
  9362  1FC3                     u4921:
  9363  1FC3  2FFB               	goto	l7476
  9364  1FC4                     u4920:
  9365  1FC4                     l7458:
  9366  1FC4  01AE               	clrf	___lwdiv@counter
  9367  1FC5  0AAE               	incf	___lwdiv@counter,f
  9368  1FC6  2FD2               	goto	l7464
  9369  1FC7                     l7460:
  9370  1FC7  3001               	movlw	1
  9371  1FC8                     u4935:
  9372  1FC8  1003               	clrc
  9373  1FC9  0DAA               	rlf	___lwdiv@divisor,f
  9374  1FCA  0DAB               	rlf	___lwdiv@divisor+1,f
  9375  1FCB  3EFF               	addlw	-1
  9376  1FCC  1D03               	skipz
  9377  1FCD  2FC8               	goto	u4935
  9378  1FCE                     l7462:
  9379  1FCE  3001               	movlw	1
  9380  1FCF  00FF               	movwf	btemp+1
  9381  1FD0  087F               	movf	btemp+1,w
  9382  1FD1  07AE               	addwf	___lwdiv@counter,f
  9383  1FD2                     l7464:
  9384  1FD2  1FAB               	btfss	___lwdiv@divisor+1,7
  9385  1FD3  2FD5               	goto	u4941
  9386  1FD4  2FD6               	goto	u4940
  9387  1FD5                     u4941:
  9388  1FD5  2FC7               	goto	l7460
  9389  1FD6                     u4940:
  9390  1FD6                     l7466:
  9391  1FD6  3001               	movlw	1
  9392  1FD7                     u4955:
  9393  1FD7  1003               	clrc
  9394  1FD8  0DAF               	rlf	___lwdiv@quotient,f
  9395  1FD9  0DB0               	rlf	___lwdiv@quotient+1,f
  9396  1FDA  3EFF               	addlw	-1
  9397  1FDB  1D03               	skipz
  9398  1FDC  2FD7               	goto	u4955
  9399  1FDD  082B               	movf	___lwdiv@divisor+1,w
  9400  1FDE  022D               	subwf	___lwdiv@dividend+1,w
  9401  1FDF  1D03               	skipz
  9402  1FE0  2FE3               	goto	u4965
  9403  1FE1  082A               	movf	___lwdiv@divisor,w
  9404  1FE2  022C               	subwf	___lwdiv@dividend,w
  9405  1FE3                     u4965:
  9406  1FE3  1C03               	skipc
  9407  1FE4  2FE6               	goto	u4961
  9408  1FE5  2FE7               	goto	u4960
  9409  1FE6                     u4961:
  9410  1FE6  2FEE               	goto	l7472
  9411  1FE7                     u4960:
  9412  1FE7                     l7468:
  9413  1FE7  082A               	movf	___lwdiv@divisor,w
  9414  1FE8  02AC               	subwf	___lwdiv@dividend,f
  9415  1FE9  082B               	movf	___lwdiv@divisor+1,w
  9416  1FEA  1C03               	skipc
  9417  1FEB  03AD               	decf	___lwdiv@dividend+1,f
  9418  1FEC  02AD               	subwf	___lwdiv@dividend+1,f
  9419  1FED                     l7470:
  9420  1FED  142F               	bsf	___lwdiv@quotient,0
  9421  1FEE                     l7472:
  9422  1FEE  3001               	movlw	1
  9423  1FEF                     u4975:
  9424  1FEF  1003               	clrc
  9425  1FF0  0CAB               	rrf	___lwdiv@divisor+1,f
  9426  1FF1  0CAA               	rrf	___lwdiv@divisor,f
  9427  1FF2  3EFF               	addlw	-1
  9428  1FF3  1D03               	skipz
  9429  1FF4  2FEF               	goto	u4975
  9430  1FF5                     l7474:
  9431  1FF5  3001               	movlw	1
  9432  1FF6  02AE               	subwf	___lwdiv@counter,f
  9433  1FF7  1D03               	btfss	3,2
  9434  1FF8  2FFA               	goto	u4981
  9435  1FF9  2FFB               	goto	u4980
  9436  1FFA                     u4981:
  9437  1FFA  2FD6               	goto	l7466
  9438  1FFB                     u4980:
  9439  1FFB                     l7476:
  9440  1FFB  0830               	movf	___lwdiv@quotient+1,w
  9441  1FFC  00AB               	movwf	?___lwdiv+1
  9442  1FFD  082F               	movf	___lwdiv@quotient,w
  9443  1FFE  00AA               	movwf	?___lwdiv
  9444  1FFF                     l1234:
  9445  1FFF  0008               	return
  9446  2000                     __end_of___lwdiv:
  9447                           
  9448                           	psect	text47
  9449  14E3                     __ptext47:	
  9450 ;; *************** function _LM_Read *****************
  9451 ;; Defined at:
  9452 ;;		line 91 in file "LM35.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  pu8_temperat    1    wreg     PTR unsigned char 
  9455 ;;		 -> TemperatureAVGReading_Update@u8_LMTemperature(1), App_Update@u8_CurrentTemperature(1), 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;  pu8_temperat    1   22[BANK1 ] PTR unsigned char 
  9458 ;;		 -> TemperatureAVGReading_Update@u8_LMTemperature(1), App_Update@u8_CurrentTemperature(1), 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9468 ;;      Params:         0       0       0       0       0
  9469 ;;      Locals:         0       0       1       0       0
  9470 ;;      Temps:          0       0       0       0       0
  9471 ;;      Totals:         0       0       1       0       0
  9472 ;;Total ram usage:        1 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    5
  9475 ;; This function calls:
  9476 ;;		___fldiv
  9477 ;;		___flmul
  9478 ;;		___fltol
  9479 ;;		___xxtofl
  9480 ;; This function is called by:
  9481 ;;		_App_Update
  9482 ;;		_TemperatureAVGReading_Update
  9483 ;; This function uses a non-reentrant model
  9484 ;;
  9485                           
  9486                           
  9487                           ;psect for function _LM_Read
  9488  14E3                     _LM_Read:
  9489                           
  9490                           ;incstack = 0
  9491                           ; Regs used in _LM_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9492                           ;LM_Read@pu8_temperature stored from wreg
  9493  14E3  1683               	bsf	3,5	;RP0=1, select bank1
  9494  14E4  1303               	bcf	3,6	;RP1=0, select bank1
  9495  14E5  00DB               	movwf	LM_Read@pu8_temperature^(0+128)
  9496  14E6                     l7926:
  9497                           
  9498                           ;LM35.c: 91: extern void LM_Read(uint8 *pu8_temperature);LM35.c: 92: {;LM35.c: 93:  *pu8
      +                          _temperature = (u16_ADCReading * 4.88/10);
  9499  14E6  1283               	bcf	3,5	;RP0=0, select bank0
  9500  14E7  1303               	bcf	3,6	;RP1=0, select bank0
  9501  14E8  0862               	movf	_u16_ADCReading,w
  9502  14E9  00AA               	movwf	___xxtofl@val
  9503  14EA  0863               	movf	_u16_ADCReading+1,w
  9504  14EB  00AB               	movwf	___xxtofl@val+1
  9505  14EC  01AC               	clrf	___xxtofl@val+2
  9506  14ED  01AD               	clrf	___xxtofl@val+3
  9507  14EE  3000               	movlw	0
  9508  14EF  120A  158A  2276  160A  118A  	fcall	___xxtofl
  9509  14F4  1283               	bcf	3,5	;RP0=0, select bank0
  9510  14F5  1303               	bcf	3,6	;RP1=0, select bank0
  9511  14F6  082D               	movf	?___xxtofl+3,w
  9512  14F7  00BF               	movwf	___flmul@a+3
  9513  14F8  082C               	movf	?___xxtofl+2,w
  9514  14F9  00BE               	movwf	___flmul@a+2
  9515  14FA  082B               	movf	?___xxtofl+1,w
  9516  14FB  00BD               	movwf	___flmul@a+1
  9517  14FC  082A               	movf	?___xxtofl,w
  9518  14FD  00BC               	movwf	___flmul@a
  9519  14FE  3040               	movlw	64
  9520  14FF  00BB               	movwf	___flmul@b+3
  9521  1500  309C               	movlw	156
  9522  1501  00BA               	movwf	___flmul@b+2
  9523  1502  3028               	movlw	40
  9524  1503  00B9               	movwf	___flmul@b+1
  9525  1504  30F6               	movlw	246
  9526  1505  00B8               	movwf	___flmul@b
  9527  1506  120A  118A  2073  160A  118A  	fcall	___flmul
  9528  150B  1283               	bcf	3,5	;RP0=0, select bank0
  9529  150C  1303               	bcf	3,6	;RP1=0, select bank0
  9530  150D  083B               	movf	?___flmul+3,w
  9531  150E  00D9               	movwf	___fldiv@b+3
  9532  150F  083A               	movf	?___flmul+2,w
  9533  1510  00D8               	movwf	___fldiv@b+2
  9534  1511  0839               	movf	?___flmul+1,w
  9535  1512  00D7               	movwf	___fldiv@b+1
  9536  1513  0838               	movf	?___flmul,w
  9537  1514  00D6               	movwf	___fldiv@b
  9538  1515  3041               	movlw	65
  9539  1516  00D5               	movwf	___fldiv@a+3
  9540  1517  3020               	movlw	32
  9541  1518  00D4               	movwf	___fldiv@a+2
  9542  1519  3000               	movlw	0
  9543  151A  00D3               	movwf	___fldiv@a+1
  9544  151B  3000               	movlw	0
  9545  151C  00D2               	movwf	___fldiv@a
  9546  151D  120A  118A  23D4  160A  118A  	fcall	___fldiv
  9547  1522  1283               	bcf	3,5	;RP0=0, select bank0
  9548  1523  1303               	bcf	3,6	;RP1=0, select bank0
  9549  1524  0855               	movf	?___fldiv+3,w
  9550  1525  1683               	bsf	3,5	;RP0=1, select bank1
  9551  1526  1303               	bcf	3,6	;RP1=0, select bank1
  9552  1527  00DA               	movwf	(___fltol@f1+3)^(0+128)
  9553  1528  1283               	bcf	3,5	;RP0=0, select bank0
  9554  1529  1303               	bcf	3,6	;RP1=0, select bank0
  9555  152A  0854               	movf	?___fldiv+2,w
  9556  152B  1683               	bsf	3,5	;RP0=1, select bank1
  9557  152C  1303               	bcf	3,6	;RP1=0, select bank1
  9558  152D  00D9               	movwf	(___fltol@f1+2)^(0+128)
  9559  152E  1283               	bcf	3,5	;RP0=0, select bank0
  9560  152F  1303               	bcf	3,6	;RP1=0, select bank0
  9561  1530  0853               	movf	?___fldiv+1,w
  9562  1531  1683               	bsf	3,5	;RP0=1, select bank1
  9563  1532  1303               	bcf	3,6	;RP1=0, select bank1
  9564  1533  00D8               	movwf	(___fltol@f1+1)^(0+128)
  9565  1534  1283               	bcf	3,5	;RP0=0, select bank0
  9566  1535  1303               	bcf	3,6	;RP1=0, select bank0
  9567  1536  0852               	movf	?___fldiv,w
  9568  1537  1683               	bsf	3,5	;RP0=1, select bank1
  9569  1538  1303               	bcf	3,6	;RP1=0, select bank1
  9570  1539  00D7               	movwf	___fltol@f1^(0+128)
  9571  153A  120A  158A  2121  160A  118A  	fcall	___fltol
  9572  153F  1683               	bsf	3,5	;RP0=1, select bank1
  9573  1540  1303               	bcf	3,6	;RP1=0, select bank1
  9574  1541  0857               	movf	?___fltol^(0+128),w
  9575  1542  00FF               	movwf	btemp+1
  9576  1543  085B               	movf	LM_Read@pu8_temperature^(0+128),w
  9577  1544  0084               	movwf	4
  9578  1545  087F               	movf	btemp+1,w
  9579  1546  1783               	bsf	3,7	;select IRP bank2
  9580  1547  0080               	movwf	0
  9581  1548                     l240:
  9582  1548  0008               	return
  9583  1549                     __end_of_LM_Read:
  9584                           
  9585                           	psect	text48
  9586  0A76                     __ptext48:	
  9587 ;; *************** function ___xxtofl *****************
  9588 ;; Defined at:
  9589 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  sign            1    wreg     unsigned char 
  9592 ;;  val             4   10[BANK0 ] long 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  sign            1   18[BANK0 ] unsigned char 
  9595 ;;  arg             4   20[BANK0 ] unsigned long 
  9596 ;;  exp             1   19[BANK0 ] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  4   10[BANK0 ] unsigned char 
  9599 ;; Registers used:
  9600 ;;		wreg, status,2, status,0, btemp+1
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9606 ;;      Params:         0       4       0       0       0
  9607 ;;      Locals:         0       6       0       0       0
  9608 ;;      Temps:          0       4       0       0       0
  9609 ;;      Totals:         0      14       0       0       0
  9610 ;;Total ram usage:       14 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    3
  9613 ;; This function calls:
  9614 ;;		Nothing
  9615 ;; This function is called by:
  9616 ;;		_LM_Read
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           
  9621                           ;psect for function ___xxtofl
  9622  0A76                     ___xxtofl:
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  9626                           ;___xxtofl@sign stored from wreg
  9627  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  9628  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  9629  0A78  00B2               	movwf	___xxtofl@sign
  9630  0A79                     l7766:
  9631  0A79  0832               	movf	___xxtofl@sign,w
  9632  0A7A  1903               	btfsc	3,2
  9633  0A7B  2A7D               	goto	u5661
  9634  0A7C  2A7E               	goto	u5660
  9635  0A7D                     u5661:
  9636  0A7D  2A92               	goto	l7772
  9637  0A7E                     u5660:
  9638  0A7E                     l7768:
  9639  0A7E  1FAD               	btfss	___xxtofl@val+3,7
  9640  0A7F  2A81               	goto	u5671
  9641  0A80  2A82               	goto	u5670
  9642  0A81                     u5671:
  9643  0A81  2A92               	goto	l7772
  9644  0A82                     u5670:
  9645  0A82                     l7770:
  9646  0A82  092A               	comf	___xxtofl@val,w
  9647  0A83  00B4               	movwf	___xxtofl@arg
  9648  0A84  092B               	comf	___xxtofl@val+1,w
  9649  0A85  00B5               	movwf	___xxtofl@arg+1
  9650  0A86  092C               	comf	___xxtofl@val+2,w
  9651  0A87  00B6               	movwf	___xxtofl@arg+2
  9652  0A88  092D               	comf	___xxtofl@val+3,w
  9653  0A89  00B7               	movwf	___xxtofl@arg+3
  9654  0A8A  0AB4               	incf	___xxtofl@arg,f
  9655  0A8B  1903               	skipnz
  9656  0A8C  0AB5               	incf	___xxtofl@arg+1,f
  9657  0A8D  1903               	skipnz
  9658  0A8E  0AB6               	incf	___xxtofl@arg+2,f
  9659  0A8F  1903               	skipnz
  9660  0A90  0AB7               	incf	___xxtofl@arg+3,f
  9661  0A91  2A9A               	goto	l1395
  9662  0A92                     l7772:
  9663  0A92  082D               	movf	___xxtofl@val+3,w
  9664  0A93  00B7               	movwf	___xxtofl@arg+3
  9665  0A94  082C               	movf	___xxtofl@val+2,w
  9666  0A95  00B6               	movwf	___xxtofl@arg+2
  9667  0A96  082B               	movf	___xxtofl@val+1,w
  9668  0A97  00B5               	movwf	___xxtofl@arg+1
  9669  0A98  082A               	movf	___xxtofl@val,w
  9670  0A99  00B4               	movwf	___xxtofl@arg
  9671  0A9A                     l1395:
  9672  0A9A  082D               	movf	___xxtofl@val+3,w
  9673  0A9B  042C               	iorwf	___xxtofl@val+2,w
  9674  0A9C  042B               	iorwf	___xxtofl@val+1,w
  9675  0A9D  042A               	iorwf	___xxtofl@val,w
  9676  0A9E  1D03               	skipz
  9677  0A9F  2AA1               	goto	u5681
  9678  0AA0  2AA2               	goto	u5680
  9679  0AA1                     u5681:
  9680  0AA1  2AAB               	goto	l7778
  9681  0AA2                     u5680:
  9682  0AA2                     l7774:
  9683  0AA2  3000               	movlw	0
  9684  0AA3  00AD               	movwf	?___xxtofl+3
  9685  0AA4  3000               	movlw	0
  9686  0AA5  00AC               	movwf	?___xxtofl+2
  9687  0AA6  3000               	movlw	0
  9688  0AA7  00AB               	movwf	?___xxtofl+1
  9689  0AA8  3000               	movlw	0
  9690  0AA9  00AA               	movwf	?___xxtofl
  9691  0AAA  2B31               	goto	l1397
  9692  0AAB                     l7778:
  9693  0AAB  3096               	movlw	150
  9694  0AAC  00FF               	movwf	btemp+1
  9695  0AAD  087F               	movf	btemp+1,w
  9696  0AAE  00B3               	movwf	___xxtofl@exp
  9697  0AAF  2ABD               	goto	l7784
  9698  0AB0                     l7780:
  9699  0AB0  3001               	movlw	1
  9700  0AB1  00FF               	movwf	btemp+1
  9701  0AB2  087F               	movf	btemp+1,w
  9702  0AB3  07B3               	addwf	___xxtofl@exp,f
  9703  0AB4                     l7782:
  9704  0AB4  3001               	movlw	1
  9705  0AB5                     u5695:
  9706  0AB5  1003               	clrc
  9707  0AB6  0CB7               	rrf	___xxtofl@arg+3,f
  9708  0AB7  0CB6               	rrf	___xxtofl@arg+2,f
  9709  0AB8  0CB5               	rrf	___xxtofl@arg+1,f
  9710  0AB9  0CB4               	rrf	___xxtofl@arg,f
  9711  0ABA  3EFF               	addlw	-1
  9712  0ABB  1D03               	skipz
  9713  0ABC  2AB5               	goto	u5695
  9714  0ABD                     l7784:
  9715  0ABD  30FE               	movlw	254
  9716  0ABE  0537               	andwf	___xxtofl@arg+3,w
  9717  0ABF  1D03               	btfss	3,2
  9718  0AC0  2AC2               	goto	u5701
  9719  0AC1  2AC3               	goto	u5700
  9720  0AC2                     u5701:
  9721  0AC2  2AB0               	goto	l7780
  9722  0AC3                     u5700:
  9723  0AC3  2ADF               	goto	l7792
  9724  0AC4                     l7786:
  9725  0AC4  3001               	movlw	1
  9726  0AC5  00FF               	movwf	btemp+1
  9727  0AC6  087F               	movf	btemp+1,w
  9728  0AC7  07B3               	addwf	___xxtofl@exp,f
  9729  0AC8                     l7788:
  9730  0AC8  3001               	movlw	1
  9731  0AC9  07B4               	addwf	___xxtofl@arg,f
  9732  0ACA  3000               	movlw	0
  9733  0ACB  1803               	skipnc
  9734  0ACC  3001               	movlw	1
  9735  0ACD  07B5               	addwf	___xxtofl@arg+1,f
  9736  0ACE  3000               	movlw	0
  9737  0ACF  1803               	skipnc
  9738  0AD0  3001               	movlw	1
  9739  0AD1  07B6               	addwf	___xxtofl@arg+2,f
  9740  0AD2  3000               	movlw	0
  9741  0AD3  1803               	skipnc
  9742  0AD4  3001               	movlw	1
  9743  0AD5  07B7               	addwf	___xxtofl@arg+3,f
  9744  0AD6                     l7790:
  9745  0AD6  3001               	movlw	1
  9746  0AD7                     u5715:
  9747  0AD7  1003               	clrc
  9748  0AD8  0CB7               	rrf	___xxtofl@arg+3,f
  9749  0AD9  0CB6               	rrf	___xxtofl@arg+2,f
  9750  0ADA  0CB5               	rrf	___xxtofl@arg+1,f
  9751  0ADB  0CB4               	rrf	___xxtofl@arg,f
  9752  0ADC  3EFF               	addlw	-1
  9753  0ADD  1D03               	skipz
  9754  0ADE  2AD7               	goto	u5715
  9755  0ADF                     l7792:
  9756  0ADF  30FF               	movlw	255
  9757  0AE0  0537               	andwf	___xxtofl@arg+3,w
  9758  0AE1  1D03               	btfss	3,2
  9759  0AE2  2AE4               	goto	u5721
  9760  0AE3  2AE5               	goto	u5720
  9761  0AE4                     u5721:
  9762  0AE4  2AC4               	goto	l7786
  9763  0AE5                     u5720:
  9764  0AE5  2AF1               	goto	l7796
  9765  0AE6                     l7794:
  9766  0AE6  3001               	movlw	1
  9767  0AE7  02B3               	subwf	___xxtofl@exp,f
  9768  0AE8  3001               	movlw	1
  9769  0AE9  00AE               	movwf	??___xxtofl
  9770  0AEA                     u5735:
  9771  0AEA  1003               	clrc
  9772  0AEB  0DB4               	rlf	___xxtofl@arg,f
  9773  0AEC  0DB5               	rlf	___xxtofl@arg+1,f
  9774  0AED  0DB6               	rlf	___xxtofl@arg+2,f
  9775  0AEE  0DB7               	rlf	___xxtofl@arg+3,f
  9776  0AEF  0BAE               	decfsz	??___xxtofl,f
  9777  0AF0  2AEA               	goto	u5735
  9778  0AF1                     l7796:
  9779  0AF1  1BB6               	btfsc	___xxtofl@arg+2,7
  9780  0AF2  2AF4               	goto	u5741
  9781  0AF3  2AF5               	goto	u5740
  9782  0AF4                     u5741:
  9783  0AF4  2AFB               	goto	l1408
  9784  0AF5                     u5740:
  9785  0AF5                     l7798:
  9786  0AF5  3002               	movlw	2
  9787  0AF6  0233               	subwf	___xxtofl@exp,w
  9788  0AF7  1803               	skipnc
  9789  0AF8  2AFA               	goto	u5751
  9790  0AF9  2AFB               	goto	u5750
  9791  0AFA                     u5751:
  9792  0AFA  2AE6               	goto	l7794
  9793  0AFB                     u5750:
  9794  0AFB                     l1408:
  9795  0AFB  1833               	btfsc	___xxtofl@exp,0
  9796  0AFC  2AFE               	goto	u5761
  9797  0AFD  2AFF               	goto	u5760
  9798  0AFE                     u5761:
  9799  0AFE  2B07               	goto	l1409
  9800  0AFF                     u5760:
  9801  0AFF                     l7800:
  9802  0AFF  30FF               	movlw	255
  9803  0B00  05B4               	andwf	___xxtofl@arg,f
  9804  0B01  30FF               	movlw	255
  9805  0B02  05B5               	andwf	___xxtofl@arg+1,f
  9806  0B03  307F               	movlw	127
  9807  0B04  05B6               	andwf	___xxtofl@arg+2,f
  9808  0B05  30FF               	movlw	255
  9809  0B06  05B7               	andwf	___xxtofl@arg+3,f
  9810  0B07                     l1409:
  9811  0B07  1003               	clrc
  9812  0B08  0CB3               	rrf	___xxtofl@exp,f
  9813  0B09                     l7802:
  9814  0B09  0833               	movf	___xxtofl@exp,w
  9815  0B0A  00AE               	movwf	??___xxtofl
  9816  0B0B  01AF               	clrf	??___xxtofl+1
  9817  0B0C  01B0               	clrf	??___xxtofl+2
  9818  0B0D  01B1               	clrf	??___xxtofl+3
  9819  0B0E  3018               	movlw	24
  9820  0B0F                     u5775:
  9821  0B0F  1003               	clrc
  9822  0B10  0DAE               	rlf	??___xxtofl,f
  9823  0B11  0DAF               	rlf	??___xxtofl+1,f
  9824  0B12  0DB0               	rlf	??___xxtofl+2,f
  9825  0B13  0DB1               	rlf	??___xxtofl+3,f
  9826  0B14                     u5770:
  9827  0B14  3EFF               	addlw	-1
  9828  0B15  1D03               	skipz
  9829  0B16  2B0F               	goto	u5775
  9830  0B17  082E               	movf	??___xxtofl,w
  9831  0B18  04B4               	iorwf	___xxtofl@arg,f
  9832  0B19  082F               	movf	??___xxtofl+1,w
  9833  0B1A  04B5               	iorwf	___xxtofl@arg+1,f
  9834  0B1B  0830               	movf	??___xxtofl+2,w
  9835  0B1C  04B6               	iorwf	___xxtofl@arg+2,f
  9836  0B1D  0831               	movf	??___xxtofl+3,w
  9837  0B1E  04B7               	iorwf	___xxtofl@arg+3,f
  9838  0B1F                     l7804:
  9839  0B1F  0832               	movf	___xxtofl@sign,w
  9840  0B20  1903               	btfsc	3,2
  9841  0B21  2B23               	goto	u5781
  9842  0B22  2B24               	goto	u5780
  9843  0B23                     u5781:
  9844  0B23  2B29               	goto	l7810
  9845  0B24                     u5780:
  9846  0B24                     l7806:
  9847  0B24  1FAD               	btfss	___xxtofl@val+3,7
  9848  0B25  2B27               	goto	u5791
  9849  0B26  2B28               	goto	u5790
  9850  0B27                     u5791:
  9851  0B27  2B29               	goto	l7810
  9852  0B28                     u5790:
  9853  0B28                     l7808:
  9854  0B28  17B7               	bsf	___xxtofl@arg+3,7
  9855  0B29                     l7810:
  9856  0B29  0837               	movf	___xxtofl@arg+3,w
  9857  0B2A  00AD               	movwf	?___xxtofl+3
  9858  0B2B  0836               	movf	___xxtofl@arg+2,w
  9859  0B2C  00AC               	movwf	?___xxtofl+2
  9860  0B2D  0835               	movf	___xxtofl@arg+1,w
  9861  0B2E  00AB               	movwf	?___xxtofl+1
  9862  0B2F  0834               	movf	___xxtofl@arg,w
  9863  0B30  00AA               	movwf	?___xxtofl
  9864  0B31                     l1397:
  9865  0B31  0008               	return
  9866  0B32                     __end_of___xxtofl:
  9867                           
  9868                           	psect	text49
  9869  0921                     __ptext49:	
  9870 ;; *************** function ___fltol *****************
  9871 ;; Defined at:
  9872 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  f1              4   18[BANK1 ] unsigned char 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  exp1            1   59[BANK0 ] unsigned char 
  9877 ;;  sign1           1   58[BANK0 ] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  4   18[BANK1 ] long 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0, btemp+1
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9887 ;;      Params:         0       0       4       0       0
  9888 ;;      Locals:         0       2       0       0       0
  9889 ;;      Temps:          0       0       0       4       0
  9890 ;;      Totals:         0       2       4       4       0
  9891 ;;Total ram usage:       10 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    3
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_LM_Read
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           
  9902                           ;psect for function ___fltol
  9903  0921                     ___fltol:
  9904  0921                     l7390:	
  9905                           ;incstack = 0
  9906                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  9907                           
  9908  0921  1003               	clrc
  9909  0922  1683               	bsf	3,5	;RP0=1, select bank1
  9910  0923  1303               	bcf	3,6	;RP1=0, select bank1
  9911  0924  0D59               	rlf	(___fltol@f1+2)^(0+128),w
  9912  0925  0D5A               	rlf	(___fltol@f1+3)^(0+128),w
  9913  0926  00FF               	movwf	btemp+1
  9914  0927  087F               	movf	btemp+1,w
  9915  0928  1283               	bcf	3,5	;RP0=0, select bank0
  9916  0929  1303               	bcf	3,6	;RP1=0, select bank0
  9917  092A  00DB               	movwf	___fltol@exp1
  9918  092B  085B               	movf	___fltol@exp1,w
  9919  092C  1D03               	btfss	3,2
  9920  092D  292F               	goto	u4781
  9921  092E  2930               	goto	u4780
  9922  092F                     u4781:
  9923  092F  293B               	goto	l7396
  9924  0930                     u4780:
  9925  0930                     l7392:
  9926  0930  3000               	movlw	0
  9927  0931  1683               	bsf	3,5	;RP0=1, select bank1
  9928  0932  1303               	bcf	3,6	;RP1=0, select bank1
  9929  0933  00DA               	movwf	(?___fltol+3)^(0+128)
  9930  0934  3000               	movlw	0
  9931  0935  00D9               	movwf	(?___fltol+2)^(0+128)
  9932  0936  3000               	movlw	0
  9933  0937  00D8               	movwf	(?___fltol+1)^(0+128)
  9934  0938  3000               	movlw	0
  9935  0939  00D7               	movwf	?___fltol^(0+128)
  9936  093A  29C4               	goto	l1148
  9937  093B                     l7396:
  9938  093B  1683               	bsf	3,5	;RP0=1, select bank1
  9939  093C  1303               	bcf	3,6	;RP1=0, select bank1
  9940  093D  0857               	movf	___fltol@f1^(0+128),w
  9941  093E  1683               	bsf	3,5	;RP0=1, select bank3
  9942  093F  1703               	bsf	3,6	;RP1=1, select bank3
  9943  0940  00DA               	movwf	??___fltol^(0+384)
  9944  0941  1683               	bsf	3,5	;RP0=1, select bank1
  9945  0942  1303               	bcf	3,6	;RP1=0, select bank1
  9946  0943  0858               	movf	(___fltol@f1+1)^(0+128),w
  9947  0944  1683               	bsf	3,5	;RP0=1, select bank3
  9948  0945  1703               	bsf	3,6	;RP1=1, select bank3
  9949  0946  00DB               	movwf	(??___fltol^(0+384)+1)
  9950  0947  1683               	bsf	3,5	;RP0=1, select bank1
  9951  0948  1303               	bcf	3,6	;RP1=0, select bank1
  9952  0949  0859               	movf	(___fltol@f1+2)^(0+128),w
  9953  094A  1683               	bsf	3,5	;RP0=1, select bank3
  9954  094B  1703               	bsf	3,6	;RP1=1, select bank3
  9955  094C  00DC               	movwf	(??___fltol^(0+384)+2)
  9956  094D  1683               	bsf	3,5	;RP0=1, select bank1
  9957  094E  1303               	bcf	3,6	;RP1=0, select bank1
  9958  094F  085A               	movf	(___fltol@f1+3)^(0+128),w
  9959  0950  1683               	bsf	3,5	;RP0=1, select bank3
  9960  0951  1703               	bsf	3,6	;RP1=1, select bank3
  9961  0952  00DD               	movwf	(??___fltol^(0+384)+3)
  9962  0953  301F               	movlw	31
  9963  0954                     u4795:
  9964  0954  1003               	clrc
  9965  0955  0CDD               	rrf	(??___fltol^(0+384)+3),f
  9966  0956  0CDC               	rrf	(??___fltol^(0+384)+2),f
  9967  0957  0CDB               	rrf	(??___fltol^(0+384)+1),f
  9968  0958  0CDA               	rrf	??___fltol^(0+384),f
  9969  0959                     u4790:
  9970  0959  3EFF               	addlw	-1
  9971  095A  1D03               	skipz
  9972  095B  2954               	goto	u4795
  9973  095C  085A               	movf	??___fltol^(0+384),w
  9974  095D  00FF               	movwf	btemp+1
  9975  095E  087F               	movf	btemp+1,w
  9976  095F  1283               	bcf	3,5	;RP0=0, select bank0
  9977  0960  1303               	bcf	3,6	;RP1=0, select bank0
  9978  0961  00DA               	movwf	___fltol@sign1
  9979  0962                     l7398:
  9980  0962  1683               	bsf	3,5	;RP0=1, select bank1
  9981  0963  1303               	bcf	3,6	;RP1=0, select bank1
  9982  0964  17D9               	bsf	(___fltol@f1^(0+128)+2),7
  9983  0965                     l7400:
  9984  0965  30FF               	movlw	255
  9985  0966  05D7               	andwf	___fltol@f1^(0+128),f
  9986  0967  30FF               	movlw	255
  9987  0968  05D8               	andwf	(___fltol@f1+1)^(0+128),f
  9988  0969  30FF               	movlw	255
  9989  096A  05D9               	andwf	(___fltol@f1+2)^(0+128),f
  9990  096B  3000               	movlw	0
  9991  096C  05DA               	andwf	(___fltol@f1+3)^(0+128),f
  9992  096D                     l7402:
  9993  096D  3096               	movlw	150
  9994  096E  1283               	bcf	3,5	;RP0=0, select bank0
  9995  096F  1303               	bcf	3,6	;RP1=0, select bank0
  9996  0970  02DB               	subwf	___fltol@exp1,f
  9997  0971                     l7404:
  9998  0971  1FDB               	btfss	___fltol@exp1,7
  9999  0972  2974               	goto	u4801
 10000  0973  2975               	goto	u4800
 10001  0974                     u4801:
 10002  0974  2993               	goto	l7416
 10003  0975                     u4800:
 10004  0975                     l7406:
 10005  0975  085B               	movf	___fltol@exp1,w
 10006  0976  3A80               	xorlw	128
 10007  0977  3E97               	addlw	151
 10008  0978  1803               	skipnc
 10009  0979  297B               	goto	u4811
 10010  097A  297C               	goto	u4810
 10011  097B                     u4811:
 10012  097B  297D               	goto	l7412
 10013  097C                     u4810:
 10014  097C  2930               	goto	l7392
 10015  097D                     l7412:
 10016  097D  3001               	movlw	1
 10017  097E                     u4825:
 10018  097E  1003               	clrc
 10019  097F  1683               	bsf	3,5	;RP0=1, select bank1
 10020  0980  1303               	bcf	3,6	;RP1=0, select bank1
 10021  0981  0CDA               	rrf	(___fltol@f1+3)^(0+128),f
 10022  0982  0CD9               	rrf	(___fltol@f1+2)^(0+128),f
 10023  0983  0CD8               	rrf	(___fltol@f1+1)^(0+128),f
 10024  0984  0CD7               	rrf	___fltol@f1^(0+128),f
 10025  0985  3EFF               	addlw	-1
 10026  0986  1D03               	skipz
 10027  0987  297E               	goto	u4825
 10028  0988                     l7414:
 10029  0988  3001               	movlw	1
 10030  0989  00FF               	movwf	btemp+1
 10031  098A  087F               	movf	btemp+1,w
 10032  098B  1283               	bcf	3,5	;RP0=0, select bank0
 10033  098C  1303               	bcf	3,6	;RP1=0, select bank0
 10034  098D  07DB               	addwf	___fltol@exp1,f
 10035  098E  1D03               	btfss	3,2
 10036  098F  2991               	goto	u4831
 10037  0990  2992               	goto	u4830
 10038  0991                     u4831:
 10039  0991  297D               	goto	l7412
 10040  0992                     u4830:
 10041  0992  29B2               	goto	l7424
 10042  0993                     l7416:
 10043  0993  3020               	movlw	32
 10044  0994  025B               	subwf	___fltol@exp1,w
 10045  0995  1C03               	skipc
 10046  0996  2998               	goto	u4841
 10047  0997  2999               	goto	u4840
 10048  0998                     u4841:
 10049  0998  29AD               	goto	l1155
 10050  0999                     u4840:
 10051  0999  2930               	goto	l7392
 10052  099A                     l7422:
 10053  099A  3001               	movlw	1
 10054  099B  1683               	bsf	3,5	;RP0=1, select bank3
 10055  099C  1703               	bsf	3,6	;RP1=1, select bank3
 10056  099D  00DA               	movwf	??___fltol^(0+384)
 10057  099E                     u4855:
 10058  099E  1003               	clrc
 10059  099F  1683               	bsf	3,5	;RP0=1, select bank1
 10060  09A0  1303               	bcf	3,6	;RP1=0, select bank1
 10061  09A1  0DD7               	rlf	___fltol@f1^(0+128),f
 10062  09A2  0DD8               	rlf	(___fltol@f1+1)^(0+128),f
 10063  09A3  0DD9               	rlf	(___fltol@f1+2)^(0+128),f
 10064  09A4  0DDA               	rlf	(___fltol@f1+3)^(0+128),f
 10065  09A5  1683               	bsf	3,5	;RP0=1, select bank3
 10066  09A6  1703               	bsf	3,6	;RP1=1, select bank3
 10067  09A7  0BDA               	decfsz	??___fltol^(0+384),f
 10068  09A8  299E               	goto	u4855
 10069  09A9  3001               	movlw	1
 10070  09AA  1283               	bcf	3,5	;RP0=0, select bank0
 10071  09AB  1303               	bcf	3,6	;RP1=0, select bank0
 10072  09AC  02DB               	subwf	___fltol@exp1,f
 10073  09AD                     l1155:
 10074  09AD  085B               	movf	___fltol@exp1,w
 10075  09AE  1D03               	btfss	3,2
 10076  09AF  29B1               	goto	u4861
 10077  09B0  29B2               	goto	u4860
 10078  09B1                     u4861:
 10079  09B1  299A               	goto	l7422
 10080  09B2                     u4860:
 10081  09B2                     l7424:
 10082  09B2  085A               	movf	___fltol@sign1,w
 10083  09B3  1903               	btfsc	3,2
 10084  09B4  29B6               	goto	u4871
 10085  09B5  29B7               	goto	u4870
 10086  09B6                     u4871:
 10087  09B6  29C4               	goto	l1158
 10088  09B7                     u4870:
 10089  09B7                     l7426:
 10090  09B7  1683               	bsf	3,5	;RP0=1, select bank1
 10091  09B8  1303               	bcf	3,6	;RP1=0, select bank1
 10092  09B9  09D7               	comf	___fltol@f1^(0+128),f
 10093  09BA  09D8               	comf	(___fltol@f1+1)^(0+128),f
 10094  09BB  09D9               	comf	(___fltol@f1+2)^(0+128),f
 10095  09BC  09DA               	comf	(___fltol@f1+3)^(0+128),f
 10096  09BD  0AD7               	incf	___fltol@f1^(0+128),f
 10097  09BE  1903               	skipnz
 10098  09BF  0AD8               	incf	(___fltol@f1+1)^(0+128),f
 10099  09C0  1903               	skipnz
 10100  09C1  0AD9               	incf	(___fltol@f1+2)^(0+128),f
 10101  09C2  1903               	skipnz
 10102  09C3  0ADA               	incf	(___fltol@f1+3)^(0+128),f
 10103  09C4                     l1158:
 10104  09C4                     l1148:
 10105  09C4  0008               	return
 10106  09C5                     __end_of___fltol:
 10107                           
 10108                           	psect	text50
 10109  0073                     __ptext50:	
 10110 ;; *************** function ___flmul *****************
 10111 ;; Defined at:
 10112 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  b               4   24[BANK0 ] long 
 10115 ;;  a               4   28[BANK0 ] long 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  prod            4   44[BANK0 ] struct .
 10118 ;;  grs             4   39[BANK0 ] unsigned long 
 10119 ;;  temp            2   48[BANK0 ] struct .
 10120 ;;  bexp            1   43[BANK0 ] unsigned char 
 10121 ;;  aexp            1   38[BANK0 ] unsigned char 
 10122 ;;  sign            1   37[BANK0 ] unsigned char 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  4   24[BANK0 ] unsigned char 
 10125 ;; Registers used:
 10126 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10132 ;;      Params:         0       8       0       0       0
 10133 ;;      Locals:         0      13       0       0       0
 10134 ;;      Temps:          0       5       0       0       0
 10135 ;;      Totals:         0      26       0       0       0
 10136 ;;Total ram usage:       26 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    4
 10139 ;; This function calls:
 10140 ;;		__Umul8_16
 10141 ;; This function is called by:
 10142 ;;		_LM_Read
 10143 ;; This function uses a non-reentrant model
 10144 ;;
 10145                           
 10146                           
 10147                           ;psect for function ___flmul
 10148  0073                     ___flmul:
 10149  0073                     l7624:	
 10150                           ;incstack = 0
 10151                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10152                           
 10153  0073  1283               	bcf	3,5	;RP0=0, select bank0
 10154  0074  1303               	bcf	3,6	;RP1=0, select bank0
 10155  0075  083B               	movf	___flmul@b+3,w
 10156  0076  3980               	andlw	128
 10157  0077  00FF               	movwf	btemp+1
 10158  0078  087F               	movf	btemp+1,w
 10159  0079  00C5               	movwf	___flmul@sign
 10160  007A                     l7626:
 10161  007A  083B               	movf	___flmul@b+3,w
 10162  007B  00C0               	movwf	??___flmul
 10163  007C  0740               	addwf	??___flmul,w
 10164  007D  00FF               	movwf	btemp+1
 10165  007E  087F               	movf	btemp+1,w
 10166  007F  00CB               	movwf	___flmul@bexp
 10167  0080                     l7628:
 10168  0080  1FBA               	btfss	___flmul@b+2,7
 10169  0081  2883               	goto	u5291
 10170  0082  2884               	goto	u5290
 10171  0083                     u5291:
 10172  0083  2885               	goto	l7632
 10173  0084                     u5290:
 10174  0084                     l7630:
 10175  0084  144B               	bsf	___flmul@bexp,0
 10176  0085                     l7632:
 10177  0085  084B               	movf	___flmul@bexp,w
 10178  0086  1903               	btfsc	3,2
 10179  0087  2889               	goto	u5301
 10180  0088  288A               	goto	u5300
 10181  0089                     u5301:
 10182  0089  2899               	goto	l7640
 10183  008A                     u5300:
 10184  008A                     l7634:
 10185  008A  0A4B               	incf	___flmul@bexp,w
 10186  008B  1D03               	btfss	3,2
 10187  008C  288E               	goto	u5311
 10188  008D  288F               	goto	u5310
 10189  008E                     u5311:
 10190  008E  2897               	goto	l7638
 10191  008F                     u5310:
 10192  008F                     l7636:
 10193  008F  3000               	movlw	0
 10194  0090  00BB               	movwf	___flmul@b+3
 10195  0091  3000               	movlw	0
 10196  0092  00BA               	movwf	___flmul@b+2
 10197  0093  3000               	movlw	0
 10198  0094  00B9               	movwf	___flmul@b+1
 10199  0095  3000               	movlw	0
 10200  0096  00B8               	movwf	___flmul@b
 10201  0097                     l7638:
 10202  0097  17BA               	bsf	___flmul@b+2,7
 10203  0098  28A1               	goto	l7642
 10204  0099                     l7640:
 10205  0099  3000               	movlw	0
 10206  009A  00BB               	movwf	___flmul@b+3
 10207  009B  3000               	movlw	0
 10208  009C  00BA               	movwf	___flmul@b+2
 10209  009D  3000               	movlw	0
 10210  009E  00B9               	movwf	___flmul@b+1
 10211  009F  3000               	movlw	0
 10212  00A0  00B8               	movwf	___flmul@b
 10213  00A1                     l7642:
 10214  00A1  083F               	movf	___flmul@a+3,w
 10215  00A2  3980               	andlw	128
 10216  00A3  00FF               	movwf	btemp+1
 10217  00A4  087F               	movf	btemp+1,w
 10218  00A5  06C5               	xorwf	___flmul@sign,f
 10219  00A6                     l7644:
 10220  00A6  083F               	movf	___flmul@a+3,w
 10221  00A7  00C0               	movwf	??___flmul
 10222  00A8  0740               	addwf	??___flmul,w
 10223  00A9  00FF               	movwf	btemp+1
 10224  00AA  087F               	movf	btemp+1,w
 10225  00AB  00C6               	movwf	___flmul@aexp
 10226  00AC                     l7646:
 10227  00AC  1FBE               	btfss	___flmul@a+2,7
 10228  00AD  28AF               	goto	u5321
 10229  00AE  28B0               	goto	u5320
 10230  00AF                     u5321:
 10231  00AF  28B1               	goto	l7650
 10232  00B0                     u5320:
 10233  00B0                     l7648:
 10234  00B0  1446               	bsf	___flmul@aexp,0
 10235  00B1                     l7650:
 10236  00B1  0846               	movf	___flmul@aexp,w
 10237  00B2  1903               	btfsc	3,2
 10238  00B3  28B5               	goto	u5331
 10239  00B4  28B6               	goto	u5330
 10240  00B5                     u5331:
 10241  00B5  28C5               	goto	l7658
 10242  00B6                     u5330:
 10243  00B6                     l7652:
 10244  00B6  0A46               	incf	___flmul@aexp,w
 10245  00B7  1D03               	btfss	3,2
 10246  00B8  28BA               	goto	u5341
 10247  00B9  28BB               	goto	u5340
 10248  00BA                     u5341:
 10249  00BA  28C3               	goto	l7656
 10250  00BB                     u5340:
 10251  00BB                     l7654:
 10252  00BB  3000               	movlw	0
 10253  00BC  00BF               	movwf	___flmul@a+3
 10254  00BD  3000               	movlw	0
 10255  00BE  00BE               	movwf	___flmul@a+2
 10256  00BF  3000               	movlw	0
 10257  00C0  00BD               	movwf	___flmul@a+1
 10258  00C1  3000               	movlw	0
 10259  00C2  00BC               	movwf	___flmul@a
 10260  00C3                     l7656:
 10261  00C3  17BE               	bsf	___flmul@a+2,7
 10262  00C4  28CD               	goto	l7660
 10263  00C5                     l7658:
 10264  00C5  3000               	movlw	0
 10265  00C6  00BF               	movwf	___flmul@a+3
 10266  00C7  3000               	movlw	0
 10267  00C8  00BE               	movwf	___flmul@a+2
 10268  00C9  3000               	movlw	0
 10269  00CA  00BD               	movwf	___flmul@a+1
 10270  00CB  3000               	movlw	0
 10271  00CC  00BC               	movwf	___flmul@a
 10272  00CD                     l7660:
 10273  00CD  0846               	movf	___flmul@aexp,w
 10274  00CE  1903               	btfsc	3,2
 10275  00CF  28D1               	goto	u5351
 10276  00D0  28D2               	goto	u5350
 10277  00D1                     u5351:
 10278  00D1  28D7               	goto	l7664
 10279  00D2                     u5350:
 10280  00D2                     l7662:
 10281  00D2  084B               	movf	___flmul@bexp,w
 10282  00D3  1D03               	btfss	3,2
 10283  00D4  28D6               	goto	u5361
 10284  00D5  28D7               	goto	u5360
 10285  00D6                     u5361:
 10286  00D6  28E0               	goto	l7668
 10287  00D7                     u5360:
 10288  00D7                     l7664:
 10289  00D7  3000               	movlw	0
 10290  00D8  00BB               	movwf	?___flmul+3
 10291  00D9  3000               	movlw	0
 10292  00DA  00BA               	movwf	?___flmul+2
 10293  00DB  3000               	movlw	0
 10294  00DC  00B9               	movwf	?___flmul+1
 10295  00DD  3000               	movlw	0
 10296  00DE  00B8               	movwf	?___flmul
 10297  00DF  2BD3               	goto	l1351
 10298  00E0                     l7668:
 10299  00E0  0838               	movf	___flmul@b,w
 10300  00E1  00FF               	movwf	btemp+1
 10301  00E2  087F               	movf	btemp+1,w
 10302  00E3  00AA               	movwf	__Umul8_16@multiplicand
 10303  00E4  083E               	movf	___flmul@a+2,w
 10304  00E5  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10305  00EA  1283               	bcf	3,5	;RP0=0, select bank0
 10306  00EB  1303               	bcf	3,6	;RP1=0, select bank0
 10307  00EC  082B               	movf	?__Umul8_16+1,w
 10308  00ED  00D1               	movwf	___flmul@temp+1
 10309  00EE  082A               	movf	?__Umul8_16,w
 10310  00EF  00D0               	movwf	___flmul@temp
 10311  00F0                     l7670:
 10312  00F0  0850               	movf	___flmul@temp,w
 10313  00F1  00C0               	movwf	??___flmul
 10314  00F2  01C1               	clrf	??___flmul+1
 10315  00F3  01C2               	clrf	??___flmul+2
 10316  00F4  01C3               	clrf	??___flmul+3
 10317  00F5  0843               	movf	??___flmul+3,w
 10318  00F6  00CA               	movwf	___flmul@grs+3
 10319  00F7  0842               	movf	??___flmul+2,w
 10320  00F8  00C9               	movwf	___flmul@grs+2
 10321  00F9  0841               	movf	??___flmul+1,w
 10322  00FA  00C8               	movwf	___flmul@grs+1
 10323  00FB  0840               	movf	??___flmul,w
 10324  00FC  00C7               	movwf	___flmul@grs
 10325  00FD                     l7672:
 10326  00FD  0851               	movf	___flmul@temp+1,w
 10327  00FE  00C0               	movwf	??___flmul
 10328  00FF  01C1               	clrf	??___flmul+1
 10329  0100  01C2               	clrf	??___flmul+2
 10330  0101  01C3               	clrf	??___flmul+3
 10331  0102  0843               	movf	??___flmul+3,w
 10332  0103  00CF               	movwf	___flmul@prod+3
 10333  0104  0842               	movf	??___flmul+2,w
 10334  0105  00CE               	movwf	___flmul@prod+2
 10335  0106  0841               	movf	??___flmul+1,w
 10336  0107  00CD               	movwf	___flmul@prod+1
 10337  0108  0840               	movf	??___flmul,w
 10338  0109  00CC               	movwf	___flmul@prod
 10339  010A  0839               	movf	___flmul@b+1,w
 10340  010B  00FF               	movwf	btemp+1
 10341  010C  087F               	movf	btemp+1,w
 10342  010D  00AA               	movwf	__Umul8_16@multiplicand
 10343  010E  083D               	movf	___flmul@a+1,w
 10344  010F  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10345  0114  1283               	bcf	3,5	;RP0=0, select bank0
 10346  0115  1303               	bcf	3,6	;RP1=0, select bank0
 10347  0116  082B               	movf	?__Umul8_16+1,w
 10348  0117  00D1               	movwf	___flmul@temp+1
 10349  0118  082A               	movf	?__Umul8_16,w
 10350  0119  00D0               	movwf	___flmul@temp
 10351  011A                     l7674:
 10352  011A  0850               	movf	___flmul@temp,w
 10353  011B  00C0               	movwf	??___flmul
 10354  011C  01C1               	clrf	??___flmul+1
 10355  011D  01C2               	clrf	??___flmul+2
 10356  011E  01C3               	clrf	??___flmul+3
 10357  011F  0840               	movf	??___flmul,w
 10358  0120  07C7               	addwf	___flmul@grs,f
 10359  0121  0841               	movf	??___flmul+1,w
 10360  0122  1103               	clrz
 10361  0123  1803               	skipnc
 10362  0124  3E01               	addlw	1
 10363  0125  1903               	skipnz
 10364  0126  2928               	goto	u5371
 10365  0127  07C8               	addwf	___flmul@grs+1,f
 10366  0128                     u5371:
 10367  0128  0842               	movf	??___flmul+2,w
 10368  0129  1103               	clrz
 10369  012A  1803               	skipnc
 10370  012B  3E01               	addlw	1
 10371  012C  1903               	skipnz
 10372  012D  292F               	goto	u5372
 10373  012E  07C9               	addwf	___flmul@grs+2,f
 10374  012F                     u5372:
 10375  012F  0843               	movf	??___flmul+3,w
 10376  0130  1103               	clrz
 10377  0131  1803               	skipnc
 10378  0132  3E01               	addlw	1
 10379  0133  1903               	skipnz
 10380  0134  2936               	goto	u5373
 10381  0135  07CA               	addwf	___flmul@grs+3,f
 10382  0136                     u5373:
 10383  0136                     l7676:
 10384  0136  0851               	movf	___flmul@temp+1,w
 10385  0137  00C0               	movwf	??___flmul
 10386  0138  01C1               	clrf	??___flmul+1
 10387  0139  01C2               	clrf	??___flmul+2
 10388  013A  01C3               	clrf	??___flmul+3
 10389  013B  0840               	movf	??___flmul,w
 10390  013C  07CC               	addwf	___flmul@prod,f
 10391  013D  0841               	movf	??___flmul+1,w
 10392  013E  1103               	clrz
 10393  013F  1803               	skipnc
 10394  0140  3E01               	addlw	1
 10395  0141  1903               	skipnz
 10396  0142  2944               	goto	u5381
 10397  0143  07CD               	addwf	___flmul@prod+1,f
 10398  0144                     u5381:
 10399  0144  0842               	movf	??___flmul+2,w
 10400  0145  1103               	clrz
 10401  0146  1803               	skipnc
 10402  0147  3E01               	addlw	1
 10403  0148  1903               	skipnz
 10404  0149  294B               	goto	u5382
 10405  014A  07CE               	addwf	___flmul@prod+2,f
 10406  014B                     u5382:
 10407  014B  0843               	movf	??___flmul+3,w
 10408  014C  1103               	clrz
 10409  014D  1803               	skipnc
 10410  014E  3E01               	addlw	1
 10411  014F  1903               	skipnz
 10412  0150  2952               	goto	u5383
 10413  0151  07CF               	addwf	___flmul@prod+3,f
 10414  0152                     u5383:
 10415  0152  083A               	movf	___flmul@b+2,w
 10416  0153  00FF               	movwf	btemp+1
 10417  0154  087F               	movf	btemp+1,w
 10418  0155  00AA               	movwf	__Umul8_16@multiplicand
 10419  0156  083C               	movf	___flmul@a,w
 10420  0157  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10421  015C  1283               	bcf	3,5	;RP0=0, select bank0
 10422  015D  1303               	bcf	3,6	;RP1=0, select bank0
 10423  015E  082B               	movf	?__Umul8_16+1,w
 10424  015F  00D1               	movwf	___flmul@temp+1
 10425  0160  082A               	movf	?__Umul8_16,w
 10426  0161  00D0               	movwf	___flmul@temp
 10427  0162                     l7678:
 10428  0162  0850               	movf	___flmul@temp,w
 10429  0163  00C0               	movwf	??___flmul
 10430  0164  01C1               	clrf	??___flmul+1
 10431  0165  01C2               	clrf	??___flmul+2
 10432  0166  01C3               	clrf	??___flmul+3
 10433  0167  0840               	movf	??___flmul,w
 10434  0168  07C7               	addwf	___flmul@grs,f
 10435  0169  0841               	movf	??___flmul+1,w
 10436  016A  1103               	clrz
 10437  016B  1803               	skipnc
 10438  016C  3E01               	addlw	1
 10439  016D  1903               	skipnz
 10440  016E  2970               	goto	u5391
 10441  016F  07C8               	addwf	___flmul@grs+1,f
 10442  0170                     u5391:
 10443  0170  0842               	movf	??___flmul+2,w
 10444  0171  1103               	clrz
 10445  0172  1803               	skipnc
 10446  0173  3E01               	addlw	1
 10447  0174  1903               	skipnz
 10448  0175  2977               	goto	u5392
 10449  0176  07C9               	addwf	___flmul@grs+2,f
 10450  0177                     u5392:
 10451  0177  0843               	movf	??___flmul+3,w
 10452  0178  1103               	clrz
 10453  0179  1803               	skipnc
 10454  017A  3E01               	addlw	1
 10455  017B  1903               	skipnz
 10456  017C  297E               	goto	u5393
 10457  017D  07CA               	addwf	___flmul@grs+3,f
 10458  017E                     u5393:
 10459  017E                     l7680:
 10460  017E  0851               	movf	___flmul@temp+1,w
 10461  017F  00C0               	movwf	??___flmul
 10462  0180  01C1               	clrf	??___flmul+1
 10463  0181  01C2               	clrf	??___flmul+2
 10464  0182  01C3               	clrf	??___flmul+3
 10465  0183  0840               	movf	??___flmul,w
 10466  0184  07CC               	addwf	___flmul@prod,f
 10467  0185  0841               	movf	??___flmul+1,w
 10468  0186  1103               	clrz
 10469  0187  1803               	skipnc
 10470  0188  3E01               	addlw	1
 10471  0189  1903               	skipnz
 10472  018A  298C               	goto	u5401
 10473  018B  07CD               	addwf	___flmul@prod+1,f
 10474  018C                     u5401:
 10475  018C  0842               	movf	??___flmul+2,w
 10476  018D  1103               	clrz
 10477  018E  1803               	skipnc
 10478  018F  3E01               	addlw	1
 10479  0190  1903               	skipnz
 10480  0191  2993               	goto	u5402
 10481  0192  07CE               	addwf	___flmul@prod+2,f
 10482  0193                     u5402:
 10483  0193  0843               	movf	??___flmul+3,w
 10484  0194  1103               	clrz
 10485  0195  1803               	skipnc
 10486  0196  3E01               	addlw	1
 10487  0197  1903               	skipnz
 10488  0198  299A               	goto	u5403
 10489  0199  07CF               	addwf	___flmul@prod+3,f
 10490  019A                     u5403:
 10491  019A                     l7682:
 10492  019A  3008               	movlw	8
 10493  019B  00C0               	movwf	??___flmul
 10494  019C                     u5415:
 10495  019C  1003               	clrc
 10496  019D  0DC7               	rlf	___flmul@grs,f
 10497  019E  0DC8               	rlf	___flmul@grs+1,f
 10498  019F  0DC9               	rlf	___flmul@grs+2,f
 10499  01A0  0DCA               	rlf	___flmul@grs+3,f
 10500  01A1  0BC0               	decfsz	??___flmul,f
 10501  01A2  299C               	goto	u5415
 10502  01A3                     l7684:
 10503  01A3  0839               	movf	___flmul@b+1,w
 10504  01A4  00FF               	movwf	btemp+1
 10505  01A5  087F               	movf	btemp+1,w
 10506  01A6  00AA               	movwf	__Umul8_16@multiplicand
 10507  01A7  083C               	movf	___flmul@a,w
 10508  01A8  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10509  01AD  1283               	bcf	3,5	;RP0=0, select bank0
 10510  01AE  1303               	bcf	3,6	;RP1=0, select bank0
 10511  01AF  082B               	movf	?__Umul8_16+1,w
 10512  01B0  00D1               	movwf	___flmul@temp+1
 10513  01B1  082A               	movf	?__Umul8_16,w
 10514  01B2  00D0               	movwf	___flmul@temp
 10515  01B3                     l7686:
 10516  01B3  0850               	movf	___flmul@temp,w
 10517  01B4  00C0               	movwf	??___flmul
 10518  01B5  0851               	movf	___flmul@temp+1,w
 10519  01B6  00C1               	movwf	??___flmul+1
 10520  01B7  01C2               	clrf	??___flmul+2
 10521  01B8  01C3               	clrf	??___flmul+3
 10522  01B9  0840               	movf	??___flmul,w
 10523  01BA  07C7               	addwf	___flmul@grs,f
 10524  01BB  0841               	movf	??___flmul+1,w
 10525  01BC  1103               	clrz
 10526  01BD  1803               	skipnc
 10527  01BE  3E01               	addlw	1
 10528  01BF  1903               	skipnz
 10529  01C0  29C2               	goto	u5421
 10530  01C1  07C8               	addwf	___flmul@grs+1,f
 10531  01C2                     u5421:
 10532  01C2  0842               	movf	??___flmul+2,w
 10533  01C3  1103               	clrz
 10534  01C4  1803               	skipnc
 10535  01C5  3E01               	addlw	1
 10536  01C6  1903               	skipnz
 10537  01C7  29C9               	goto	u5422
 10538  01C8  07C9               	addwf	___flmul@grs+2,f
 10539  01C9                     u5422:
 10540  01C9  0843               	movf	??___flmul+3,w
 10541  01CA  1103               	clrz
 10542  01CB  1803               	skipnc
 10543  01CC  3E01               	addlw	1
 10544  01CD  1903               	skipnz
 10545  01CE  29D0               	goto	u5423
 10546  01CF  07CA               	addwf	___flmul@grs+3,f
 10547  01D0                     u5423:
 10548  01D0                     l7688:
 10549  01D0  0838               	movf	___flmul@b,w
 10550  01D1  00FF               	movwf	btemp+1
 10551  01D2  087F               	movf	btemp+1,w
 10552  01D3  00AA               	movwf	__Umul8_16@multiplicand
 10553  01D4  083D               	movf	___flmul@a+1,w
 10554  01D5  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10555  01DA  1283               	bcf	3,5	;RP0=0, select bank0
 10556  01DB  1303               	bcf	3,6	;RP1=0, select bank0
 10557  01DC  082B               	movf	?__Umul8_16+1,w
 10558  01DD  00D1               	movwf	___flmul@temp+1
 10559  01DE  082A               	movf	?__Umul8_16,w
 10560  01DF  00D0               	movwf	___flmul@temp
 10561  01E0                     l7690:
 10562  01E0  0850               	movf	___flmul@temp,w
 10563  01E1  00C0               	movwf	??___flmul
 10564  01E2  0851               	movf	___flmul@temp+1,w
 10565  01E3  00C1               	movwf	??___flmul+1
 10566  01E4  01C2               	clrf	??___flmul+2
 10567  01E5  01C3               	clrf	??___flmul+3
 10568  01E6  0840               	movf	??___flmul,w
 10569  01E7  07C7               	addwf	___flmul@grs,f
 10570  01E8  0841               	movf	??___flmul+1,w
 10571  01E9  1103               	clrz
 10572  01EA  1803               	skipnc
 10573  01EB  3E01               	addlw	1
 10574  01EC  1903               	skipnz
 10575  01ED  29EF               	goto	u5431
 10576  01EE  07C8               	addwf	___flmul@grs+1,f
 10577  01EF                     u5431:
 10578  01EF  0842               	movf	??___flmul+2,w
 10579  01F0  1103               	clrz
 10580  01F1  1803               	skipnc
 10581  01F2  3E01               	addlw	1
 10582  01F3  1903               	skipnz
 10583  01F4  29F6               	goto	u5432
 10584  01F5  07C9               	addwf	___flmul@grs+2,f
 10585  01F6                     u5432:
 10586  01F6  0843               	movf	??___flmul+3,w
 10587  01F7  1103               	clrz
 10588  01F8  1803               	skipnc
 10589  01F9  3E01               	addlw	1
 10590  01FA  1903               	skipnz
 10591  01FB  29FD               	goto	u5433
 10592  01FC  07CA               	addwf	___flmul@grs+3,f
 10593  01FD                     u5433:
 10594  01FD                     l7692:
 10595  01FD  3008               	movlw	8
 10596  01FE  00C0               	movwf	??___flmul
 10597  01FF                     u5445:
 10598  01FF  1003               	clrc
 10599  0200  0DC7               	rlf	___flmul@grs,f
 10600  0201  0DC8               	rlf	___flmul@grs+1,f
 10601  0202  0DC9               	rlf	___flmul@grs+2,f
 10602  0203  0DCA               	rlf	___flmul@grs+3,f
 10603  0204  0BC0               	decfsz	??___flmul,f
 10604  0205  29FF               	goto	u5445
 10605  0206  0838               	movf	___flmul@b,w
 10606  0207  00FF               	movwf	btemp+1
 10607  0208  087F               	movf	btemp+1,w
 10608  0209  00AA               	movwf	__Umul8_16@multiplicand
 10609  020A  083C               	movf	___flmul@a,w
 10610  020B  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10611  0210  1283               	bcf	3,5	;RP0=0, select bank0
 10612  0211  1303               	bcf	3,6	;RP1=0, select bank0
 10613  0212  082B               	movf	?__Umul8_16+1,w
 10614  0213  00D1               	movwf	___flmul@temp+1
 10615  0214  082A               	movf	?__Umul8_16,w
 10616  0215  00D0               	movwf	___flmul@temp
 10617  0216                     l7694:
 10618  0216  0850               	movf	___flmul@temp,w
 10619  0217  00C0               	movwf	??___flmul
 10620  0218  0851               	movf	___flmul@temp+1,w
 10621  0219  00C1               	movwf	??___flmul+1
 10622  021A  01C2               	clrf	??___flmul+2
 10623  021B  01C3               	clrf	??___flmul+3
 10624  021C  0840               	movf	??___flmul,w
 10625  021D  07C7               	addwf	___flmul@grs,f
 10626  021E  0841               	movf	??___flmul+1,w
 10627  021F  1103               	clrz
 10628  0220  1803               	skipnc
 10629  0221  3E01               	addlw	1
 10630  0222  1903               	skipnz
 10631  0223  2A25               	goto	u5451
 10632  0224  07C8               	addwf	___flmul@grs+1,f
 10633  0225                     u5451:
 10634  0225  0842               	movf	??___flmul+2,w
 10635  0226  1103               	clrz
 10636  0227  1803               	skipnc
 10637  0228  3E01               	addlw	1
 10638  0229  1903               	skipnz
 10639  022A  2A2C               	goto	u5452
 10640  022B  07C9               	addwf	___flmul@grs+2,f
 10641  022C                     u5452:
 10642  022C  0843               	movf	??___flmul+3,w
 10643  022D  1103               	clrz
 10644  022E  1803               	skipnc
 10645  022F  3E01               	addlw	1
 10646  0230  1903               	skipnz
 10647  0231  2A33               	goto	u5453
 10648  0232  07CA               	addwf	___flmul@grs+3,f
 10649  0233                     u5453:
 10650  0233                     l7696:
 10651  0233  0839               	movf	___flmul@b+1,w
 10652  0234  00FF               	movwf	btemp+1
 10653  0235  087F               	movf	btemp+1,w
 10654  0236  00AA               	movwf	__Umul8_16@multiplicand
 10655  0237  083E               	movf	___flmul@a+2,w
 10656  0238  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10657  023D  1283               	bcf	3,5	;RP0=0, select bank0
 10658  023E  1303               	bcf	3,6	;RP1=0, select bank0
 10659  023F  082B               	movf	?__Umul8_16+1,w
 10660  0240  00D1               	movwf	___flmul@temp+1
 10661  0241  082A               	movf	?__Umul8_16,w
 10662  0242  00D0               	movwf	___flmul@temp
 10663  0243  0850               	movf	___flmul@temp,w
 10664  0244  00C0               	movwf	??___flmul
 10665  0245  0851               	movf	___flmul@temp+1,w
 10666  0246  00C1               	movwf	??___flmul+1
 10667  0247  01C2               	clrf	??___flmul+2
 10668  0248  01C3               	clrf	??___flmul+3
 10669  0249  0840               	movf	??___flmul,w
 10670  024A  07CC               	addwf	___flmul@prod,f
 10671  024B  0841               	movf	??___flmul+1,w
 10672  024C  1103               	clrz
 10673  024D  1803               	skipnc
 10674  024E  3E01               	addlw	1
 10675  024F  1903               	skipnz
 10676  0250  2A52               	goto	u5461
 10677  0251  07CD               	addwf	___flmul@prod+1,f
 10678  0252                     u5461:
 10679  0252  0842               	movf	??___flmul+2,w
 10680  0253  1103               	clrz
 10681  0254  1803               	skipnc
 10682  0255  3E01               	addlw	1
 10683  0256  1903               	skipnz
 10684  0257  2A59               	goto	u5462
 10685  0258  07CE               	addwf	___flmul@prod+2,f
 10686  0259                     u5462:
 10687  0259  0843               	movf	??___flmul+3,w
 10688  025A  1103               	clrz
 10689  025B  1803               	skipnc
 10690  025C  3E01               	addlw	1
 10691  025D  1903               	skipnz
 10692  025E  2A60               	goto	u5463
 10693  025F  07CF               	addwf	___flmul@prod+3,f
 10694  0260                     u5463:
 10695  0260                     l7698:
 10696  0260  083A               	movf	___flmul@b+2,w
 10697  0261  00FF               	movwf	btemp+1
 10698  0262  087F               	movf	btemp+1,w
 10699  0263  00AA               	movwf	__Umul8_16@multiplicand
 10700  0264  083D               	movf	___flmul@a+1,w
 10701  0265  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10702  026A  1283               	bcf	3,5	;RP0=0, select bank0
 10703  026B  1303               	bcf	3,6	;RP1=0, select bank0
 10704  026C  082B               	movf	?__Umul8_16+1,w
 10705  026D  00D1               	movwf	___flmul@temp+1
 10706  026E  082A               	movf	?__Umul8_16,w
 10707  026F  00D0               	movwf	___flmul@temp
 10708  0270                     l7700:
 10709  0270  0850               	movf	___flmul@temp,w
 10710  0271  00C0               	movwf	??___flmul
 10711  0272  0851               	movf	___flmul@temp+1,w
 10712  0273  00C1               	movwf	??___flmul+1
 10713  0274  01C2               	clrf	??___flmul+2
 10714  0275  01C3               	clrf	??___flmul+3
 10715  0276  0840               	movf	??___flmul,w
 10716  0277  07CC               	addwf	___flmul@prod,f
 10717  0278  0841               	movf	??___flmul+1,w
 10718  0279  1103               	clrz
 10719  027A  1803               	skipnc
 10720  027B  3E01               	addlw	1
 10721  027C  1903               	skipnz
 10722  027D  2A7F               	goto	u5471
 10723  027E  07CD               	addwf	___flmul@prod+1,f
 10724  027F                     u5471:
 10725  027F  0842               	movf	??___flmul+2,w
 10726  0280  1103               	clrz
 10727  0281  1803               	skipnc
 10728  0282  3E01               	addlw	1
 10729  0283  1903               	skipnz
 10730  0284  2A86               	goto	u5472
 10731  0285  07CE               	addwf	___flmul@prod+2,f
 10732  0286                     u5472:
 10733  0286  0843               	movf	??___flmul+3,w
 10734  0287  1103               	clrz
 10735  0288  1803               	skipnc
 10736  0289  3E01               	addlw	1
 10737  028A  1903               	skipnz
 10738  028B  2A8D               	goto	u5473
 10739  028C  07CF               	addwf	___flmul@prod+3,f
 10740  028D                     u5473:
 10741  028D  083A               	movf	___flmul@b+2,w
 10742  028E  00FF               	movwf	btemp+1
 10743  028F  087F               	movf	btemp+1,w
 10744  0290  00AA               	movwf	__Umul8_16@multiplicand
 10745  0291  083E               	movf	___flmul@a+2,w
 10746  0292  160A  158A  253F  120A  118A  	fcall	__Umul8_16
 10747  0297  1283               	bcf	3,5	;RP0=0, select bank0
 10748  0298  1303               	bcf	3,6	;RP1=0, select bank0
 10749  0299  082B               	movf	?__Umul8_16+1,w
 10750  029A  00D1               	movwf	___flmul@temp+1
 10751  029B  082A               	movf	?__Umul8_16,w
 10752  029C  00D0               	movwf	___flmul@temp
 10753  029D                     l7702:
 10754  029D  0850               	movf	___flmul@temp,w
 10755  029E  00C0               	movwf	??___flmul
 10756  029F  0851               	movf	___flmul@temp+1,w
 10757  02A0  00C1               	movwf	??___flmul+1
 10758  02A1  01C2               	clrf	??___flmul+2
 10759  02A2  01C3               	clrf	??___flmul+3
 10760  02A3  3008               	movlw	8
 10761  02A4                     u5485:
 10762  02A4  1003               	clrc
 10763  02A5  0DC0               	rlf	??___flmul,f
 10764  02A6  0DC1               	rlf	??___flmul+1,f
 10765  02A7  0DC2               	rlf	??___flmul+2,f
 10766  02A8  0DC3               	rlf	??___flmul+3,f
 10767  02A9                     u5480:
 10768  02A9  3EFF               	addlw	-1
 10769  02AA  1D03               	skipz
 10770  02AB  2AA4               	goto	u5485
 10771  02AC  0840               	movf	??___flmul,w
 10772  02AD  07CC               	addwf	___flmul@prod,f
 10773  02AE  0841               	movf	??___flmul+1,w
 10774  02AF  1103               	clrz
 10775  02B0  1803               	skipnc
 10776  02B1  3E01               	addlw	1
 10777  02B2  1903               	skipnz
 10778  02B3  2AB5               	goto	u5491
 10779  02B4  07CD               	addwf	___flmul@prod+1,f
 10780  02B5                     u5491:
 10781  02B5  0842               	movf	??___flmul+2,w
 10782  02B6  1103               	clrz
 10783  02B7  1803               	skipnc
 10784  02B8  3E01               	addlw	1
 10785  02B9  1903               	skipnz
 10786  02BA  2ABC               	goto	u5492
 10787  02BB  07CE               	addwf	___flmul@prod+2,f
 10788  02BC                     u5492:
 10789  02BC  0843               	movf	??___flmul+3,w
 10790  02BD  1103               	clrz
 10791  02BE  1803               	skipnc
 10792  02BF  3E01               	addlw	1
 10793  02C0  1903               	skipnz
 10794  02C1  2AC3               	goto	u5493
 10795  02C2  07CF               	addwf	___flmul@prod+3,f
 10796  02C3                     u5493:
 10797  02C3                     l7704:
 10798  02C3  0847               	movf	___flmul@grs,w
 10799  02C4  00C0               	movwf	??___flmul
 10800  02C5  0848               	movf	___flmul@grs+1,w
 10801  02C6  00C1               	movwf	??___flmul+1
 10802  02C7  0849               	movf	___flmul@grs+2,w
 10803  02C8  00C2               	movwf	??___flmul+2
 10804  02C9  084A               	movf	___flmul@grs+3,w
 10805  02CA  00C3               	movwf	??___flmul+3
 10806  02CB  3018               	movlw	24
 10807  02CC                     u5505:
 10808  02CC  1003               	clrc
 10809  02CD  0CC3               	rrf	??___flmul+3,f
 10810  02CE  0CC2               	rrf	??___flmul+2,f
 10811  02CF  0CC1               	rrf	??___flmul+1,f
 10812  02D0  0CC0               	rrf	??___flmul,f
 10813  02D1                     u5500:
 10814  02D1  3EFF               	addlw	-1
 10815  02D2  1D03               	skipz
 10816  02D3  2ACC               	goto	u5505
 10817  02D4  0840               	movf	??___flmul,w
 10818  02D5  07CC               	addwf	___flmul@prod,f
 10819  02D6  0841               	movf	??___flmul+1,w
 10820  02D7  1103               	clrz
 10821  02D8  1803               	skipnc
 10822  02D9  3E01               	addlw	1
 10823  02DA  1903               	skipnz
 10824  02DB  2ADD               	goto	u5511
 10825  02DC  07CD               	addwf	___flmul@prod+1,f
 10826  02DD                     u5511:
 10827  02DD  0842               	movf	??___flmul+2,w
 10828  02DE  1103               	clrz
 10829  02DF  1803               	skipnc
 10830  02E0  3E01               	addlw	1
 10831  02E1  1903               	skipnz
 10832  02E2  2AE4               	goto	u5512
 10833  02E3  07CE               	addwf	___flmul@prod+2,f
 10834  02E4                     u5512:
 10835  02E4  0843               	movf	??___flmul+3,w
 10836  02E5  1103               	clrz
 10837  02E6  1803               	skipnc
 10838  02E7  3E01               	addlw	1
 10839  02E8  1903               	skipnz
 10840  02E9  2AEB               	goto	u5513
 10841  02EA  07CF               	addwf	___flmul@prod+3,f
 10842  02EB                     u5513:
 10843  02EB                     l7706:
 10844  02EB  3008               	movlw	8
 10845  02EC  00C0               	movwf	??___flmul
 10846  02ED                     u5525:
 10847  02ED  1003               	clrc
 10848  02EE  0DC7               	rlf	___flmul@grs,f
 10849  02EF  0DC8               	rlf	___flmul@grs+1,f
 10850  02F0  0DC9               	rlf	___flmul@grs+2,f
 10851  02F1  0DCA               	rlf	___flmul@grs+3,f
 10852  02F2  0BC0               	decfsz	??___flmul,f
 10853  02F3  2AED               	goto	u5525
 10854  02F4                     l7708:
 10855  02F4  084B               	movf	___flmul@bexp,w
 10856  02F5  0746               	addwf	___flmul@aexp,w
 10857  02F6  00C0               	movwf	??___flmul
 10858  02F7  01C1               	clrf	??___flmul+1
 10859  02F8  0DC1               	rlf	??___flmul+1,f
 10860  02F9  0840               	movf	??___flmul,w
 10861  02FA  3E82               	addlw	130
 10862  02FB  00D0               	movwf	___flmul@temp
 10863  02FC  0841               	movf	??___flmul+1,w
 10864  02FD  1803               	skipnc
 10865  02FE  3E01               	addlw	1
 10866  02FF  3EFF               	addlw	255
 10867  0300  00D1               	movwf	___flmul@temp+1
 10868  0301  2B1F               	goto	l7720
 10869  0302                     l7710:
 10870  0302  3001               	movlw	1
 10871  0303  00C0               	movwf	??___flmul
 10872  0304                     u5535:
 10873  0304  1003               	clrc
 10874  0305  0DCC               	rlf	___flmul@prod,f
 10875  0306  0DCD               	rlf	___flmul@prod+1,f
 10876  0307  0DCE               	rlf	___flmul@prod+2,f
 10877  0308  0DCF               	rlf	___flmul@prod+3,f
 10878  0309  0BC0               	decfsz	??___flmul,f
 10879  030A  2B04               	goto	u5535
 10880  030B                     l7712:
 10881  030B  1FCA               	btfss	___flmul@grs+3,7
 10882  030C  2B0E               	goto	u5541
 10883  030D  2B0F               	goto	u5540
 10884  030E                     u5541:
 10885  030E  2B10               	goto	l7716
 10886  030F                     u5540:
 10887  030F                     l7714:
 10888  030F  144C               	bsf	___flmul@prod,0
 10889  0310                     l7716:
 10890  0310  3001               	movlw	1
 10891  0311  00C0               	movwf	??___flmul
 10892  0312                     u5555:
 10893  0312  1003               	clrc
 10894  0313  0DC7               	rlf	___flmul@grs,f
 10895  0314  0DC8               	rlf	___flmul@grs+1,f
 10896  0315  0DC9               	rlf	___flmul@grs+2,f
 10897  0316  0DCA               	rlf	___flmul@grs+3,f
 10898  0317  0BC0               	decfsz	??___flmul,f
 10899  0318  2B12               	goto	u5555
 10900  0319                     l7718:
 10901  0319  30FF               	movlw	255
 10902  031A  07D0               	addwf	___flmul@temp,f
 10903  031B  1803               	skipnc
 10904  031C  0AD1               	incf	___flmul@temp+1,f
 10905  031D  30FF               	movlw	255
 10906  031E  07D1               	addwf	___flmul@temp+1,f
 10907  031F                     l7720:
 10908  031F  1FCE               	btfss	___flmul@prod+2,7
 10909  0320  2B22               	goto	u5561
 10910  0321  2B23               	goto	u5560
 10911  0322                     u5561:
 10912  0322  2B02               	goto	l7710
 10913  0323                     u5560:
 10914  0323                     l7722:
 10915  0323  01C6               	clrf	___flmul@aexp
 10916  0324                     l7724:
 10917  0324  1FCA               	btfss	___flmul@grs+3,7
 10918  0325  2B27               	goto	u5571
 10919  0326  2B28               	goto	u5570
 10920  0327                     u5571:
 10921  0327  2B44               	goto	l7732
 10922  0328                     u5570:
 10923  0328                     l7726:
 10924  0328  30FF               	movlw	255
 10925  0329  0547               	andwf	___flmul@grs,w
 10926  032A  00C0               	movwf	??___flmul
 10927  032B  30FF               	movlw	255
 10928  032C  0548               	andwf	___flmul@grs+1,w
 10929  032D  00C1               	movwf	??___flmul+1
 10930  032E  30FF               	movlw	255
 10931  032F  0549               	andwf	___flmul@grs+2,w
 10932  0330  00C2               	movwf	??___flmul+2
 10933  0331  307F               	movlw	127
 10934  0332  054A               	andwf	___flmul@grs+3,w
 10935  0333  00C3               	movwf	??___flmul+3
 10936  0334  0843               	movf	??___flmul+3,w
 10937  0335  0442               	iorwf	??___flmul+2,w
 10938  0336  0441               	iorwf	??___flmul+1,w
 10939  0337  0440               	iorwf	??___flmul,w
 10940  0338  1903               	skipnz
 10941  0339  2B3B               	goto	u5581
 10942  033A  2B3C               	goto	u5580
 10943  033B                     u5581:
 10944  033B  2B3F               	goto	l1357
 10945  033C                     u5580:
 10946  033C                     l7728:
 10947  033C  01C6               	clrf	___flmul@aexp
 10948  033D  0AC6               	incf	___flmul@aexp,f
 10949  033E  2B44               	goto	l7732
 10950  033F                     l1357:
 10951  033F  1C4C               	btfss	___flmul@prod,0
 10952  0340  2B42               	goto	u5591
 10953  0341  2B43               	goto	u5590
 10954  0342                     u5591:
 10955  0342  2B44               	goto	l7732
 10956  0343                     u5590:
 10957  0343  2B3C               	goto	l7728
 10958  0344                     l7732:
 10959  0344  0846               	movf	___flmul@aexp,w
 10960  0345  1903               	btfsc	3,2
 10961  0346  2B48               	goto	u5601
 10962  0347  2B49               	goto	u5600
 10963  0348                     u5601:
 10964  0348  2B7A               	goto	l7742
 10965  0349                     u5600:
 10966  0349                     l7734:
 10967  0349  3001               	movlw	1
 10968  034A  07CC               	addwf	___flmul@prod,f
 10969  034B  3000               	movlw	0
 10970  034C  1803               	skipnc
 10971  034D  3001               	movlw	1
 10972  034E  07CD               	addwf	___flmul@prod+1,f
 10973  034F  3000               	movlw	0
 10974  0350  1803               	skipnc
 10975  0351  3001               	movlw	1
 10976  0352  07CE               	addwf	___flmul@prod+2,f
 10977  0353  3000               	movlw	0
 10978  0354  1803               	skipnc
 10979  0355  3001               	movlw	1
 10980  0356  07CF               	addwf	___flmul@prod+3,f
 10981  0357                     l7736:
 10982  0357  1C4F               	btfss	___flmul@prod+3,0
 10983  0358  2B5A               	goto	u5611
 10984  0359  2B5B               	goto	u5610
 10985  035A                     u5611:
 10986  035A  2B7A               	goto	l7742
 10987  035B                     u5610:
 10988  035B                     l7738:
 10989  035B  084C               	movf	___flmul@prod,w
 10990  035C  00C0               	movwf	??___flmul
 10991  035D  084D               	movf	___flmul@prod+1,w
 10992  035E  00C1               	movwf	??___flmul+1
 10993  035F  084E               	movf	___flmul@prod+2,w
 10994  0360  00C2               	movwf	??___flmul+2
 10995  0361  084F               	movf	___flmul@prod+3,w
 10996  0362  00C3               	movwf	??___flmul+3
 10997  0363  3001               	movlw	1
 10998  0364  00C4               	movwf	??___flmul+4
 10999  0365                     u5625:
 11000  0365  0D43               	rlf	??___flmul+3,w
 11001  0366  0CC3               	rrf	??___flmul+3,f
 11002  0367  0CC2               	rrf	??___flmul+2,f
 11003  0368  0CC1               	rrf	??___flmul+1,f
 11004  0369  0CC0               	rrf	??___flmul,f
 11005  036A                     u5620:
 11006  036A  0BC4               	decfsz	??___flmul+4,f
 11007  036B  2B65               	goto	u5625
 11008  036C  0843               	movf	??___flmul+3,w
 11009  036D  00CF               	movwf	___flmul@prod+3
 11010  036E  0842               	movf	??___flmul+2,w
 11011  036F  00CE               	movwf	___flmul@prod+2
 11012  0370  0841               	movf	??___flmul+1,w
 11013  0371  00CD               	movwf	___flmul@prod+1
 11014  0372  0840               	movf	??___flmul,w
 11015  0373  00CC               	movwf	___flmul@prod
 11016  0374                     l7740:
 11017  0374  3001               	movlw	1
 11018  0375  07D0               	addwf	___flmul@temp,f
 11019  0376  1803               	skipnc
 11020  0377  0AD1               	incf	___flmul@temp+1,f
 11021  0378  3000               	movlw	0
 11022  0379  07D1               	addwf	___flmul@temp+1,f
 11023  037A                     l7742:
 11024  037A  0851               	movf	___flmul@temp+1,w
 11025  037B  3A80               	xorlw	128
 11026  037C  00FF               	movwf	btemp+1
 11027  037D  3080               	movlw	128
 11028  037E  027F               	subwf	btemp+1,w
 11029  037F  1D03               	skipz
 11030  0380  2B83               	goto	u5635
 11031  0381  30FF               	movlw	255
 11032  0382  0250               	subwf	___flmul@temp,w
 11033  0383                     u5635:
 11034  0383  1C03               	skipc
 11035  0384  2B86               	goto	u5631
 11036  0385  2B87               	goto	u5630
 11037  0386                     u5631:
 11038  0386  2B92               	goto	l7746
 11039  0387                     u5630:
 11040  0387                     l7744:
 11041  0387  307F               	movlw	127
 11042  0388  1283               	bcf	3,5	;RP0=0, select bank0
 11043  0389  1303               	bcf	3,6	;RP1=0, select bank0
 11044  038A  00CF               	movwf	___flmul@prod+3
 11045  038B  3080               	movlw	128
 11046  038C  00CE               	movwf	___flmul@prod+2
 11047  038D  3000               	movlw	0
 11048  038E  00CD               	movwf	___flmul@prod+1
 11049  038F  3000               	movlw	0
 11050  0390  00CC               	movwf	___flmul@prod
 11051  0391  2BC7               	goto	l1363
 11052  0392                     l7746:
 11053  0392  1283               	bcf	3,5	;RP0=0, select bank0
 11054  0393  1303               	bcf	3,6	;RP1=0, select bank0
 11055  0394  0851               	movf	___flmul@temp+1,w
 11056  0395  3A80               	xorlw	128
 11057  0396  00FF               	movwf	btemp+1
 11058  0397  3080               	movlw	128
 11059  0398  027F               	subwf	btemp+1,w
 11060  0399  1D03               	skipz
 11061  039A  2B9D               	goto	u5645
 11062  039B  3001               	movlw	1
 11063  039C  0250               	subwf	___flmul@temp,w
 11064  039D                     u5645:
 11065  039D  1803               	skipnc
 11066  039E  2BA0               	goto	u5641
 11067  039F  2BA1               	goto	u5640
 11068  03A0                     u5641:
 11069  03A0  2BAD               	goto	l7752
 11070  03A1                     u5640:
 11071  03A1                     l7748:
 11072  03A1  3000               	movlw	0
 11073  03A2  1283               	bcf	3,5	;RP0=0, select bank0
 11074  03A3  1303               	bcf	3,6	;RP1=0, select bank0
 11075  03A4  00CF               	movwf	___flmul@prod+3
 11076  03A5  3000               	movlw	0
 11077  03A6  00CE               	movwf	___flmul@prod+2
 11078  03A7  3000               	movlw	0
 11079  03A8  00CD               	movwf	___flmul@prod+1
 11080  03A9  3000               	movlw	0
 11081  03AA  00CC               	movwf	___flmul@prod
 11082  03AB                     l7750:
 11083  03AB  01C5               	clrf	___flmul@sign
 11084  03AC  2BC7               	goto	l1363
 11085  03AD                     l7752:
 11086  03AD  1283               	bcf	3,5	;RP0=0, select bank0
 11087  03AE  1303               	bcf	3,6	;RP1=0, select bank0
 11088  03AF  0850               	movf	___flmul@temp,w
 11089  03B0  00FF               	movwf	btemp+1
 11090  03B1  087F               	movf	btemp+1,w
 11091  03B2  00CB               	movwf	___flmul@bexp
 11092  03B3                     l7754:
 11093  03B3  30FF               	movlw	255
 11094  03B4  05CC               	andwf	___flmul@prod,f
 11095  03B5  30FF               	movlw	255
 11096  03B6  05CD               	andwf	___flmul@prod+1,f
 11097  03B7  307F               	movlw	127
 11098  03B8  05CE               	andwf	___flmul@prod+2,f
 11099  03B9  3000               	movlw	0
 11100  03BA  05CF               	andwf	___flmul@prod+3,f
 11101  03BB                     l7756:
 11102  03BB  1C4B               	btfss	___flmul@bexp,0
 11103  03BC  2BBE               	goto	u5651
 11104  03BD  2BBF               	goto	u5650
 11105  03BE                     u5651:
 11106  03BE  2BC0               	goto	l7760
 11107  03BF                     u5650:
 11108  03BF                     l7758:
 11109  03BF  17CE               	bsf	___flmul@prod+2,7
 11110  03C0                     l7760:
 11111  03C0  084B               	movf	___flmul@bexp,w
 11112  03C1  00C0               	movwf	??___flmul
 11113  03C2  1003               	clrc
 11114  03C3  0C40               	rrf	??___flmul,w
 11115  03C4  00FF               	movwf	btemp+1
 11116  03C5  087F               	movf	btemp+1,w
 11117  03C6  00CF               	movwf	___flmul@prod+3
 11118  03C7                     l1363:
 11119  03C7  0845               	movf	___flmul@sign,w
 11120  03C8  00FF               	movwf	btemp+1
 11121  03C9  087F               	movf	btemp+1,w
 11122  03CA  04CF               	iorwf	___flmul@prod+3,f
 11123  03CB                     l7762:
 11124  03CB  084F               	movf	___flmul@prod+3,w
 11125  03CC  00BB               	movwf	?___flmul+3
 11126  03CD  084E               	movf	___flmul@prod+2,w
 11127  03CE  00BA               	movwf	?___flmul+2
 11128  03CF  084D               	movf	___flmul@prod+1,w
 11129  03D0  00B9               	movwf	?___flmul+1
 11130  03D1  084C               	movf	___flmul@prod,w
 11131  03D2  00B8               	movwf	?___flmul
 11132  03D3                     l1351:
 11133  03D3  0008               	return
 11134  03D4                     __end_of___flmul:
 11135                           
 11136                           	psect	text51
 11137  1D3F                     __ptext51:	
 11138 ;; *************** function __Umul8_16 *****************
 11139 ;; Defined at:
 11140 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  multiplier      1    wreg     unsigned char 
 11143 ;;  multiplicand    1   10[BANK0 ] unsigned char 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  multiplier      1   18[BANK0 ] unsigned char 
 11146 ;;  word_mpld       2   16[BANK0 ] unsigned int 
 11147 ;;  product         2   14[BANK0 ] unsigned int 
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  2   10[BANK0 ] unsigned int 
 11150 ;; Registers used:
 11151 ;;		wreg, status,2, status,0
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11157 ;;      Params:         0       2       0       0       0
 11158 ;;      Locals:         0       5       0       0       0
 11159 ;;      Temps:          0       2       0       0       0
 11160 ;;      Totals:         0       9       0       0       0
 11161 ;;Total ram usage:        9 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:    3
 11164 ;; This function calls:
 11165 ;;		Nothing
 11166 ;; This function is called by:
 11167 ;;		___flmul
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           
 11172                           ;psect for function __Umul8_16
 11173  1D3F                     __Umul8_16:
 11174                           
 11175                           ;incstack = 0
 11176                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11177                           ;__Umul8_16@multiplier stored from wreg
 11178  1D3F  1283               	bcf	3,5	;RP0=0, select bank0
 11179  1D40  1303               	bcf	3,6	;RP1=0, select bank0
 11180  1D41  00B2               	movwf	__Umul8_16@multiplier
 11181  1D42                     l7132:
 11182  1D42  01AE               	clrf	__Umul8_16@product
 11183  1D43  01AF               	clrf	__Umul8_16@product+1
 11184  1D44                     l7134:
 11185  1D44  082A               	movf	__Umul8_16@multiplicand,w
 11186  1D45  00AC               	movwf	??__Umul8_16
 11187  1D46  01AD               	clrf	??__Umul8_16+1
 11188  1D47  082C               	movf	??__Umul8_16,w
 11189  1D48  00B0               	movwf	__Umul8_16@word_mpld
 11190  1D49  082D               	movf	??__Umul8_16+1,w
 11191  1D4A  00B1               	movwf	__Umul8_16@word_mpld+1
 11192  1D4B                     l7136:
 11193  1D4B  1C32               	btfss	__Umul8_16@multiplier,0
 11194  1D4C  2D4E               	goto	u4591
 11195  1D4D  2D4F               	goto	u4590
 11196  1D4E                     u4591:
 11197  1D4E  2D55               	goto	l1370
 11198  1D4F                     u4590:
 11199  1D4F                     l7138:
 11200  1D4F  0830               	movf	__Umul8_16@word_mpld,w
 11201  1D50  07AE               	addwf	__Umul8_16@product,f
 11202  1D51  1803               	skipnc
 11203  1D52  0AAF               	incf	__Umul8_16@product+1,f
 11204  1D53  0831               	movf	__Umul8_16@word_mpld+1,w
 11205  1D54  07AF               	addwf	__Umul8_16@product+1,f
 11206  1D55                     l1370:
 11207  1D55  3001               	movlw	1
 11208  1D56                     u4605:
 11209  1D56  1003               	clrc
 11210  1D57  0DB0               	rlf	__Umul8_16@word_mpld,f
 11211  1D58  0DB1               	rlf	__Umul8_16@word_mpld+1,f
 11212  1D59  3EFF               	addlw	-1
 11213  1D5A  1D03               	skipz
 11214  1D5B  2D56               	goto	u4605
 11215  1D5C  1003               	clrc
 11216  1D5D  0CB2               	rrf	__Umul8_16@multiplier,f
 11217  1D5E                     l7140:
 11218  1D5E  0832               	movf	__Umul8_16@multiplier,w
 11219  1D5F  1D03               	btfss	3,2
 11220  1D60  2D62               	goto	u4611
 11221  1D61  2D63               	goto	u4610
 11222  1D62                     u4611:
 11223  1D62  2D4B               	goto	l7136
 11224  1D63                     u4610:
 11225  1D63                     l7142:
 11226  1D63  082F               	movf	__Umul8_16@product+1,w
 11227  1D64  00AB               	movwf	?__Umul8_16+1
 11228  1D65  082E               	movf	__Umul8_16@product,w
 11229  1D66  00AA               	movwf	?__Umul8_16
 11230  1D67                     l1372:
 11231  1D67  0008               	return
 11232  1D68                     __end_of__Umul8_16:
 11233                           
 11234                           	psect	text52
 11235  03D4                     __ptext52:	
 11236 ;; *************** function ___fldiv *****************
 11237 ;; Defined at:
 11238 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  a               4   50[BANK0 ] unsigned int 
 11241 ;;  b               4   54[BANK0 ] unsigned int 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;  grs             4   12[BANK1 ] unsigned long 
 11244 ;;  rem             4    5[BANK1 ] unsigned long 
 11245 ;;  new_exp         2   10[BANK1 ] int 
 11246 ;;  aexp            1   17[BANK1 ] unsigned char 
 11247 ;;  bexp            1   16[BANK1 ] unsigned char 
 11248 ;;  sign            1    9[BANK1 ] unsigned char 
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  4   50[BANK0 ] unsigned char 
 11251 ;; Registers used:
 11252 ;;		wreg, status,2, status,0, btemp+1
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11258 ;;      Params:         0       8       0       0       0
 11259 ;;      Locals:         0       0      13       0       0
 11260 ;;      Temps:          0       0       5       0       0
 11261 ;;      Totals:         0       8      18       0       0
 11262 ;;Total ram usage:       26 bytes
 11263 ;; Hardware stack levels used:    1
 11264 ;; Hardware stack levels required when called:    3
 11265 ;; This function calls:
 11266 ;;		Nothing
 11267 ;; This function is called by:
 11268 ;;		_LM_Read
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           
 11272                           
 11273                           ;psect for function ___fldiv
 11274  03D4                     ___fldiv:
 11275  03D4                     l7480:	
 11276                           ;incstack = 0
 11277                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11278                           
 11279  03D4  1283               	bcf	3,5	;RP0=0, select bank0
 11280  03D5  1303               	bcf	3,6	;RP1=0, select bank0
 11281  03D6  0859               	movf	___fldiv@b+3,w
 11282  03D7  3980               	andlw	128
 11283  03D8  00FF               	movwf	btemp+1
 11284  03D9  087F               	movf	btemp+1,w
 11285  03DA  1683               	bsf	3,5	;RP0=1, select bank1
 11286  03DB  1303               	bcf	3,6	;RP1=0, select bank1
 11287  03DC  00CE               	movwf	___fldiv@sign^(0+128)
 11288  03DD                     l7482:
 11289  03DD  1283               	bcf	3,5	;RP0=0, select bank0
 11290  03DE  1303               	bcf	3,6	;RP1=0, select bank0
 11291  03DF  0859               	movf	___fldiv@b+3,w
 11292  03E0  1683               	bsf	3,5	;RP0=1, select bank1
 11293  03E1  1303               	bcf	3,6	;RP1=0, select bank1
 11294  03E2  00C5               	movwf	??___fldiv^(0+128)
 11295  03E3  0745               	addwf	??___fldiv^(0+128),w
 11296  03E4  00FF               	movwf	btemp+1
 11297  03E5  087F               	movf	btemp+1,w
 11298  03E6  00D5               	movwf	___fldiv@bexp^(0+128)
 11299  03E7                     l7484:
 11300  03E7  1283               	bcf	3,5	;RP0=0, select bank0
 11301  03E8  1303               	bcf	3,6	;RP1=0, select bank0
 11302  03E9  1FD8               	btfss	___fldiv@b+2,7
 11303  03EA  2BEC               	goto	u4991
 11304  03EB  2BED               	goto	u4990
 11305  03EC                     u4991:
 11306  03EC  2BF0               	goto	l7488
 11307  03ED                     u4990:
 11308  03ED                     l7486:
 11309  03ED  1683               	bsf	3,5	;RP0=1, select bank1
 11310  03EE  1303               	bcf	3,6	;RP1=0, select bank1
 11311  03EF  1455               	bsf	___fldiv@bexp^(0+128),0
 11312  03F0                     l7488:
 11313  03F0  1683               	bsf	3,5	;RP0=1, select bank1
 11314  03F1  1303               	bcf	3,6	;RP1=0, select bank1
 11315  03F2  0855               	movf	___fldiv@bexp^(0+128),w
 11316  03F3  1903               	btfsc	3,2
 11317  03F4  2BF6               	goto	u5001
 11318  03F5  2BF7               	goto	u5000
 11319  03F6                     u5001:
 11320  03F6  2C0A               	goto	l7498
 11321  03F7                     u5000:
 11322  03F7                     l7490:
 11323  03F7  0A55               	incf	___fldiv@bexp^(0+128),w
 11324  03F8  1D03               	btfss	3,2
 11325  03F9  2BFB               	goto	u5011
 11326  03FA  2BFC               	goto	u5010
 11327  03FB                     u5011:
 11328  03FB  2C06               	goto	l7494
 11329  03FC                     u5010:
 11330  03FC                     l7492:
 11331  03FC  3000               	movlw	0
 11332  03FD  1283               	bcf	3,5	;RP0=0, select bank0
 11333  03FE  1303               	bcf	3,6	;RP1=0, select bank0
 11334  03FF  00D9               	movwf	___fldiv@b+3
 11335  0400  3000               	movlw	0
 11336  0401  00D8               	movwf	___fldiv@b+2
 11337  0402  3000               	movlw	0
 11338  0403  00D7               	movwf	___fldiv@b+1
 11339  0404  3000               	movlw	0
 11340  0405  00D6               	movwf	___fldiv@b
 11341  0406                     l7494:
 11342  0406  1283               	bcf	3,5	;RP0=0, select bank0
 11343  0407  17D8               	bsf	___fldiv@b+2,7
 11344  0408                     l7496:
 11345  0408  01D9               	clrf	___fldiv@b+3
 11346  0409  2C14               	goto	l7500
 11347  040A                     l7498:
 11348  040A  3000               	movlw	0
 11349  040B  1283               	bcf	3,5	;RP0=0, select bank0
 11350  040C  1303               	bcf	3,6	;RP1=0, select bank0
 11351  040D  00D9               	movwf	___fldiv@b+3
 11352  040E  3000               	movlw	0
 11353  040F  00D8               	movwf	___fldiv@b+2
 11354  0410  3000               	movlw	0
 11355  0411  00D7               	movwf	___fldiv@b+1
 11356  0412  3000               	movlw	0
 11357  0413  00D6               	movwf	___fldiv@b
 11358  0414                     l7500:
 11359  0414  0855               	movf	___fldiv@a+3,w
 11360  0415  3980               	andlw	128
 11361  0416  00FF               	movwf	btemp+1
 11362  0417  087F               	movf	btemp+1,w
 11363  0418  1683               	bsf	3,5	;RP0=1, select bank1
 11364  0419  1303               	bcf	3,6	;RP1=0, select bank1
 11365  041A  06CE               	xorwf	___fldiv@sign^(0+128),f
 11366  041B                     l7502:
 11367  041B  1283               	bcf	3,5	;RP0=0, select bank0
 11368  041C  1303               	bcf	3,6	;RP1=0, select bank0
 11369  041D  0855               	movf	___fldiv@a+3,w
 11370  041E  1683               	bsf	3,5	;RP0=1, select bank1
 11371  041F  1303               	bcf	3,6	;RP1=0, select bank1
 11372  0420  00C5               	movwf	??___fldiv^(0+128)
 11373  0421  0745               	addwf	??___fldiv^(0+128),w
 11374  0422  00FF               	movwf	btemp+1
 11375  0423  087F               	movf	btemp+1,w
 11376  0424  00D6               	movwf	___fldiv@aexp^(0+128)
 11377  0425                     l7504:
 11378  0425  1283               	bcf	3,5	;RP0=0, select bank0
 11379  0426  1303               	bcf	3,6	;RP1=0, select bank0
 11380  0427  1FD4               	btfss	___fldiv@a+2,7
 11381  0428  2C2A               	goto	u5021
 11382  0429  2C2B               	goto	u5020
 11383  042A                     u5021:
 11384  042A  2C2E               	goto	l7508
 11385  042B                     u5020:
 11386  042B                     l7506:
 11387  042B  1683               	bsf	3,5	;RP0=1, select bank1
 11388  042C  1303               	bcf	3,6	;RP1=0, select bank1
 11389  042D  1456               	bsf	___fldiv@aexp^(0+128),0
 11390  042E                     l7508:
 11391  042E  1683               	bsf	3,5	;RP0=1, select bank1
 11392  042F  1303               	bcf	3,6	;RP1=0, select bank1
 11393  0430  0856               	movf	___fldiv@aexp^(0+128),w
 11394  0431  1903               	btfsc	3,2
 11395  0432  2C34               	goto	u5031
 11396  0433  2C35               	goto	u5030
 11397  0434                     u5031:
 11398  0434  2C48               	goto	l7518
 11399  0435                     u5030:
 11400  0435                     l7510:
 11401  0435  0A56               	incf	___fldiv@aexp^(0+128),w
 11402  0436  1D03               	btfss	3,2
 11403  0437  2C39               	goto	u5041
 11404  0438  2C3A               	goto	u5040
 11405  0439                     u5041:
 11406  0439  2C44               	goto	l7514
 11407  043A                     u5040:
 11408  043A                     l7512:
 11409  043A  3000               	movlw	0
 11410  043B  1283               	bcf	3,5	;RP0=0, select bank0
 11411  043C  1303               	bcf	3,6	;RP1=0, select bank0
 11412  043D  00D5               	movwf	___fldiv@a+3
 11413  043E  3000               	movlw	0
 11414  043F  00D4               	movwf	___fldiv@a+2
 11415  0440  3000               	movlw	0
 11416  0441  00D3               	movwf	___fldiv@a+1
 11417  0442  3000               	movlw	0
 11418  0443  00D2               	movwf	___fldiv@a
 11419  0444                     l7514:
 11420  0444  1283               	bcf	3,5	;RP0=0, select bank0
 11421  0445  17D4               	bsf	___fldiv@a+2,7
 11422  0446                     l7516:
 11423  0446  01D5               	clrf	___fldiv@a+3
 11424  0447  2C52               	goto	l1311
 11425  0448                     l7518:
 11426  0448  3000               	movlw	0
 11427  0449  1283               	bcf	3,5	;RP0=0, select bank0
 11428  044A  1303               	bcf	3,6	;RP1=0, select bank0
 11429  044B  00D5               	movwf	___fldiv@a+3
 11430  044C  3000               	movlw	0
 11431  044D  00D4               	movwf	___fldiv@a+2
 11432  044E  3000               	movlw	0
 11433  044F  00D3               	movwf	___fldiv@a+1
 11434  0450  3000               	movlw	0
 11435  0451  00D2               	movwf	___fldiv@a
 11436  0452                     l1311:
 11437  0452  0855               	movf	___fldiv@a+3,w
 11438  0453  0454               	iorwf	___fldiv@a+2,w
 11439  0454  0453               	iorwf	___fldiv@a+1,w
 11440  0455  0452               	iorwf	___fldiv@a,w
 11441  0456  1D03               	skipz
 11442  0457  2C59               	goto	u5051
 11443  0458  2C5A               	goto	u5050
 11444  0459                     u5051:
 11445  0459  2C77               	goto	l7528
 11446  045A                     u5050:
 11447  045A                     l7520:
 11448  045A  3000               	movlw	0
 11449  045B  00D9               	movwf	___fldiv@b+3
 11450  045C  3000               	movlw	0
 11451  045D  00D8               	movwf	___fldiv@b+2
 11452  045E  3000               	movlw	0
 11453  045F  00D7               	movwf	___fldiv@b+1
 11454  0460  3000               	movlw	0
 11455  0461  00D6               	movwf	___fldiv@b
 11456  0462  3080               	movlw	128
 11457  0463  04D8               	iorwf	___fldiv@b+2,f
 11458  0464  307F               	movlw	127
 11459  0465  04D9               	iorwf	___fldiv@b+3,f
 11460  0466                     l7522:
 11461  0466  1683               	bsf	3,5	;RP0=1, select bank1
 11462  0467  1303               	bcf	3,6	;RP1=0, select bank1
 11463  0468  084E               	movf	___fldiv@sign^(0+128),w
 11464  0469  00FF               	movwf	btemp+1
 11465  046A  087F               	movf	btemp+1,w
 11466  046B  1283               	bcf	3,5	;RP0=0, select bank0
 11467  046C  1303               	bcf	3,6	;RP1=0, select bank0
 11468  046D  04D9               	iorwf	___fldiv@b+3,f
 11469  046E                     l7524:
 11470  046E  0859               	movf	___fldiv@b+3,w
 11471  046F  00D5               	movwf	?___fldiv+3
 11472  0470  0858               	movf	___fldiv@b+2,w
 11473  0471  00D4               	movwf	?___fldiv+2
 11474  0472  0857               	movf	___fldiv@b+1,w
 11475  0473  00D3               	movwf	?___fldiv+1
 11476  0474  0856               	movf	___fldiv@b,w
 11477  0475  00D2               	movwf	?___fldiv
 11478  0476  2E68               	goto	l1313
 11479  0477                     l7528:
 11480  0477  1683               	bsf	3,5	;RP0=1, select bank1
 11481  0478  1303               	bcf	3,6	;RP1=0, select bank1
 11482  0479  0855               	movf	___fldiv@bexp^(0+128),w
 11483  047A  1D03               	btfss	3,2
 11484  047B  2C7D               	goto	u5061
 11485  047C  2C7E               	goto	u5060
 11486  047D                     u5061:
 11487  047D  2C89               	goto	l7534
 11488  047E                     u5060:
 11489  047E                     l7530:
 11490  047E  3000               	movlw	0
 11491  047F  1283               	bcf	3,5	;RP0=0, select bank0
 11492  0480  1303               	bcf	3,6	;RP1=0, select bank0
 11493  0481  00D5               	movwf	?___fldiv+3
 11494  0482  3000               	movlw	0
 11495  0483  00D4               	movwf	?___fldiv+2
 11496  0484  3000               	movlw	0
 11497  0485  00D3               	movwf	?___fldiv+1
 11498  0486  3000               	movlw	0
 11499  0487  00D2               	movwf	?___fldiv
 11500  0488  2E68               	goto	l1313
 11501  0489                     l7534:
 11502  0489  0855               	movf	___fldiv@bexp^(0+128),w
 11503  048A  00C5               	movwf	??___fldiv^(0+128)
 11504  048B  01C6               	clrf	(??___fldiv^(0+128)+1)
 11505  048C  0846               	movf	(??___fldiv+1)^(0+128),w
 11506  048D  00C8               	movwf	((??___fldiv+2)^(0+128)+1)
 11507  048E  0856               	movf	___fldiv@aexp^(0+128),w
 11508  048F  0245               	subwf	??___fldiv^(0+128),w
 11509  0490  00C7               	movwf	(??___fldiv+2)^(0+128)
 11510  0491  1C03               	skipc
 11511  0492  03C8               	decf	((??___fldiv+2)^(0+128)+1),f
 11512  0493  0847               	movf	(??___fldiv+2)^(0+128),w
 11513  0494  3E7F               	addlw	127
 11514  0495  00CF               	movwf	___fldiv@new_exp^(0+128)
 11515  0496  0848               	movf	(??___fldiv+3)^(0+128),w
 11516  0497  1803               	skipnc
 11517  0498  3E01               	addlw	1
 11518  0499  3E00               	addlw	0
 11519  049A  00D0               	movwf	(___fldiv@new_exp+1)^(0+128)
 11520  049B                     l7536:
 11521  049B  1283               	bcf	3,5	;RP0=0, select bank0
 11522  049C  1303               	bcf	3,6	;RP1=0, select bank0
 11523  049D  0859               	movf	___fldiv@b+3,w
 11524  049E  1683               	bsf	3,5	;RP0=1, select bank1
 11525  049F  1303               	bcf	3,6	;RP1=0, select bank1
 11526  04A0  00CD               	movwf	(___fldiv@rem+3)^(0+128)
 11527  04A1  1283               	bcf	3,5	;RP0=0, select bank0
 11528  04A2  1303               	bcf	3,6	;RP1=0, select bank0
 11529  04A3  0858               	movf	___fldiv@b+2,w
 11530  04A4  1683               	bsf	3,5	;RP0=1, select bank1
 11531  04A5  1303               	bcf	3,6	;RP1=0, select bank1
 11532  04A6  00CC               	movwf	(___fldiv@rem+2)^(0+128)
 11533  04A7  1283               	bcf	3,5	;RP0=0, select bank0
 11534  04A8  1303               	bcf	3,6	;RP1=0, select bank0
 11535  04A9  0857               	movf	___fldiv@b+1,w
 11536  04AA  1683               	bsf	3,5	;RP0=1, select bank1
 11537  04AB  1303               	bcf	3,6	;RP1=0, select bank1
 11538  04AC  00CB               	movwf	(___fldiv@rem+1)^(0+128)
 11539  04AD  1283               	bcf	3,5	;RP0=0, select bank0
 11540  04AE  1303               	bcf	3,6	;RP1=0, select bank0
 11541  04AF  0856               	movf	___fldiv@b,w
 11542  04B0  1683               	bsf	3,5	;RP0=1, select bank1
 11543  04B1  1303               	bcf	3,6	;RP1=0, select bank1
 11544  04B2  00CA               	movwf	___fldiv@rem^(0+128)
 11545  04B3                     l7538:
 11546  04B3  3000               	movlw	0
 11547  04B4  1283               	bcf	3,5	;RP0=0, select bank0
 11548  04B5  1303               	bcf	3,6	;RP1=0, select bank0
 11549  04B6  00D9               	movwf	___fldiv@b+3
 11550  04B7  3000               	movlw	0
 11551  04B8  00D8               	movwf	___fldiv@b+2
 11552  04B9  3000               	movlw	0
 11553  04BA  00D7               	movwf	___fldiv@b+1
 11554  04BB  3000               	movlw	0
 11555  04BC  00D6               	movwf	___fldiv@b
 11556  04BD                     l7540:
 11557  04BD  3000               	movlw	0
 11558  04BE  1683               	bsf	3,5	;RP0=1, select bank1
 11559  04BF  1303               	bcf	3,6	;RP1=0, select bank1
 11560  04C0  00D4               	movwf	(___fldiv@grs+3)^(0+128)
 11561  04C1  3000               	movlw	0
 11562  04C2  00D3               	movwf	(___fldiv@grs+2)^(0+128)
 11563  04C3  3000               	movlw	0
 11564  04C4  00D2               	movwf	(___fldiv@grs+1)^(0+128)
 11565  04C5  3000               	movlw	0
 11566  04C6  00D1               	movwf	___fldiv@grs^(0+128)
 11567  04C7                     l7542:
 11568  04C7  01D6               	clrf	___fldiv@aexp^(0+128)
 11569  04C8  2D45               	goto	l7562
 11570  04C9                     l7544:
 11571  04C9  0856               	movf	___fldiv@aexp^(0+128),w
 11572  04CA  1903               	btfsc	3,2
 11573  04CB  2CCD               	goto	u5071
 11574  04CC  2CCE               	goto	u5070
 11575  04CD                     u5071:
 11576  04CD  2CF6               	goto	l7554
 11577  04CE                     u5070:
 11578  04CE                     l7546:
 11579  04CE  3001               	movlw	1
 11580  04CF  00C5               	movwf	??___fldiv^(0+128)
 11581  04D0                     u5085:
 11582  04D0  1003               	clrc
 11583  04D1  0DCA               	rlf	___fldiv@rem^(0+128),f
 11584  04D2  0DCB               	rlf	(___fldiv@rem+1)^(0+128),f
 11585  04D3  0DCC               	rlf	(___fldiv@rem+2)^(0+128),f
 11586  04D4  0DCD               	rlf	(___fldiv@rem+3)^(0+128),f
 11587  04D5  0BC5               	decfsz	??___fldiv^(0+128),f
 11588  04D6  2CD0               	goto	u5085
 11589  04D7  3001               	movlw	1
 11590  04D8  00C5               	movwf	??___fldiv^(0+128)
 11591  04D9                     u5095:
 11592  04D9  1003               	clrc
 11593  04DA  1283               	bcf	3,5	;RP0=0, select bank0
 11594  04DB  1303               	bcf	3,6	;RP1=0, select bank0
 11595  04DC  0DD6               	rlf	___fldiv@b,f
 11596  04DD  0DD7               	rlf	___fldiv@b+1,f
 11597  04DE  0DD8               	rlf	___fldiv@b+2,f
 11598  04DF  0DD9               	rlf	___fldiv@b+3,f
 11599  04E0  1683               	bsf	3,5	;RP0=1, select bank1
 11600  04E1  1303               	bcf	3,6	;RP1=0, select bank1
 11601  04E2  0BC5               	decfsz	??___fldiv^(0+128),f
 11602  04E3  2CD9               	goto	u5095
 11603  04E4                     l7548:
 11604  04E4  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
 11605  04E5  2CE7               	goto	u5101
 11606  04E6  2CE8               	goto	u5100
 11607  04E7                     u5101:
 11608  04E7  2CEB               	goto	l7552
 11609  04E8                     u5100:
 11610  04E8                     l7550:
 11611  04E8  1283               	bcf	3,5	;RP0=0, select bank0
 11612  04E9  1303               	bcf	3,6	;RP1=0, select bank0
 11613  04EA  1456               	bsf	___fldiv@b,0
 11614  04EB                     l7552:
 11615  04EB  3001               	movlw	1
 11616  04EC  1683               	bsf	3,5	;RP0=1, select bank1
 11617  04ED  1303               	bcf	3,6	;RP1=0, select bank1
 11618  04EE  00C5               	movwf	??___fldiv^(0+128)
 11619  04EF                     u5115:
 11620  04EF  1003               	clrc
 11621  04F0  0DD1               	rlf	___fldiv@grs^(0+128),f
 11622  04F1  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
 11623  04F2  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
 11624  04F3  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
 11625  04F4  0BC5               	decfsz	??___fldiv^(0+128),f
 11626  04F5  2CEF               	goto	u5115
 11627  04F6                     l7554:
 11628  04F6  1283               	bcf	3,5	;RP0=0, select bank0
 11629  04F7  1303               	bcf	3,6	;RP1=0, select bank0
 11630  04F8  0855               	movf	___fldiv@a+3,w
 11631  04F9  1683               	bsf	3,5	;RP0=1, select bank1
 11632  04FA  1303               	bcf	3,6	;RP1=0, select bank1
 11633  04FB  024D               	subwf	(___fldiv@rem+3)^(0+128),w
 11634  04FC  1D03               	skipz
 11635  04FD  2D14               	goto	u5125
 11636  04FE  1283               	bcf	3,5	;RP0=0, select bank0
 11637  04FF  1303               	bcf	3,6	;RP1=0, select bank0
 11638  0500  0854               	movf	___fldiv@a+2,w
 11639  0501  1683               	bsf	3,5	;RP0=1, select bank1
 11640  0502  1303               	bcf	3,6	;RP1=0, select bank1
 11641  0503  024C               	subwf	(___fldiv@rem+2)^(0+128),w
 11642  0504  1D03               	skipz
 11643  0505  2D14               	goto	u5125
 11644  0506  1283               	bcf	3,5	;RP0=0, select bank0
 11645  0507  1303               	bcf	3,6	;RP1=0, select bank0
 11646  0508  0853               	movf	___fldiv@a+1,w
 11647  0509  1683               	bsf	3,5	;RP0=1, select bank1
 11648  050A  1303               	bcf	3,6	;RP1=0, select bank1
 11649  050B  024B               	subwf	(___fldiv@rem+1)^(0+128),w
 11650  050C  1D03               	skipz
 11651  050D  2D14               	goto	u5125
 11652  050E  1283               	bcf	3,5	;RP0=0, select bank0
 11653  050F  1303               	bcf	3,6	;RP1=0, select bank0
 11654  0510  0852               	movf	___fldiv@a,w
 11655  0511  1683               	bsf	3,5	;RP0=1, select bank1
 11656  0512  1303               	bcf	3,6	;RP1=0, select bank1
 11657  0513  024A               	subwf	___fldiv@rem^(0+128),w
 11658  0514                     u5125:
 11659  0514  1C03               	skipc
 11660  0515  2D17               	goto	u5121
 11661  0516  2D18               	goto	u5120
 11662  0517                     u5121:
 11663  0517  2D41               	goto	l7560
 11664  0518                     u5120:
 11665  0518                     l7556:
 11666  0518  1754               	bsf	(___fldiv@grs^(0+128)+3),6
 11667  0519                     l7558:
 11668  0519  1283               	bcf	3,5	;RP0=0, select bank0
 11669  051A  1303               	bcf	3,6	;RP1=0, select bank0
 11670  051B  0852               	movf	___fldiv@a,w
 11671  051C  1683               	bsf	3,5	;RP0=1, select bank1
 11672  051D  1303               	bcf	3,6	;RP1=0, select bank1
 11673  051E  02CA               	subwf	___fldiv@rem^(0+128),f
 11674  051F  1283               	bcf	3,5	;RP0=0, select bank0
 11675  0520  1303               	bcf	3,6	;RP1=0, select bank0
 11676  0521  0853               	movf	___fldiv@a+1,w
 11677  0522  1C03               	skipc
 11678  0523  0F53               	incfsz	___fldiv@a+1,w
 11679  0524  2D26               	goto	u5135
 11680  0525  2D29               	goto	u5136
 11681  0526                     u5135:
 11682  0526  1683               	bsf	3,5	;RP0=1, select bank1
 11683  0527  1303               	bcf	3,6	;RP1=0, select bank1
 11684  0528  02CB               	subwf	(___fldiv@rem+1)^(0+128),f
 11685  0529                     u5136:
 11686  0529  1283               	bcf	3,5	;RP0=0, select bank0
 11687  052A  1303               	bcf	3,6	;RP1=0, select bank0
 11688  052B  0854               	movf	___fldiv@a+2,w
 11689  052C  1C03               	skipc
 11690  052D  0F54               	incfsz	___fldiv@a+2,w
 11691  052E  2D30               	goto	u5137
 11692  052F  2D33               	goto	u5138
 11693  0530                     u5137:
 11694  0530  1683               	bsf	3,5	;RP0=1, select bank1
 11695  0531  1303               	bcf	3,6	;RP1=0, select bank1
 11696  0532  02CC               	subwf	(___fldiv@rem+2)^(0+128),f
 11697  0533                     u5138:
 11698  0533  1283               	bcf	3,5	;RP0=0, select bank0
 11699  0534  1303               	bcf	3,6	;RP1=0, select bank0
 11700  0535  0855               	movf	___fldiv@a+3,w
 11701  0536  1C03               	skipc
 11702  0537  0F55               	incfsz	___fldiv@a+3,w
 11703  0538  2D3A               	goto	u5139
 11704  0539  2D3D               	goto	u5130
 11705  053A                     u5139:
 11706  053A  1683               	bsf	3,5	;RP0=1, select bank1
 11707  053B  1303               	bcf	3,6	;RP1=0, select bank1
 11708  053C  02CD               	subwf	(___fldiv@rem+3)^(0+128),f
 11709  053D                     u5130:
 11710  053D  1283               	bcf	3,5	;RP0=0, select bank0
 11711  053E  1303               	bcf	3,6	;RP1=0, select bank0
 11712  053F  1683               	bsf	3,5	;RP0=1, select bank1
 11713  0540  1303               	bcf	3,6	;RP1=0, select bank1
 11714  0541                     l7560:
 11715  0541  3001               	movlw	1
 11716  0542  00FF               	movwf	btemp+1
 11717  0543  087F               	movf	btemp+1,w
 11718  0544  07D6               	addwf	___fldiv@aexp^(0+128),f
 11719  0545                     l7562:
 11720  0545  301A               	movlw	26
 11721  0546  0256               	subwf	___fldiv@aexp^(0+128),w
 11722  0547  1C03               	skipc
 11723  0548  2D4A               	goto	u5141
 11724  0549  2D4B               	goto	u5140
 11725  054A                     u5141:
 11726  054A  2CC9               	goto	l7544
 11727  054B                     u5140:
 11728  054B                     l7564:
 11729  054B  084D               	movf	(___fldiv@rem+3)^(0+128),w
 11730  054C  044C               	iorwf	(___fldiv@rem+2)^(0+128),w
 11731  054D  044B               	iorwf	(___fldiv@rem+1)^(0+128),w
 11732  054E  044A               	iorwf	___fldiv@rem^(0+128),w
 11733  054F  1903               	skipnz
 11734  0550  2D52               	goto	u5151
 11735  0551  2D53               	goto	u5150
 11736  0552                     u5151:
 11737  0552  2D7C               	goto	l7578
 11738  0553                     u5150:
 11739  0553                     l7566:
 11740  0553  1451               	bsf	___fldiv@grs^(0+128),0
 11741  0554  2D7C               	goto	l7578
 11742  0555                     l7568:
 11743  0555  3001               	movlw	1
 11744  0556  1683               	bsf	3,5	;RP0=1, select bank1
 11745  0557  1303               	bcf	3,6	;RP1=0, select bank1
 11746  0558  00C5               	movwf	??___fldiv^(0+128)
 11747  0559                     u5165:
 11748  0559  1003               	clrc
 11749  055A  1283               	bcf	3,5	;RP0=0, select bank0
 11750  055B  1303               	bcf	3,6	;RP1=0, select bank0
 11751  055C  0DD6               	rlf	___fldiv@b,f
 11752  055D  0DD7               	rlf	___fldiv@b+1,f
 11753  055E  0DD8               	rlf	___fldiv@b+2,f
 11754  055F  0DD9               	rlf	___fldiv@b+3,f
 11755  0560  1683               	bsf	3,5	;RP0=1, select bank1
 11756  0561  1303               	bcf	3,6	;RP1=0, select bank1
 11757  0562  0BC5               	decfsz	??___fldiv^(0+128),f
 11758  0563  2D59               	goto	u5165
 11759  0564                     l7570:
 11760  0564  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
 11761  0565  2D67               	goto	u5171
 11762  0566  2D68               	goto	u5170
 11763  0567                     u5171:
 11764  0567  2D6B               	goto	l7574
 11765  0568                     u5170:
 11766  0568                     l7572:
 11767  0568  1283               	bcf	3,5	;RP0=0, select bank0
 11768  0569  1303               	bcf	3,6	;RP1=0, select bank0
 11769  056A  1456               	bsf	___fldiv@b,0
 11770  056B                     l7574:
 11771  056B  3001               	movlw	1
 11772  056C  1683               	bsf	3,5	;RP0=1, select bank1
 11773  056D  1303               	bcf	3,6	;RP1=0, select bank1
 11774  056E  00C5               	movwf	??___fldiv^(0+128)
 11775  056F                     u5185:
 11776  056F  1003               	clrc
 11777  0570  0DD1               	rlf	___fldiv@grs^(0+128),f
 11778  0571  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
 11779  0572  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
 11780  0573  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
 11781  0574  0BC5               	decfsz	??___fldiv^(0+128),f
 11782  0575  2D6F               	goto	u5185
 11783  0576                     l7576:
 11784  0576  30FF               	movlw	255
 11785  0577  07CF               	addwf	___fldiv@new_exp^(0+128),f
 11786  0578  1803               	skipnc
 11787  0579  0AD0               	incf	(___fldiv@new_exp+1)^(0+128),f
 11788  057A  30FF               	movlw	255
 11789  057B  07D0               	addwf	(___fldiv@new_exp+1)^(0+128),f
 11790  057C                     l7578:
 11791  057C  1283               	bcf	3,5	;RP0=0, select bank0
 11792  057D  1303               	bcf	3,6	;RP1=0, select bank0
 11793  057E  1FD8               	btfss	___fldiv@b+2,7
 11794  057F  2D81               	goto	u5191
 11795  0580  2D82               	goto	u5190
 11796  0581                     u5191:
 11797  0581  2D55               	goto	l7568
 11798  0582                     u5190:
 11799  0582                     l7580:
 11800  0582  1683               	bsf	3,5	;RP0=1, select bank1
 11801  0583  1303               	bcf	3,6	;RP1=0, select bank1
 11802  0584  01D6               	clrf	___fldiv@aexp^(0+128)
 11803  0585                     l7582:
 11804  0585  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
 11805  0586  2D88               	goto	u5201
 11806  0587  2D89               	goto	u5200
 11807  0588                     u5201:
 11808  0588  2DA9               	goto	l7590
 11809  0589                     u5200:
 11810  0589                     l7584:
 11811  0589  30FF               	movlw	255
 11812  058A  0551               	andwf	___fldiv@grs^(0+128),w
 11813  058B  00C5               	movwf	??___fldiv^(0+128)
 11814  058C  30FF               	movlw	255
 11815  058D  0552               	andwf	(___fldiv@grs+1)^(0+128),w
 11816  058E  00C6               	movwf	(??___fldiv^(0+128)+1)
 11817  058F  30FF               	movlw	255
 11818  0590  0553               	andwf	(___fldiv@grs+2)^(0+128),w
 11819  0591  00C7               	movwf	(??___fldiv^(0+128)+2)
 11820  0592  307F               	movlw	127
 11821  0593  0554               	andwf	(___fldiv@grs+3)^(0+128),w
 11822  0594  00C8               	movwf	(??___fldiv^(0+128)+3)
 11823  0595  0848               	movf	(??___fldiv+3)^(0+128),w
 11824  0596  0447               	iorwf	(??___fldiv+2)^(0+128),w
 11825  0597  0446               	iorwf	(??___fldiv+1)^(0+128),w
 11826  0598  0445               	iorwf	??___fldiv^(0+128),w
 11827  0599  1903               	skipnz
 11828  059A  2D9C               	goto	u5211
 11829  059B  2D9D               	goto	u5210
 11830  059C                     u5211:
 11831  059C  2DA2               	goto	l1327
 11832  059D                     u5210:
 11833  059D                     l7586:
 11834  059D  1683               	bsf	3,5	;RP0=1, select bank1
 11835  059E  1303               	bcf	3,6	;RP1=0, select bank1
 11836  059F  01D6               	clrf	___fldiv@aexp^(0+128)
 11837  05A0  0AD6               	incf	___fldiv@aexp^(0+128),f
 11838  05A1  2DA9               	goto	l7590
 11839  05A2                     l1327:
 11840  05A2  1283               	bcf	3,5	;RP0=0, select bank0
 11841  05A3  1303               	bcf	3,6	;RP1=0, select bank0
 11842  05A4  1C56               	btfss	___fldiv@b,0
 11843  05A5  2DA7               	goto	u5221
 11844  05A6  2DA8               	goto	u5220
 11845  05A7                     u5221:
 11846  05A7  2DA9               	goto	l7590
 11847  05A8                     u5220:
 11848  05A8  2D9D               	goto	l7586
 11849  05A9                     l7590:
 11850  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 11851  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 11852  05AB  0856               	movf	___fldiv@aexp^(0+128),w
 11853  05AC  1903               	btfsc	3,2
 11854  05AD  2DAF               	goto	u5231
 11855  05AE  2DB0               	goto	u5230
 11856  05AF                     u5231:
 11857  05AF  2E01               	goto	l7600
 11858  05B0                     u5230:
 11859  05B0                     l7592:
 11860  05B0  3001               	movlw	1
 11861  05B1  1283               	bcf	3,5	;RP0=0, select bank0
 11862  05B2  1303               	bcf	3,6	;RP1=0, select bank0
 11863  05B3  07D6               	addwf	___fldiv@b,f
 11864  05B4  3000               	movlw	0
 11865  05B5  1803               	skipnc
 11866  05B6  3001               	movlw	1
 11867  05B7  07D7               	addwf	___fldiv@b+1,f
 11868  05B8  3000               	movlw	0
 11869  05B9  1803               	skipnc
 11870  05BA  3001               	movlw	1
 11871  05BB  07D8               	addwf	___fldiv@b+2,f
 11872  05BC  3000               	movlw	0
 11873  05BD  1803               	skipnc
 11874  05BE  3001               	movlw	1
 11875  05BF  07D9               	addwf	___fldiv@b+3,f
 11876  05C0                     l7594:
 11877  05C0  1C59               	btfss	___fldiv@b+3,0
 11878  05C1  2DC3               	goto	u5241
 11879  05C2  2DC4               	goto	u5240
 11880  05C3                     u5241:
 11881  05C3  2E01               	goto	l7600
 11882  05C4                     u5240:
 11883  05C4                     l7596:
 11884  05C4  0856               	movf	___fldiv@b,w
 11885  05C5  1683               	bsf	3,5	;RP0=1, select bank1
 11886  05C6  1303               	bcf	3,6	;RP1=0, select bank1
 11887  05C7  00C5               	movwf	??___fldiv^(0+128)
 11888  05C8  1283               	bcf	3,5	;RP0=0, select bank0
 11889  05C9  1303               	bcf	3,6	;RP1=0, select bank0
 11890  05CA  0857               	movf	___fldiv@b+1,w
 11891  05CB  1683               	bsf	3,5	;RP0=1, select bank1
 11892  05CC  1303               	bcf	3,6	;RP1=0, select bank1
 11893  05CD  00C6               	movwf	(??___fldiv^(0+128)+1)
 11894  05CE  1283               	bcf	3,5	;RP0=0, select bank0
 11895  05CF  1303               	bcf	3,6	;RP1=0, select bank0
 11896  05D0  0858               	movf	___fldiv@b+2,w
 11897  05D1  1683               	bsf	3,5	;RP0=1, select bank1
 11898  05D2  1303               	bcf	3,6	;RP1=0, select bank1
 11899  05D3  00C7               	movwf	(??___fldiv^(0+128)+2)
 11900  05D4  1283               	bcf	3,5	;RP0=0, select bank0
 11901  05D5  1303               	bcf	3,6	;RP1=0, select bank0
 11902  05D6  0859               	movf	___fldiv@b+3,w
 11903  05D7  1683               	bsf	3,5	;RP0=1, select bank1
 11904  05D8  1303               	bcf	3,6	;RP1=0, select bank1
 11905  05D9  00C8               	movwf	(??___fldiv^(0+128)+3)
 11906  05DA  3001               	movlw	1
 11907  05DB  00C9               	movwf	(??___fldiv+4)^(0+128)
 11908  05DC                     u5255:
 11909  05DC  0D48               	rlf	(??___fldiv^(0+128)+3),w
 11910  05DD  0CC8               	rrf	(??___fldiv^(0+128)+3),f
 11911  05DE  0CC7               	rrf	(??___fldiv^(0+128)+2),f
 11912  05DF  0CC6               	rrf	(??___fldiv^(0+128)+1),f
 11913  05E0  0CC5               	rrf	??___fldiv^(0+128),f
 11914  05E1                     u5250:
 11915  05E1  0BC9               	decfsz	(??___fldiv+4)^(0+128),f
 11916  05E2  2DDC               	goto	u5255
 11917  05E3  0848               	movf	(??___fldiv+3)^(0+128),w
 11918  05E4  1283               	bcf	3,5	;RP0=0, select bank0
 11919  05E5  1303               	bcf	3,6	;RP1=0, select bank0
 11920  05E6  00D9               	movwf	___fldiv@b+3
 11921  05E7  1683               	bsf	3,5	;RP0=1, select bank1
 11922  05E8  1303               	bcf	3,6	;RP1=0, select bank1
 11923  05E9  0847               	movf	(??___fldiv+2)^(0+128),w
 11924  05EA  1283               	bcf	3,5	;RP0=0, select bank0
 11925  05EB  1303               	bcf	3,6	;RP1=0, select bank0
 11926  05EC  00D8               	movwf	___fldiv@b+2
 11927  05ED  1683               	bsf	3,5	;RP0=1, select bank1
 11928  05EE  1303               	bcf	3,6	;RP1=0, select bank1
 11929  05EF  0846               	movf	(??___fldiv+1)^(0+128),w
 11930  05F0  1283               	bcf	3,5	;RP0=0, select bank0
 11931  05F1  1303               	bcf	3,6	;RP1=0, select bank0
 11932  05F2  00D7               	movwf	___fldiv@b+1
 11933  05F3  1683               	bsf	3,5	;RP0=1, select bank1
 11934  05F4  1303               	bcf	3,6	;RP1=0, select bank1
 11935  05F5  0845               	movf	??___fldiv^(0+128),w
 11936  05F6  1283               	bcf	3,5	;RP0=0, select bank0
 11937  05F7  1303               	bcf	3,6	;RP1=0, select bank0
 11938  05F8  00D6               	movwf	___fldiv@b
 11939  05F9                     l7598:
 11940  05F9  3001               	movlw	1
 11941  05FA  1683               	bsf	3,5	;RP0=1, select bank1
 11942  05FB  1303               	bcf	3,6	;RP1=0, select bank1
 11943  05FC  07CF               	addwf	___fldiv@new_exp^(0+128),f
 11944  05FD  1803               	skipnc
 11945  05FE  0AD0               	incf	(___fldiv@new_exp+1)^(0+128),f
 11946  05FF  3000               	movlw	0
 11947  0600  07D0               	addwf	(___fldiv@new_exp+1)^(0+128),f
 11948  0601                     l7600:
 11949  0601  1683               	bsf	3,5	;RP0=1, select bank1
 11950  0602  1303               	bcf	3,6	;RP1=0, select bank1
 11951  0603  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
 11952  0604  3A80               	xorlw	128
 11953  0605  00FF               	movwf	btemp+1
 11954  0606  3080               	movlw	128
 11955  0607  027F               	subwf	btemp+1,w
 11956  0608  1D03               	skipz
 11957  0609  2E0C               	goto	u5265
 11958  060A  30FF               	movlw	255
 11959  060B  024F               	subwf	___fldiv@new_exp^(0+128),w
 11960  060C                     u5265:
 11961  060C  1C03               	skipc
 11962  060D  2E0F               	goto	u5261
 11963  060E  2E10               	goto	u5260
 11964  060F                     u5261:
 11965  060F  2E20               	goto	l7604
 11966  0610                     u5260:
 11967  0610                     l7602:
 11968  0610  30FF               	movlw	255
 11969  0611  1683               	bsf	3,5	;RP0=1, select bank1
 11970  0612  1303               	bcf	3,6	;RP1=0, select bank1
 11971  0613  00CF               	movwf	___fldiv@new_exp^(0+128)
 11972  0614  3000               	movlw	0
 11973  0615  00D0               	movwf	(___fldiv@new_exp^(0+128)+1)
 11974  0616  3000               	movlw	0
 11975  0617  1283               	bcf	3,5	;RP0=0, select bank0
 11976  0618  1303               	bcf	3,6	;RP1=0, select bank0
 11977  0619  00D9               	movwf	___fldiv@b+3
 11978  061A  3000               	movlw	0
 11979  061B  00D8               	movwf	___fldiv@b+2
 11980  061C  3000               	movlw	0
 11981  061D  00D7               	movwf	___fldiv@b+1
 11982  061E  3000               	movlw	0
 11983  061F  00D6               	movwf	___fldiv@b
 11984  0620                     l7604:
 11985  0620  1683               	bsf	3,5	;RP0=1, select bank1
 11986  0621  1303               	bcf	3,6	;RP1=0, select bank1
 11987  0622  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
 11988  0623  3A80               	xorlw	128
 11989  0624  00FF               	movwf	btemp+1
 11990  0625  3080               	movlw	128
 11991  0626  027F               	subwf	btemp+1,w
 11992  0627  1D03               	skipz
 11993  0628  2E2B               	goto	u5275
 11994  0629  3001               	movlw	1
 11995  062A  024F               	subwf	___fldiv@new_exp^(0+128),w
 11996  062B                     u5275:
 11997  062B  1803               	skipnc
 11998  062C  2E2E               	goto	u5271
 11999  062D  2E2F               	goto	u5270
 12000  062E                     u5271:
 12001  062E  2E40               	goto	l7612
 12002  062F                     u5270:
 12003  062F                     l7606:
 12004  062F  1683               	bsf	3,5	;RP0=1, select bank1
 12005  0630  1303               	bcf	3,6	;RP1=0, select bank1
 12006  0631  01CF               	clrf	___fldiv@new_exp^(0+128)
 12007  0632  01D0               	clrf	(___fldiv@new_exp+1)^(0+128)
 12008  0633                     l7608:
 12009  0633  3000               	movlw	0
 12010  0634  1283               	bcf	3,5	;RP0=0, select bank0
 12011  0635  1303               	bcf	3,6	;RP1=0, select bank0
 12012  0636  00D9               	movwf	___fldiv@b+3
 12013  0637  3000               	movlw	0
 12014  0638  00D8               	movwf	___fldiv@b+2
 12015  0639  3000               	movlw	0
 12016  063A  00D7               	movwf	___fldiv@b+1
 12017  063B  3000               	movlw	0
 12018  063C  00D6               	movwf	___fldiv@b
 12019  063D                     l7610:
 12020  063D  1683               	bsf	3,5	;RP0=1, select bank1
 12021  063E  1303               	bcf	3,6	;RP1=0, select bank1
 12022  063F  01CE               	clrf	___fldiv@sign^(0+128)
 12023  0640                     l7612:
 12024  0640  1683               	bsf	3,5	;RP0=1, select bank1
 12025  0641  1303               	bcf	3,6	;RP1=0, select bank1
 12026  0642  084F               	movf	___fldiv@new_exp^(0+128),w
 12027  0643  00FF               	movwf	btemp+1
 12028  0644  087F               	movf	btemp+1,w
 12029  0645  00D5               	movwf	___fldiv@bexp^(0+128)
 12030  0646                     l7614:
 12031  0646  1C55               	btfss	___fldiv@bexp^(0+128),0
 12032  0647  2E49               	goto	u5281
 12033  0648  2E4A               	goto	u5280
 12034  0649                     u5281:
 12035  0649  2E4E               	goto	l7618
 12036  064A                     u5280:
 12037  064A                     l7616:
 12038  064A  1283               	bcf	3,5	;RP0=0, select bank0
 12039  064B  1303               	bcf	3,6	;RP1=0, select bank0
 12040  064C  17D8               	bsf	___fldiv@b+2,7
 12041  064D  2E54               	goto	l1335
 12042  064E                     l7618:
 12043  064E  307F               	movlw	127
 12044  064F  00FF               	movwf	btemp+1
 12045  0650  087F               	movf	btemp+1,w
 12046  0651  1283               	bcf	3,5	;RP0=0, select bank0
 12047  0652  1303               	bcf	3,6	;RP1=0, select bank0
 12048  0653  05D8               	andwf	___fldiv@b+2,f
 12049  0654                     l1335:
 12050  0654  1683               	bsf	3,5	;RP0=1, select bank1
 12051  0655  1303               	bcf	3,6	;RP1=0, select bank1
 12052  0656  0855               	movf	___fldiv@bexp^(0+128),w
 12053  0657  00C5               	movwf	??___fldiv^(0+128)
 12054  0658  1003               	clrc
 12055  0659  0C45               	rrf	??___fldiv^(0+128),w
 12056  065A  00FF               	movwf	btemp+1
 12057  065B  087F               	movf	btemp+1,w
 12058  065C  1283               	bcf	3,5	;RP0=0, select bank0
 12059  065D  1303               	bcf	3,6	;RP1=0, select bank0
 12060  065E  00D9               	movwf	___fldiv@b+3
 12061  065F  1683               	bsf	3,5	;RP0=1, select bank1
 12062  0660  1303               	bcf	3,6	;RP1=0, select bank1
 12063  0661  084E               	movf	___fldiv@sign^(0+128),w
 12064  0662  00FF               	movwf	btemp+1
 12065  0663  087F               	movf	btemp+1,w
 12066  0664  1283               	bcf	3,5	;RP0=0, select bank0
 12067  0665  1303               	bcf	3,6	;RP1=0, select bank0
 12068  0666  04D9               	iorwf	___fldiv@b+3,f
 12069  0667  2C6E               	goto	l7524
 12070  0668                     l1313:
 12071  0668  0008               	return
 12072  0669                     __end_of___fldiv:
 12073                           
 12074                           	psect	text53
 12075  1EC9                     __ptext53:	
 12076 ;; *************** function _LED_ACTION *****************
 12077 ;; Defined at:
 12078 ;;		line 138 in file "MainAppSW.c"
 12079 ;; Parameters:    Size  Location     Type
 12080 ;;		None
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;		None
 12083 ;; Return value:  Size  Location     Type
 12084 ;;                  1    wreg      void 
 12085 ;; Registers used:
 12086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12087 ;; Tracked objects:
 12088 ;;		On entry : 0/0
 12089 ;;		On exit  : 0/0
 12090 ;;		Unchanged: 0/0
 12091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12092 ;;      Params:         0       0       0       0       0
 12093 ;;      Locals:         0       0       0       0       0
 12094 ;;      Temps:          0       0       0       0       0
 12095 ;;      Totals:         0       0       0       0       0
 12096 ;;Total ram usage:        0 bytes
 12097 ;; Hardware stack levels used:    1
 12098 ;; Hardware stack levels required when called:    5
 12099 ;; This function calls:
 12100 ;;		_Led_Off
 12101 ;;		_Led_On
 12102 ;;		_Led_Toggle
 12103 ;; This function is called by:
 12104 ;;		_App_Update
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           
 12109                           ;psect for function _LED_ACTION
 12110  1EC9                     _LED_ACTION:
 12111  1EC9                     l7942:	
 12112                           ;incstack = 0
 12113                           ; Regs used in _LED_ACTION: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12114                           
 12115                           
 12116                           ;MainAppSW.c: 140:     u16_LED_Counter += 20;
 12117  1EC9  3014               	movlw	20
 12118  1ECA  1683               	bsf	3,5	;RP0=1, select bank1
 12119  1ECB  1303               	bcf	3,6	;RP1=0, select bank1
 12120  1ECC  07BC               	addwf	_u16_LED_Counter^(0+128),f
 12121  1ECD  1803               	skipnc
 12122  1ECE  0ABD               	incf	(_u16_LED_Counter+1)^(0+128),f
 12123  1ECF  3000               	movlw	0
 12124  1ED0  07BD               	addwf	(_u16_LED_Counter+1)^(0+128),f
 12125  1ED1                     l7944:
 12126                           
 12127                           ;MainAppSW.c: 141:     if((u8_Heating_Element_Led_State == 2) && (u16_LED_Counter == 100
      +                          0) )
 12128  1ED1  3002               	movlw	2
 12129  1ED2  0678               	xorwf	_u8_Heating_Element_Led_State,w
 12130  1ED3  1D03               	btfss	3,2
 12131  1ED4  2ED6               	goto	u5911
 12132  1ED5  2ED7               	goto	u5910
 12133  1ED6                     u5911:
 12134  1ED6  2EEB               	goto	l7952
 12135  1ED7                     u5910:
 12136  1ED7                     l7946:
 12137  1ED7  30E8               	movlw	232
 12138  1ED8  063C               	xorwf	_u16_LED_Counter^(0+128),w
 12139  1ED9  3003               	movlw	3
 12140  1EDA  1903               	skipnz
 12141  1EDB  063D               	xorwf	(_u16_LED_Counter+1)^(0+128),w
 12142  1EDC  1D03               	btfss	3,2
 12143  1EDD  2EDF               	goto	u5921
 12144  1EDE  2EE0               	goto	u5920
 12145  1EDF                     u5921:
 12146  1EDF  2EEB               	goto	l7952
 12147  1EE0                     u5920:
 12148  1EE0                     l7948:
 12149                           
 12150                           ;MainAppSW.c: 142:     {;MainAppSW.c: 143:         Led_Toggle(0);
 12151  1EE0  3000               	movlw	0
 12152  1EE1  160A  118A  200C  160A  158A  	fcall	_Led_Toggle
 12153  1EE6                     l7950:
 12154                           
 12155                           ;MainAppSW.c: 144:         u16_LED_Counter=0;
 12156  1EE6  1683               	bsf	3,5	;RP0=1, select bank1
 12157  1EE7  1303               	bcf	3,6	;RP1=0, select bank1
 12158  1EE8  01BC               	clrf	_u16_LED_Counter^(0+128)
 12159  1EE9  01BD               	clrf	(_u16_LED_Counter+1)^(0+128)
 12160                           
 12161                           ;MainAppSW.c: 145:     }
 12162  1EEA  2F03               	goto	l344
 12163  1EEB                     l7952:
 12164  1EEB  0378               	decf	_u8_Heating_Element_Led_State,w
 12165  1EEC  1D03               	btfss	3,2
 12166  1EED  2EEF               	goto	u5931
 12167  1EEE  2EF0               	goto	u5930
 12168  1EEF                     u5931:
 12169  1EEF  2EF7               	goto	l7958
 12170  1EF0                     u5930:
 12171  1EF0                     l7954:
 12172                           
 12173                           ;MainAppSW.c: 147:     {;MainAppSW.c: 148:         Led_On(0);
 12174  1EF0  3000               	movlw	0
 12175  1EF1  160A  118A  22BA  160A  158A  	fcall	_Led_On
 12176  1EF6  2EE6               	goto	l7950
 12177  1EF7                     l7958:
 12178  1EF7  0878               	movf	_u8_Heating_Element_Led_State,w
 12179  1EF8  1D03               	btfss	3,2
 12180  1EF9  2EFB               	goto	u5941
 12181  1EFA  2EFC               	goto	u5940
 12182  1EFB                     u5941:
 12183  1EFB  2F03               	goto	l344
 12184  1EFC                     u5940:
 12185  1EFC                     l7960:
 12186                           
 12187                           ;MainAppSW.c: 152:     {;MainAppSW.c: 153:         Led_Off(0);
 12188  1EFC  3000               	movlw	0
 12189  1EFD  160A  118A  20E4  160A  158A  	fcall	_Led_Off
 12190  1F02  2EE6               	goto	l7950
 12191  1F03                     l344:
 12192  1F03  0008               	return
 12193  1F04                     __end_of_LED_ACTION:
 12194                           
 12195                           	psect	text54
 12196  100C                     __ptext54:	
 12197 ;; *************** function _Led_Toggle *****************
 12198 ;; Defined at:
 12199 ;;		line 103 in file "led.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  u8_led_ID       1    wreg     unsigned char 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  u8_led_ID       1   16[BANK0 ] unsigned char 
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  1    wreg      void 
 12206 ;; Registers used:
 12207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12213 ;;      Params:         0       0       0       0       0
 12214 ;;      Locals:         0       1       0       0       0
 12215 ;;      Temps:          0       2       0       0       0
 12216 ;;      Totals:         0       3       0       0       0
 12217 ;;Total ram usage:        3 bytes
 12218 ;; Hardware stack levels used:    1
 12219 ;; Hardware stack levels required when called:    4
 12220 ;; This function calls:
 12221 ;;		_DIO_Toggle
 12222 ;; This function is called by:
 12223 ;;		_LED_ACTION
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _Led_Toggle
 12229  100C                     _Led_Toggle:
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in _Led_Toggle: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12233                           ;Led_Toggle@u8_led_ID stored from wreg
 12234  100C  1283               	bcf	3,5	;RP0=0, select bank0
 12235  100D  1303               	bcf	3,6	;RP1=0, select bank0
 12236  100E  00B0               	movwf	Led_Toggle@u8_led_ID
 12237  100F                     l7286:
 12238                           
 12239                           ;led.c: 104:  switch(u8_led_ID){
 12240  100F  283C               	goto	l7298
 12241  1010                     l7288:
 12242                           
 12243                           ;led.c: 106:    DIO_Toggle((1), (0x80) );
 12244  1010  3080               	movlw	128
 12245  1011  00FF               	movwf	btemp+1
 12246  1012  087F               	movf	btemp+1,w
 12247  1013  00AA               	movwf	DIO_Toggle@u8_pins
 12248  1014  3001               	movlw	1
 12249  1015  160A  158A  2624  160A  118A  	fcall	_DIO_Toggle
 12250                           
 12251                           ;led.c: 107:    break;
 12252  101A  2852               	goto	l702
 12253  101B                     l7290:
 12254                           
 12255                           ;led.c: 109:    DIO_Toggle((1), (0x40) );
 12256  101B  3040               	movlw	64
 12257  101C  00FF               	movwf	btemp+1
 12258  101D  087F               	movf	btemp+1,w
 12259  101E  00AA               	movwf	DIO_Toggle@u8_pins
 12260  101F  3001               	movlw	1
 12261  1020  160A  158A  2624  160A  118A  	fcall	_DIO_Toggle
 12262                           
 12263                           ;led.c: 110:    break;
 12264  1025  2852               	goto	l702
 12265  1026                     l7292:
 12266                           
 12267                           ;led.c: 112:    DIO_Toggle((1), (0x20) );
 12268  1026  3020               	movlw	32
 12269  1027  00FF               	movwf	btemp+1
 12270  1028  087F               	movf	btemp+1,w
 12271  1029  00AA               	movwf	DIO_Toggle@u8_pins
 12272  102A  3001               	movlw	1
 12273  102B  160A  158A  2624  160A  118A  	fcall	_DIO_Toggle
 12274                           
 12275                           ;led.c: 113:    break;
 12276  1030  2852               	goto	l702
 12277  1031                     l7294:
 12278                           
 12279                           ;led.c: 115:    DIO_Toggle((1), (0x10) );
 12280  1031  3010               	movlw	16
 12281  1032  00FF               	movwf	btemp+1
 12282  1033  087F               	movf	btemp+1,w
 12283  1034  00AA               	movwf	DIO_Toggle@u8_pins
 12284  1035  3001               	movlw	1
 12285  1036  160A  158A  2624  160A  118A  	fcall	_DIO_Toggle
 12286                           
 12287                           ;led.c: 116:    break;
 12288  103B  2852               	goto	l702
 12289  103C                     l7298:
 12290  103C  0830               	movf	Led_Toggle@u8_led_ID,w
 12291  103D  00AE               	movwf	??_Led_Toggle
 12292  103E  01AF               	clrf	??_Led_Toggle+1
 12293                           
 12294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12295                           ; Switch size 1, requested type "simple"
 12296                           ; Number of cases is 1, Range of values is 0 to 0
 12297                           ; switch strategies available:
 12298                           ; Name         Instructions Cycles
 12299                           ; simple_byte            4     3 (average)
 12300                           ; direct_byte           11     8 (fixed)
 12301                           ; jumptable            260     6 (fixed)
 12302                           ;	Chosen strategy is simple_byte
 12303  103F  082F               	movf	??_Led_Toggle+1,w
 12304  1040  3A00               	xorlw	0	; case 0
 12305  1041  1903               	skipnz
 12306  1042  2844               	goto	l9842
 12307  1043  2852               	goto	l702
 12308  1044                     l9842:
 12309                           
 12310                           ; Switch size 1, requested type "simple"
 12311                           ; Number of cases is 4, Range of values is 0 to 3
 12312                           ; switch strategies available:
 12313                           ; Name         Instructions Cycles
 12314                           ; simple_byte           13     7 (average)
 12315                           ; direct_byte           20     8 (fixed)
 12316                           ; jumptable            260     6 (fixed)
 12317                           ;	Chosen strategy is simple_byte
 12318  1044  082E               	movf	??_Led_Toggle,w
 12319  1045  3A00               	xorlw	0	; case 0
 12320  1046  1903               	skipnz
 12321  1047  2810               	goto	l7288
 12322  1048  3A01               	xorlw	1	; case 1
 12323  1049  1903               	skipnz
 12324  104A  281B               	goto	l7290
 12325  104B  3A03               	xorlw	3	; case 2
 12326  104C  1903               	skipnz
 12327  104D  2826               	goto	l7292
 12328  104E  3A01               	xorlw	1	; case 3
 12329  104F  1903               	skipnz
 12330  1050  2831               	goto	l7294
 12331  1051  2852               	goto	l702
 12332  1052                     l702:
 12333  1052  0008               	return
 12334  1053                     __end_of_Led_Toggle:
 12335                           
 12336                           	psect	text55
 12337  1E24                     __ptext55:	
 12338 ;; *************** function _DIO_Toggle *****************
 12339 ;; Defined at:
 12340 ;;		line 327 in file "DIO.c"
 12341 ;; Parameters:    Size  Location     Type
 12342 ;;  u8_GPIO         1    wreg     unsigned char 
 12343 ;;  u8_pins         1   10[BANK0 ] unsigned char 
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;  u8_GPIO         1   13[BANK0 ] unsigned char 
 12346 ;; Return value:  Size  Location     Type
 12347 ;;                  1    wreg      void 
 12348 ;; Registers used:
 12349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12350 ;; Tracked objects:
 12351 ;;		On entry : 0/0
 12352 ;;		On exit  : 0/0
 12353 ;;		Unchanged: 0/0
 12354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12355 ;;      Params:         0       1       0       0       0
 12356 ;;      Locals:         0       1       0       0       0
 12357 ;;      Temps:          0       2       0       0       0
 12358 ;;      Totals:         0       4       0       0       0
 12359 ;;Total ram usage:        4 bytes
 12360 ;; Hardware stack levels used:    1
 12361 ;; Hardware stack levels required when called:    3
 12362 ;; This function calls:
 12363 ;;		Nothing
 12364 ;; This function is called by:
 12365 ;;		_Led_Toggle
 12366 ;; This function uses a non-reentrant model
 12367 ;;
 12368                           
 12369                           
 12370                           ;psect for function _DIO_Toggle
 12371  1E24                     _DIO_Toggle:
 12372                           
 12373                           ;incstack = 0
 12374                           ; Regs used in _DIO_Toggle: [wreg-fsr0h+status,2+status,0+btemp+1]
 12375                           ;DIO_Toggle@u8_GPIO stored from wreg
 12376  1E24  1283               	bcf	3,5	;RP0=0, select bank0
 12377  1E25  1303               	bcf	3,6	;RP1=0, select bank0
 12378  1E26  00AD               	movwf	DIO_Toggle@u8_GPIO
 12379  1E27                     l7106:
 12380                           
 12381                           ;DIO.c: 327: void DIO_Toggle (uint8 u8_GPIO, uint8 u8_pins);DIO.c: 328: {;DIO.c: 329:  s
      +                          witch (u8_GPIO)
 12382  1E27  2E41               	goto	l7120
 12383  1E28                     l7108:
 12384                           
 12385                           ;DIO.c: 332:    ((PORTA))^=(u8_pins);
 12386  1E28  082A               	movf	DIO_Toggle@u8_pins,w	;volatile
 12387  1E29  00FF               	movwf	btemp+1
 12388  1E2A  087F               	movf	btemp+1,w
 12389  1E2B  0685               	xorwf	5,f	;volatile
 12390                           
 12391                           ;DIO.c: 333:    break;
 12392  1E2C  2E5A               	goto	l140
 12393  1E2D                     l7110:
 12394                           
 12395                           ;DIO.c: 335:    ((PORTB))^=(u8_pins);
 12396  1E2D  082A               	movf	DIO_Toggle@u8_pins,w	;volatile
 12397  1E2E  00FF               	movwf	btemp+1
 12398  1E2F  087F               	movf	btemp+1,w
 12399  1E30  0686               	xorwf	6,f	;volatile
 12400                           
 12401                           ;DIO.c: 336:    break;
 12402  1E31  2E5A               	goto	l140
 12403  1E32                     l7112:
 12404                           
 12405                           ;DIO.c: 338:    ((PORTC))^=(u8_pins);
 12406  1E32  082A               	movf	DIO_Toggle@u8_pins,w	;volatile
 12407  1E33  00FF               	movwf	btemp+1
 12408  1E34  087F               	movf	btemp+1,w
 12409  1E35  0687               	xorwf	7,f	;volatile
 12410                           
 12411                           ;DIO.c: 339:    break;
 12412  1E36  2E5A               	goto	l140
 12413  1E37                     l7114:
 12414                           
 12415                           ;DIO.c: 341:    ((PORTD))^=(u8_pins);
 12416  1E37  082A               	movf	DIO_Toggle@u8_pins,w	;volatile
 12417  1E38  00FF               	movwf	btemp+1
 12418  1E39  087F               	movf	btemp+1,w
 12419  1E3A  0688               	xorwf	8,f	;volatile
 12420                           
 12421                           ;DIO.c: 342:    break;
 12422  1E3B  2E5A               	goto	l140
 12423  1E3C                     l7116:
 12424                           
 12425                           ;DIO.c: 344:    ((PORTE))^=(u8_pins);
 12426  1E3C  082A               	movf	DIO_Toggle@u8_pins,w	;volatile
 12427  1E3D  00FF               	movwf	btemp+1
 12428  1E3E  087F               	movf	btemp+1,w
 12429  1E3F  0689               	xorwf	9,f	;volatile
 12430                           
 12431                           ;DIO.c: 345:    break;
 12432  1E40  2E5A               	goto	l140
 12433  1E41                     l7120:
 12434  1E41  082D               	movf	DIO_Toggle@u8_GPIO,w
 12435  1E42  00AB               	movwf	??_DIO_Toggle
 12436  1E43  01AC               	clrf	??_DIO_Toggle+1
 12437                           
 12438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12439                           ; Switch size 1, requested type "simple"
 12440                           ; Number of cases is 1, Range of values is 0 to 0
 12441                           ; switch strategies available:
 12442                           ; Name         Instructions Cycles
 12443                           ; simple_byte            4     3 (average)
 12444                           ; direct_byte           11     8 (fixed)
 12445                           ; jumptable            260     6 (fixed)
 12446                           ;	Chosen strategy is simple_byte
 12447  1E44  082C               	movf	??_DIO_Toggle+1,w
 12448  1E45  3A00               	xorlw	0	; case 0
 12449  1E46  1903               	skipnz
 12450  1E47  2E49               	goto	l9844
 12451  1E48  2E5A               	goto	l140
 12452  1E49                     l9844:
 12453                           
 12454                           ; Switch size 1, requested type "simple"
 12455                           ; Number of cases is 5, Range of values is 0 to 4
 12456                           ; switch strategies available:
 12457                           ; Name         Instructions Cycles
 12458                           ; simple_byte           16     9 (average)
 12459                           ; direct_byte           23     8 (fixed)
 12460                           ; jumptable            260     6 (fixed)
 12461                           ;	Chosen strategy is simple_byte
 12462  1E49  082B               	movf	??_DIO_Toggle,w
 12463  1E4A  3A00               	xorlw	0	; case 0
 12464  1E4B  1903               	skipnz
 12465  1E4C  2E28               	goto	l7108
 12466  1E4D  3A01               	xorlw	1	; case 1
 12467  1E4E  1903               	skipnz
 12468  1E4F  2E2D               	goto	l7110
 12469  1E50  3A03               	xorlw	3	; case 2
 12470  1E51  1903               	skipnz
 12471  1E52  2E32               	goto	l7112
 12472  1E53  3A01               	xorlw	1	; case 3
 12473  1E54  1903               	skipnz
 12474  1E55  2E37               	goto	l7114
 12475  1E56  3A07               	xorlw	7	; case 4
 12476  1E57  1903               	skipnz
 12477  1E58  2E3C               	goto	l7116
 12478  1E59  2E5A               	goto	l140
 12479  1E5A                     l140:
 12480  1E5A  0008               	return
 12481  1E5B                     __end_of_DIO_Toggle:
 12482                           
 12483                           	psect	text56
 12484  12BA                     __ptext56:	
 12485 ;; *************** function _Led_On *****************
 12486 ;; Defined at:
 12487 ;;		line 56 in file "led.c"
 12488 ;; Parameters:    Size  Location     Type
 12489 ;;  u8_led_ID       1    wreg     unsigned char 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  u8_led_ID       1   17[BANK0 ] unsigned char 
 12492 ;; Return value:  Size  Location     Type
 12493 ;;                  1    wreg      void 
 12494 ;; Registers used:
 12495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12496 ;; Tracked objects:
 12497 ;;		On entry : 0/0
 12498 ;;		On exit  : 0/0
 12499 ;;		Unchanged: 0/0
 12500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12501 ;;      Params:         0       0       0       0       0
 12502 ;;      Locals:         0       1       0       0       0
 12503 ;;      Temps:          0       2       0       0       0
 12504 ;;      Totals:         0       3       0       0       0
 12505 ;;Total ram usage:        3 bytes
 12506 ;; Hardware stack levels used:    1
 12507 ;; Hardware stack levels required when called:    4
 12508 ;; This function calls:
 12509 ;;		_DIO_Write
 12510 ;; This function is called by:
 12511 ;;		_LED_ACTION
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           
 12516                           ;psect for function _Led_On
 12517  12BA                     _Led_On:
 12518                           
 12519                           ;incstack = 0
 12520                           ; Regs used in _Led_On: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12521                           ;Led_On@u8_led_ID stored from wreg
 12522  12BA  1283               	bcf	3,5	;RP0=0, select bank0
 12523  12BB  1303               	bcf	3,6	;RP1=0, select bank0
 12524  12BC  00B1               	movwf	Led_On@u8_led_ID
 12525  12BD                     l7306:
 12526                           
 12527                           ;led.c: 57:  switch(u8_led_ID){
 12528  12BD  2AFA               	goto	l7318
 12529  12BE                     l7308:
 12530                           
 12531                           ;led.c: 59:    DIO_Write((1), (0x80) , 0xFF);
 12532  12BE  3080               	movlw	128
 12533  12BF  00FF               	movwf	btemp+1
 12534  12C0  087F               	movf	btemp+1,w
 12535  12C1  00AA               	movwf	DIO_Write@u8_pins
 12536  12C2  30FF               	movlw	255
 12537  12C3  00FF               	movwf	btemp+1
 12538  12C4  087F               	movf	btemp+1,w
 12539  12C5  00AB               	movwf	DIO_Write@u8_value
 12540  12C6  3001               	movlw	1
 12541  12C7  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12542                           
 12543                           ;led.c: 60:    break;
 12544  12CC  2B10               	goto	l684
 12545  12CD                     l7310:
 12546                           
 12547                           ;led.c: 62:    DIO_Write((1), (0x40) , 0xFF);
 12548  12CD  3040               	movlw	64
 12549  12CE  00FF               	movwf	btemp+1
 12550  12CF  087F               	movf	btemp+1,w
 12551  12D0  00AA               	movwf	DIO_Write@u8_pins
 12552  12D1  30FF               	movlw	255
 12553  12D2  00FF               	movwf	btemp+1
 12554  12D3  087F               	movf	btemp+1,w
 12555  12D4  00AB               	movwf	DIO_Write@u8_value
 12556  12D5  3001               	movlw	1
 12557  12D6  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12558                           
 12559                           ;led.c: 63:    break;
 12560  12DB  2B10               	goto	l684
 12561  12DC                     l7312:
 12562                           
 12563                           ;led.c: 65:    DIO_Write((1), (0x20) , 0xFF);
 12564  12DC  3020               	movlw	32
 12565  12DD  00FF               	movwf	btemp+1
 12566  12DE  087F               	movf	btemp+1,w
 12567  12DF  00AA               	movwf	DIO_Write@u8_pins
 12568  12E0  30FF               	movlw	255
 12569  12E1  00FF               	movwf	btemp+1
 12570  12E2  087F               	movf	btemp+1,w
 12571  12E3  00AB               	movwf	DIO_Write@u8_value
 12572  12E4  3001               	movlw	1
 12573  12E5  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12574                           
 12575                           ;led.c: 66:    break;
 12576  12EA  2B10               	goto	l684
 12577  12EB                     l7314:
 12578                           
 12579                           ;led.c: 68:    DIO_Write((1), (0x10) , 0xFF);
 12580  12EB  3010               	movlw	16
 12581  12EC  00FF               	movwf	btemp+1
 12582  12ED  087F               	movf	btemp+1,w
 12583  12EE  00AA               	movwf	DIO_Write@u8_pins
 12584  12EF  30FF               	movlw	255
 12585  12F0  00FF               	movwf	btemp+1
 12586  12F1  087F               	movf	btemp+1,w
 12587  12F2  00AB               	movwf	DIO_Write@u8_value
 12588  12F3  3001               	movlw	1
 12589  12F4  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12590                           
 12591                           ;led.c: 69:    break;
 12592  12F9  2B10               	goto	l684
 12593  12FA                     l7318:
 12594  12FA  0831               	movf	Led_On@u8_led_ID,w
 12595  12FB  00AF               	movwf	??_Led_On
 12596  12FC  01B0               	clrf	??_Led_On+1
 12597                           
 12598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12599                           ; Switch size 1, requested type "simple"
 12600                           ; Number of cases is 1, Range of values is 0 to 0
 12601                           ; switch strategies available:
 12602                           ; Name         Instructions Cycles
 12603                           ; simple_byte            4     3 (average)
 12604                           ; direct_byte           11     8 (fixed)
 12605                           ; jumptable            260     6 (fixed)
 12606                           ;	Chosen strategy is simple_byte
 12607  12FD  0830               	movf	??_Led_On+1,w
 12608  12FE  3A00               	xorlw	0	; case 0
 12609  12FF  1903               	skipnz
 12610  1300  2B02               	goto	l9846
 12611  1301  2B10               	goto	l684
 12612  1302                     l9846:
 12613                           
 12614                           ; Switch size 1, requested type "simple"
 12615                           ; Number of cases is 4, Range of values is 0 to 3
 12616                           ; switch strategies available:
 12617                           ; Name         Instructions Cycles
 12618                           ; simple_byte           13     7 (average)
 12619                           ; direct_byte           20     8 (fixed)
 12620                           ; jumptable            260     6 (fixed)
 12621                           ;	Chosen strategy is simple_byte
 12622  1302  082F               	movf	??_Led_On,w
 12623  1303  3A00               	xorlw	0	; case 0
 12624  1304  1903               	skipnz
 12625  1305  2ABE               	goto	l7308
 12626  1306  3A01               	xorlw	1	; case 1
 12627  1307  1903               	skipnz
 12628  1308  2ACD               	goto	l7310
 12629  1309  3A03               	xorlw	3	; case 2
 12630  130A  1903               	skipnz
 12631  130B  2ADC               	goto	l7312
 12632  130C  3A01               	xorlw	1	; case 3
 12633  130D  1903               	skipnz
 12634  130E  2AEB               	goto	l7314
 12635  130F  2B10               	goto	l684
 12636  1310                     l684:
 12637  1310  0008               	return
 12638  1311                     __end_of_Led_On:
 12639                           
 12640                           	psect	text57
 12641  10E4                     __ptext57:	
 12642 ;; *************** function _Led_Off *****************
 12643 ;; Defined at:
 12644 ;;		line 80 in file "led.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;  u8_led_ID       1    wreg     unsigned char 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  u8_led_ID       1   17[BANK0 ] unsigned char 
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  1    wreg      void 
 12651 ;; Registers used:
 12652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12658 ;;      Params:         0       0       0       0       0
 12659 ;;      Locals:         0       1       0       0       0
 12660 ;;      Temps:          0       2       0       0       0
 12661 ;;      Totals:         0       3       0       0       0
 12662 ;;Total ram usage:        3 bytes
 12663 ;; Hardware stack levels used:    1
 12664 ;; Hardware stack levels required when called:    4
 12665 ;; This function calls:
 12666 ;;		_DIO_Write
 12667 ;; This function is called by:
 12668 ;;		_LED_ACTION
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672                           
 12673                           ;psect for function _Led_Off
 12674  10E4                     _Led_Off:
 12675                           
 12676                           ;incstack = 0
 12677                           ; Regs used in _Led_Off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12678                           ;Led_Off@u8_led_ID stored from wreg
 12679  10E4  1283               	bcf	3,5	;RP0=0, select bank0
 12680  10E5  1303               	bcf	3,6	;RP1=0, select bank0
 12681  10E6  00B1               	movwf	Led_Off@u8_led_ID
 12682  10E7                     l7326:
 12683                           
 12684                           ;led.c: 81:  switch(u8_led_ID){
 12685  10E7  2918               	goto	l7338
 12686  10E8                     l7328:
 12687                           
 12688                           ;led.c: 83:    DIO_Write((1), (0x80) , 0);
 12689  10E8  3080               	movlw	128
 12690  10E9  00FF               	movwf	btemp+1
 12691  10EA  087F               	movf	btemp+1,w
 12692  10EB  00AA               	movwf	DIO_Write@u8_pins
 12693  10EC  01AB               	clrf	DIO_Write@u8_value
 12694  10ED  3001               	movlw	1
 12695  10EE  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12696                           
 12697                           ;led.c: 84:    break;
 12698  10F3  292E               	goto	l693
 12699  10F4                     l7330:
 12700                           
 12701                           ;led.c: 86:    DIO_Write((1), (0x40) , 0);
 12702  10F4  3040               	movlw	64
 12703  10F5  00FF               	movwf	btemp+1
 12704  10F6  087F               	movf	btemp+1,w
 12705  10F7  00AA               	movwf	DIO_Write@u8_pins
 12706  10F8  01AB               	clrf	DIO_Write@u8_value
 12707  10F9  3001               	movlw	1
 12708  10FA  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12709                           
 12710                           ;led.c: 87:    break;
 12711  10FF  292E               	goto	l693
 12712  1100                     l7332:
 12713                           
 12714                           ;led.c: 89:    DIO_Write((1), (0x20) , 0);
 12715  1100  3020               	movlw	32
 12716  1101  00FF               	movwf	btemp+1
 12717  1102  087F               	movf	btemp+1,w
 12718  1103  00AA               	movwf	DIO_Write@u8_pins
 12719  1104  01AB               	clrf	DIO_Write@u8_value
 12720  1105  3001               	movlw	1
 12721  1106  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12722                           
 12723                           ;led.c: 90:    break;
 12724  110B  292E               	goto	l693
 12725  110C                     l7334:
 12726                           
 12727                           ;led.c: 92:    DIO_Write((1), (0x10) , 0);
 12728  110C  3010               	movlw	16
 12729  110D  00FF               	movwf	btemp+1
 12730  110E  087F               	movf	btemp+1,w
 12731  110F  00AA               	movwf	DIO_Write@u8_pins
 12732  1110  01AB               	clrf	DIO_Write@u8_value
 12733  1111  3001               	movlw	1
 12734  1112  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 12735                           
 12736                           ;led.c: 93:    break;
 12737  1117  292E               	goto	l693
 12738  1118                     l7338:
 12739  1118  0831               	movf	Led_Off@u8_led_ID,w
 12740  1119  00AF               	movwf	??_Led_Off
 12741  111A  01B0               	clrf	??_Led_Off+1
 12742                           
 12743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12744                           ; Switch size 1, requested type "simple"
 12745                           ; Number of cases is 1, Range of values is 0 to 0
 12746                           ; switch strategies available:
 12747                           ; Name         Instructions Cycles
 12748                           ; simple_byte            4     3 (average)
 12749                           ; direct_byte           11     8 (fixed)
 12750                           ; jumptable            260     6 (fixed)
 12751                           ;	Chosen strategy is simple_byte
 12752  111B  0830               	movf	??_Led_Off+1,w
 12753  111C  3A00               	xorlw	0	; case 0
 12754  111D  1903               	skipnz
 12755  111E  2920               	goto	l9848
 12756  111F  292E               	goto	l693
 12757  1120                     l9848:
 12758                           
 12759                           ; Switch size 1, requested type "simple"
 12760                           ; Number of cases is 4, Range of values is 0 to 3
 12761                           ; switch strategies available:
 12762                           ; Name         Instructions Cycles
 12763                           ; simple_byte           13     7 (average)
 12764                           ; direct_byte           20     8 (fixed)
 12765                           ; jumptable            260     6 (fixed)
 12766                           ;	Chosen strategy is simple_byte
 12767  1120  082F               	movf	??_Led_Off,w
 12768  1121  3A00               	xorlw	0	; case 0
 12769  1122  1903               	skipnz
 12770  1123  28E8               	goto	l7328
 12771  1124  3A01               	xorlw	1	; case 1
 12772  1125  1903               	skipnz
 12773  1126  28F4               	goto	l7330
 12774  1127  3A03               	xorlw	3	; case 2
 12775  1128  1903               	skipnz
 12776  1129  2900               	goto	l7332
 12777  112A  3A01               	xorlw	1	; case 3
 12778  112B  1903               	skipnz
 12779  112C  290C               	goto	l7334
 12780  112D  292E               	goto	l693
 12781  112E                     l693:
 12782  112E  0008               	return
 12783  112F                     __end_of_Led_Off:
 12784                           
 12785                           	psect	text58
 12786  109A                     __ptext58:	
 12787 ;; *************** function _Heater_Cooler_action *****************
 12788 ;; Defined at:
 12789 ;;		line 120 in file "MainAppSW.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;		None
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      void 
 12796 ;; Registers used:
 12797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12803 ;;      Params:         0       0       0       0       0
 12804 ;;      Locals:         0       0       0       0       0
 12805 ;;      Temps:          0       3       0       0       0
 12806 ;;      Totals:         0       3       0       0       0
 12807 ;;Total ram usage:        3 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    5
 12810 ;; This function calls:
 12811 ;;		_Cooler_Turn
 12812 ;;		_Heater_Turn
 12813 ;; This function is called by:
 12814 ;;		_App_Update
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           
 12819                           ;psect for function _Heater_Cooler_action
 12820  109A                     _Heater_Cooler_action:
 12821  109A                     l7930:	
 12822                           ;incstack = 0
 12823                           ; Regs used in _Heater_Cooler_action: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
 12824                           
 12825                           
 12826                           ;MainAppSW.c: 122:     if(u8_AVG_Temperature < (u8_SetTemperature-5))
 12827  109A  087A               	movf	_u8_SetTemperature,w
 12828  109B  3EFB               	addlw	251
 12829  109C  1283               	bcf	3,5	;RP0=0, select bank0
 12830  109D  1303               	bcf	3,6	;RP1=0, select bank0
 12831  109E  00B0               	movwf	??_Heater_Cooler_action
 12832  109F  30FF               	movlw	255
 12833  10A0  1803               	skipnc
 12834  10A1  3000               	movlw	0
 12835  10A2  00B1               	movwf	??_Heater_Cooler_action+1
 12836  10A3  0831               	movf	??_Heater_Cooler_action+1,w
 12837  10A4  3A80               	xorlw	128
 12838  10A5  3C80               	sublw	128
 12839  10A6  1D03               	skipz
 12840  10A7  28AA               	goto	u5895
 12841  10A8  0830               	movf	??_Heater_Cooler_action,w
 12842  10A9  0279               	subwf	_u8_AVG_Temperature,w
 12843  10AA                     u5895:
 12844  10AA  1803               	skipnc
 12845  10AB  28AD               	goto	u5891
 12846  10AC  28AE               	goto	u5890
 12847  10AD                     u5891:
 12848  10AD  28BF               	goto	l7936
 12849  10AE                     u5890:
 12850  10AE                     l7932:
 12851                           
 12852                           ;MainAppSW.c: 123:     {;MainAppSW.c: 124:         Heater_Turn(0xFF);
 12853  10AE  30FF               	movlw	255
 12854  10AF  160A  158A  23F6  160A  118A  	fcall	_Heater_Turn
 12855                           
 12856                           ;MainAppSW.c: 125:         Cooler_Turn(0);
 12857  10B4  3000               	movlw	0
 12858  10B5  160A  158A  23E4  160A  118A  	fcall	_Cooler_Turn
 12859  10BA                     l7934:
 12860                           
 12861                           ;MainAppSW.c: 126:         u8_Heating_Element_Led_State=2;
 12862  10BA  3002               	movlw	2
 12863  10BB  00FF               	movwf	btemp+1
 12864  10BC  087F               	movf	btemp+1,w
 12865  10BD  00F8               	movwf	_u8_Heating_Element_Led_State
 12866                           
 12867                           ;MainAppSW.c: 127:     }
 12868  10BE  28E3               	goto	l336
 12869  10BF                     l7936:
 12870  10BF  087A               	movf	_u8_SetTemperature,w
 12871  10C0  3E05               	addlw	5
 12872  10C1  1283               	bcf	3,5	;RP0=0, select bank0
 12873  10C2  1303               	bcf	3,6	;RP1=0, select bank0
 12874  10C3  00B0               	movwf	??_Heater_Cooler_action
 12875  10C4  3000               	movlw	0
 12876  10C5  1803               	skipnc
 12877  10C6  3001               	movlw	1
 12878  10C7  00B1               	movwf	??_Heater_Cooler_action+1
 12879  10C8  0831               	movf	??_Heater_Cooler_action+1,w
 12880  10C9  3A80               	xorlw	128
 12881  10CA  00B2               	movwf	??_Heater_Cooler_action+2
 12882  10CB  3080               	movlw	128
 12883  10CC  0232               	subwf	??_Heater_Cooler_action+2,w
 12884  10CD  1D03               	skipz
 12885  10CE  28D1               	goto	u5905
 12886  10CF  0879               	movf	_u8_AVG_Temperature,w
 12887  10D0  0230               	subwf	??_Heater_Cooler_action,w
 12888  10D1                     u5905:
 12889  10D1  1803               	skipnc
 12890  10D2  28D4               	goto	u5901
 12891  10D3  28D5               	goto	u5900
 12892  10D4                     u5901:
 12893  10D4  28E3               	goto	l336
 12894  10D5                     u5900:
 12895  10D5                     l7938:
 12896                           
 12897                           ;MainAppSW.c: 129:     {;MainAppSW.c: 130:         Heater_Turn(0);
 12898  10D5  3000               	movlw	0
 12899  10D6  160A  158A  23F6  160A  118A  	fcall	_Heater_Turn
 12900                           
 12901                           ;MainAppSW.c: 131:         Cooler_Turn(0xFF);
 12902  10DB  30FF               	movlw	255
 12903  10DC  160A  158A  23E4  160A  118A  	fcall	_Cooler_Turn
 12904  10E1                     l7940:
 12905                           
 12906                           ;MainAppSW.c: 132:         u8_Heating_Element_Led_State=1;
 12907  10E1  01F8               	clrf	_u8_Heating_Element_Led_State
 12908  10E2  0AF8               	incf	_u8_Heating_Element_Led_State,f
 12909  10E3                     l336:
 12910  10E3  0008               	return
 12911  10E4                     __end_of_Heater_Cooler_action:
 12912                           
 12913                           	psect	text59
 12914  1BF6                     __ptext59:	
 12915 ;; *************** function _Heater_Turn *****************
 12916 ;; Defined at:
 12917 ;;		line 41 in file "Heater.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;  u8_State        1    wreg     unsigned char 
 12920 ;; Auto vars:     Size  Location     Type
 12921 ;;  u8_State        1   15[BANK0 ] unsigned char 
 12922 ;; Return value:  Size  Location     Type
 12923 ;;                  1    wreg      void 
 12924 ;; Registers used:
 12925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12926 ;; Tracked objects:
 12927 ;;		On entry : 0/0
 12928 ;;		On exit  : 0/0
 12929 ;;		Unchanged: 0/0
 12930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12931 ;;      Params:         0       0       0       0       0
 12932 ;;      Locals:         0       1       0       0       0
 12933 ;;      Temps:          0       0       0       0       0
 12934 ;;      Totals:         0       1       0       0       0
 12935 ;;Total ram usage:        1 bytes
 12936 ;; Hardware stack levels used:    1
 12937 ;; Hardware stack levels required when called:    4
 12938 ;; This function calls:
 12939 ;;		_DIO_Write
 12940 ;; This function is called by:
 12941 ;;		_Heater_Cooler_action
 12942 ;;		_App_Update
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946                           
 12947                           ;psect for function _Heater_Turn
 12948  1BF6                     _Heater_Turn:
 12949                           
 12950                           ;incstack = 0
 12951                           ; Regs used in _Heater_Turn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12952                           ;Heater_Turn@u8_State stored from wreg
 12953  1BF6  1283               	bcf	3,5	;RP0=0, select bank0
 12954  1BF7  1303               	bcf	3,6	;RP1=0, select bank0
 12955  1BF8  00AF               	movwf	Heater_Turn@u8_State
 12956  1BF9                     l7284:
 12957                           
 12958                           ;Heater.c: 41: void Heater_Turn(uint8 u8_State);Heater.c: 42: {;Heater.c: 43:     DIO_Wr
      +                          ite(2,0x20,u8_State);
 12959  1BF9  3020               	movlw	32
 12960  1BFA  00FF               	movwf	btemp+1
 12961  1BFB  087F               	movf	btemp+1,w
 12962  1BFC  00AA               	movwf	DIO_Write@u8_pins
 12963  1BFD  082F               	movf	Heater_Turn@u8_State,w
 12964  1BFE  00FF               	movwf	btemp+1
 12965  1BFF  087F               	movf	btemp+1,w
 12966  1C00  00AB               	movwf	DIO_Write@u8_value
 12967  1C01  3002               	movlw	2
 12968  1C02  160A  118A  2618  160A  158A  	fcall	_DIO_Write
 12969  1C07                     l198:
 12970  1C07  0008               	return
 12971  1C08                     __end_of_Heater_Turn:
 12972                           
 12973                           	psect	text60
 12974  1BE4                     __ptext60:	
 12975 ;; *************** function _Cooler_Turn *****************
 12976 ;; Defined at:
 12977 ;;		line 41 in file "Cooler.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;  u8_State        1    wreg     unsigned char 
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;  u8_State        1   15[BANK0 ] unsigned char 
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1    wreg      void 
 12984 ;; Registers used:
 12985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/0
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12991 ;;      Params:         0       0       0       0       0
 12992 ;;      Locals:         0       1       0       0       0
 12993 ;;      Temps:          0       0       0       0       0
 12994 ;;      Totals:         0       1       0       0       0
 12995 ;;Total ram usage:        1 bytes
 12996 ;; Hardware stack levels used:    1
 12997 ;; Hardware stack levels required when called:    4
 12998 ;; This function calls:
 12999 ;;		_DIO_Write
 13000 ;; This function is called by:
 13001 ;;		_Heater_Cooler_action
 13002 ;;		_App_Update
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           
 13007                           ;psect for function _Cooler_Turn
 13008  1BE4                     _Cooler_Turn:
 13009                           
 13010                           ;incstack = 0
 13011                           ; Regs used in _Cooler_Turn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13012                           ;Cooler_Turn@u8_State stored from wreg
 13013  1BE4  1283               	bcf	3,5	;RP0=0, select bank0
 13014  1BE5  1303               	bcf	3,6	;RP1=0, select bank0
 13015  1BE6  00AF               	movwf	Cooler_Turn@u8_State
 13016  1BE7                     l7256:
 13017                           
 13018                           ;Cooler.c: 41: void Cooler_Turn(uint8 u8_State);Cooler.c: 42: {;Cooler.c: 43:     DIO_Wr
      +                          ite(2,0x04,u8_State);
 13019  1BE7  3004               	movlw	4
 13020  1BE8  00FF               	movwf	btemp+1
 13021  1BE9  087F               	movf	btemp+1,w
 13022  1BEA  00AA               	movwf	DIO_Write@u8_pins
 13023  1BEB  082F               	movf	Cooler_Turn@u8_State,w
 13024  1BEC  00FF               	movwf	btemp+1
 13025  1BED  087F               	movf	btemp+1,w
 13026  1BEE  00AB               	movwf	DIO_Write@u8_value
 13027  1BEF  3002               	movlw	2
 13028  1BF0  160A  118A  2618  160A  158A  	fcall	_DIO_Write
 13029  1BF5                     l46:
 13030  1BF5  0008               	return
 13031  1BF6                     __end_of_Cooler_Turn:
 13032                           
 13033                           	psect	text61
 13034  1CCB                     __ptext61:	
 13035 ;; *************** function _EEPROM_Write *****************
 13036 ;; Defined at:
 13037 ;;		line 54 in file "EEPROM.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  u8_Address      1    wreg     unsigned char 
 13040 ;;  u8_Data         1   11[BANK0 ] unsigned char 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  u8_Address      1   12[BANK0 ] unsigned char 
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1    wreg      void 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0, pclath, cstack
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13052 ;;      Params:         0       1       0       0       0
 13053 ;;      Locals:         0       1       0       0       0
 13054 ;;      Temps:          0       0       0       0       0
 13055 ;;      Totals:         0       2       0       0       0
 13056 ;;Total ram usage:        2 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    5
 13059 ;; This function calls:
 13060 ;;		_I2C_Master_Start
 13061 ;;		_I2C_Master_Stop
 13062 ;;		_I2C_Master_Write
 13063 ;; This function is called by:
 13064 ;;		_App_init
 13065 ;;		_App_Update
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           
 13070                           ;psect for function _EEPROM_Write
 13071  1CCB                     _EEPROM_Write:
 13072                           
 13073                           ;incstack = 0
 13074                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
 13075                           ;EEPROM_Write@u8_Address stored from wreg
 13076  1CCB  1283               	bcf	3,5	;RP0=0, select bank0
 13077  1CCC  1303               	bcf	3,6	;RP1=0, select bank0
 13078  1CCD  00AC               	movwf	EEPROM_Write@u8_Address
 13079  1CCE                     l7964:
 13080                           
 13081                           ;EEPROM.c: 54: void EEPROM_Write(uint8 u8_Address,uint8 u8_Data);EEPROM.c: 55: {;EEPROM.
      +                          c: 56:     I2C_Master_Start();
 13082  1CCE  160A  158A  236F  160A  158A  	fcall	_I2C_Master_Start
 13083                           
 13084                           ;EEPROM.c: 58:     I2C_Master_Write(0xA0);
 13085  1CD3  30A0               	movlw	160
 13086  1CD4  160A  158A  23D2  160A  158A  	fcall	_I2C_Master_Write
 13087                           
 13088                           ;EEPROM.c: 60:     I2C_Master_Write(u8_Address);
 13089  1CD9  1283               	bcf	3,5	;RP0=0, select bank0
 13090  1CDA  1303               	bcf	3,6	;RP1=0, select bank0
 13091  1CDB  082C               	movf	EEPROM_Write@u8_Address,w
 13092  1CDC  160A  158A  23D2  160A  158A  	fcall	_I2C_Master_Write
 13093                           
 13094                           ;EEPROM.c: 62:     I2C_Master_Write(u8_Data);
 13095  1CE1  1283               	bcf	3,5	;RP0=0, select bank0
 13096  1CE2  1303               	bcf	3,6	;RP1=0, select bank0
 13097  1CE3  082B               	movf	EEPROM_Write@u8_Data,w
 13098  1CE4  160A  158A  23D2  160A  158A  	fcall	_I2C_Master_Write
 13099                           
 13100                           ;EEPROM.c: 64:     I2C_Master_Stop();
 13101  1CE9  160A  158A  237F  160A  158A  	fcall	_I2C_Master_Stop
 13102  1CEE                     l873:
 13103  1CEE  0008               	return
 13104  1CEF                     __end_of_EEPROM_Write:
 13105                           
 13106                           	psect	text62
 13107  1BD2                     __ptext62:	
 13108 ;; *************** function _I2C_Master_Write *****************
 13109 ;; Defined at:
 13110 ;;		line 182 in file "I2c.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;  u8_Data         1    wreg     unsigned char 
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;  u8_Data         1   10[BANK0 ] unsigned char 
 13115 ;; Return value:  Size  Location     Type
 13116 ;;                  1    wreg      void 
 13117 ;; Registers used:
 13118 ;;		wreg, status,2, status,0, pclath, cstack
 13119 ;; Tracked objects:
 13120 ;;		On entry : 0/0
 13121 ;;		On exit  : 0/0
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13124 ;;      Params:         0       0       0       0       0
 13125 ;;      Locals:         0       1       0       0       0
 13126 ;;      Temps:          0       0       0       0       0
 13127 ;;      Totals:         0       1       0       0       0
 13128 ;;Total ram usage:        1 bytes
 13129 ;; Hardware stack levels used:    1
 13130 ;; Hardware stack levels required when called:    4
 13131 ;; This function calls:
 13132 ;;		_I2C_Master_Wait
 13133 ;; This function is called by:
 13134 ;;		_EEPROM_Write
 13135 ;;		_EEPROM_Read
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function _I2C_Master_Write
 13141  1BD2                     _I2C_Master_Write:
 13142                           
 13143                           ;incstack = 0
 13144                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 13145                           ;I2C_Master_Write@u8_Data stored from wreg
 13146  1BD2  1283               	bcf	3,5	;RP0=0, select bank0
 13147  1BD3  1303               	bcf	3,6	;RP1=0, select bank0
 13148  1BD4  00AA               	movwf	I2C_Master_Write@u8_Data
 13149  1BD5                     l7358:
 13150                           
 13151                           ;I2c.c: 182: void I2C_Master_Write(uint8 u8_Data);I2c.c: 183: {;I2c.c: 184:     if(u8_Mo
      +                          duleMode == 1)
 13152  1BD5  035C               	decf	_u8_ModuleMode,w
 13153  1BD6  1D03               	btfss	3,2
 13154  1BD7  2BD9               	goto	u4701
 13155  1BD8  2BDA               	goto	u4700
 13156  1BD9                     u4701:
 13157  1BD9  2BDF               	goto	l7362
 13158  1BDA                     u4700:
 13159  1BDA                     l7360:
 13160                           
 13161                           ;I2c.c: 185:     {;I2c.c: 186:       I2C_Master_Wait();
 13162  1BDA  160A  158A  230E  160A  158A  	fcall	_I2C_Master_Wait
 13163  1BDF                     l7362:
 13164                           
 13165                           ;I2c.c: 188:     SSPBUF=u8_Data;
 13166  1BDF  1283               	bcf	3,5	;RP0=0, select bank0
 13167  1BE0  1303               	bcf	3,6	;RP1=0, select bank0
 13168  1BE1  082A               	movf	I2C_Master_Write@u8_Data,w
 13169  1BE2  0093               	movwf	19	;volatile
 13170  1BE3                     l792:
 13171  1BE3  0008               	return
 13172  1BE4                     __end_of_I2C_Master_Write:
 13173                           
 13174                           	psect	text63
 13175  1B7F                     __ptext63:	
 13176 ;; *************** function _I2C_Master_Stop *****************
 13177 ;; Defined at:
 13178 ;;		line 138 in file "I2c.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;		None
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, status,2, status,0, pclath, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13192 ;;      Params:         0       0       0       0       0
 13193 ;;      Locals:         0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0
 13195 ;;      Totals:         0       0       0       0       0
 13196 ;;Total ram usage:        0 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    4
 13199 ;; This function calls:
 13200 ;;		_I2C_Master_Wait
 13201 ;; This function is called by:
 13202 ;;		_EEPROM_Write
 13203 ;;		_EEPROM_Read
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           
 13208                           ;psect for function _I2C_Master_Stop
 13209  1B7F                     _I2C_Master_Stop:
 13210  1B7F                     l7352:	
 13211                           ;incstack = 0
 13212                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13213                           
 13214                           
 13215                           ;I2c.c: 140:     if(u8_ModuleMode == 1)
 13216  1B7F  1283               	bcf	3,5	;RP0=0, select bank0
 13217  1B80  1303               	bcf	3,6	;RP1=0, select bank0
 13218  1B81  035C               	decf	_u8_ModuleMode,w
 13219  1B82  1D03               	btfss	3,2
 13220  1B83  2B85               	goto	u4691
 13221  1B84  2B86               	goto	u4690
 13222  1B85                     u4691:
 13223  1B85  2B8B               	goto	l7356
 13224  1B86                     u4690:
 13225  1B86                     l7354:
 13226                           
 13227                           ;I2c.c: 141:     {;I2c.c: 142:       I2C_Master_Wait();
 13228  1B86  160A  158A  230E  160A  158A  	fcall	_I2C_Master_Wait
 13229  1B8B                     l7356:
 13230                           
 13231                           ;I2c.c: 144:     (SSPCON2)|=(0x04);
 13232  1B8B  1683               	bsf	3,5	;RP0=1, select bank1
 13233  1B8C  1303               	bcf	3,6	;RP1=0, select bank1
 13234  1B8D  1511               	bsf	17,2	;volatile
 13235  1B8E                     l782:
 13236  1B8E  0008               	return
 13237  1B8F                     __end_of_I2C_Master_Stop:
 13238                           
 13239                           	psect	text64
 13240  1B6F                     __ptext64:	
 13241 ;; *************** function _I2C_Master_Start *****************
 13242 ;; Defined at:
 13243 ;;		line 106 in file "I2c.c"
 13244 ;; Parameters:    Size  Location     Type
 13245 ;;		None
 13246 ;; Auto vars:     Size  Location     Type
 13247 ;;		None
 13248 ;; Return value:  Size  Location     Type
 13249 ;;                  1    wreg      void 
 13250 ;; Registers used:
 13251 ;;		wreg, status,2, status,0, pclath, cstack
 13252 ;; Tracked objects:
 13253 ;;		On entry : 0/0
 13254 ;;		On exit  : 0/0
 13255 ;;		Unchanged: 0/0
 13256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13257 ;;      Params:         0       0       0       0       0
 13258 ;;      Locals:         0       0       0       0       0
 13259 ;;      Temps:          0       0       0       0       0
 13260 ;;      Totals:         0       0       0       0       0
 13261 ;;Total ram usage:        0 bytes
 13262 ;; Hardware stack levels used:    1
 13263 ;; Hardware stack levels required when called:    4
 13264 ;; This function calls:
 13265 ;;		_I2C_Master_Wait
 13266 ;; This function is called by:
 13267 ;;		_EEPROM_Write
 13268 ;;		_EEPROM_Read
 13269 ;; This function uses a non-reentrant model
 13270 ;;
 13271                           
 13272                           
 13273                           ;psect for function _I2C_Master_Start
 13274  1B6F                     _I2C_Master_Start:
 13275  1B6F                     l7346:	
 13276                           ;incstack = 0
 13277                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13278                           
 13279                           
 13280                           ;I2c.c: 108:     if(u8_ModuleMode == 1)
 13281  1B6F  1283               	bcf	3,5	;RP0=0, select bank0
 13282  1B70  1303               	bcf	3,6	;RP1=0, select bank0
 13283  1B71  035C               	decf	_u8_ModuleMode,w
 13284  1B72  1D03               	btfss	3,2
 13285  1B73  2B75               	goto	u4681
 13286  1B74  2B76               	goto	u4680
 13287  1B75                     u4681:
 13288  1B75  2B7B               	goto	l7350
 13289  1B76                     u4680:
 13290  1B76                     l7348:
 13291                           
 13292                           ;I2c.c: 109:     {;I2c.c: 110:       I2C_Master_Wait();
 13293  1B76  160A  158A  230E  160A  158A  	fcall	_I2C_Master_Wait
 13294  1B7B                     l7350:
 13295                           
 13296                           ;I2c.c: 113:     (SSPCON2)|=(0x01);
 13297  1B7B  1683               	bsf	3,5	;RP0=1, select bank1
 13298  1B7C  1303               	bcf	3,6	;RP1=0, select bank1
 13299  1B7D  1411               	bsf	17,0	;volatile
 13300  1B7E                     l774:
 13301  1B7E  0008               	return
 13302  1B7F                     __end_of_I2C_Master_Start:
 13303                           
 13304                           	psect	text65
 13305  1B0E                     __ptext65:	
 13306 ;; *************** function _I2C_Master_Wait *****************
 13307 ;; Defined at:
 13308 ;;		line 93 in file "I2c.c"
 13309 ;; Parameters:    Size  Location     Type
 13310 ;;		None
 13311 ;; Auto vars:     Size  Location     Type
 13312 ;;		None
 13313 ;; Return value:  Size  Location     Type
 13314 ;;                  1    wreg      void 
 13315 ;; Registers used:
 13316 ;;		wreg, status,2
 13317 ;; Tracked objects:
 13318 ;;		On entry : 0/0
 13319 ;;		On exit  : 0/0
 13320 ;;		Unchanged: 0/0
 13321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13322 ;;      Params:         0       0       0       0       0
 13323 ;;      Locals:         0       0       0       0       0
 13324 ;;      Temps:          0       0       0       0       0
 13325 ;;      Totals:         0       0       0       0       0
 13326 ;;Total ram usage:        0 bytes
 13327 ;; Hardware stack levels used:    1
 13328 ;; Hardware stack levels required when called:    3
 13329 ;; This function calls:
 13330 ;;		Nothing
 13331 ;; This function is called by:
 13332 ;;		_I2C_Master_Start
 13333 ;;		_I2C_Master_Stop
 13334 ;;		_I2C_Master_AckEN
 13335 ;;		_I2C_Master_Write
 13336 ;;		_I2C_Master_Read
 13337 ;;		_I2C_Master_EnableRead
 13338 ;;		_I2C_Master_RepeatedStart
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           
 13343                           ;psect for function _I2C_Master_Wait
 13344  1B0E                     _I2C_Master_Wait:
 13345  1B0E                     l7128:	
 13346                           ;incstack = 0
 13347                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13348                           
 13349  1B0E                     l767:	
 13350                           ;I2c.c: 96:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 13351                           
 13352  1B0E  1683               	bsf	3,5	;RP0=1, select bank1
 13353  1B0F  1303               	bcf	3,6	;RP1=0, select bank1
 13354  1B10  1914               	btfsc	20,2	;volatile
 13355  1B11  2B13               	goto	u4571
 13356  1B12  2B14               	goto	u4570
 13357  1B13                     u4571:
 13358  1B13  2B0E               	goto	l767
 13359  1B14                     u4570:
 13360  1B14                     l7130:
 13361  1B14  0811               	movf	17,w	;volatile
 13362  1B15  391F               	andlw	31
 13363  1B16  1D03               	btfss	3,2
 13364  1B17  2B19               	goto	u4581
 13365  1B18  2B1A               	goto	u4580
 13366  1B19                     u4581:
 13367  1B19  2B0E               	goto	l767
 13368  1B1A                     u4580:
 13369  1B1A                     l770:
 13370  1B1A  0008               	return
 13371  1B1B                     __end_of_I2C_Master_Wait:
 13372                           
 13373                           	psect	text66
 13374  1B5F                     __ptext66:	
 13375 ;; *************** function _Display_TurnOff *****************
 13376 ;; Defined at:
 13377 ;;		line 144 in file "Display.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13391 ;;      Params:         0       0       0       0       0
 13392 ;;      Locals:         0       0       0       0       0
 13393 ;;      Temps:          0       0       0       0       0
 13394 ;;      Totals:         0       0       0       0       0
 13395 ;;Total ram usage:        0 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    5
 13398 ;; This function calls:
 13399 ;;		_SSD_TurnOff
 13400 ;; This function is called by:
 13401 ;;		_App_Update
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405                           
 13406                           ;psect for function _Display_TurnOff
 13407  1B5F                     _Display_TurnOff:
 13408  1B5F                     l7906:	
 13409                           ;incstack = 0
 13410                           ; Regs used in _Display_TurnOff: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13411                           
 13412                           
 13413                           ;Display.c: 146:     SSD_TurnOff(0);
 13414  1B5F  3000               	movlw	0
 13415  1B60  160A  118A  247F  160A  158A  	fcall	_SSD_TurnOff
 13416                           
 13417                           ;Display.c: 147:     SSD_TurnOff(1);
 13418  1B65  3001               	movlw	1
 13419  1B66  160A  118A  247F  160A  158A  	fcall	_SSD_TurnOff
 13420  1B6B                     l7908:
 13421                           
 13422                           ;Display.c: 148:     u8_Mode=0;
 13423  1B6B  1283               	bcf	3,5	;RP0=0, select bank0
 13424  1B6C  1303               	bcf	3,6	;RP1=0, select bank0
 13425  1B6D  01DF               	clrf	_u8_Mode@Display$F109
 13426  1B6E                     l188:
 13427  1B6E  0008               	return
 13428  1B6F                     __end_of_Display_TurnOff:
 13429                           
 13430                           	psect	text67
 13431  147F                     __ptext67:	
 13432 ;; *************** function _SSD_TurnOff *****************
 13433 ;; Defined at:
 13434 ;;		line 270 in file "SSD.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;  u8_SSD_ID       1    wreg     unsigned char 
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;  u8_SSD_ID       1   17[BANK0 ] unsigned char 
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      void 
 13441 ;; Registers used:
 13442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13448 ;;      Params:         0       0       0       0       0
 13449 ;;      Locals:         0       1       0       0       0
 13450 ;;      Temps:          0       2       0       0       0
 13451 ;;      Totals:         0       3       0       0       0
 13452 ;;Total ram usage:        3 bytes
 13453 ;; Hardware stack levels used:    1
 13454 ;; Hardware stack levels required when called:    4
 13455 ;; This function calls:
 13456 ;;		_DIO_Write
 13457 ;; This function is called by:
 13458 ;;		_Display_TurnOff
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           
 13463                           ;psect for function _SSD_TurnOff
 13464  147F                     _SSD_TurnOff:
 13465                           
 13466                           ;incstack = 0
 13467                           ; Regs used in _SSD_TurnOff: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13468                           ;SSD_TurnOff@u8_SSD_ID stored from wreg
 13469  147F  1283               	bcf	3,5	;RP0=0, select bank0
 13470  1480  1303               	bcf	3,6	;RP1=0, select bank0
 13471  1481  00B1               	movwf	SSD_TurnOff@u8_SSD_ID
 13472  1482                     l7258:
 13473                           
 13474                           ;SSD.c: 270: void SSD_TurnOff(uint8 u8_SSD_ID);SSD.c: 271: {;SSD.c: 272:     DIO_Write(3
      +                          ,0xFF,0);
 13475  1482  30FF               	movlw	255
 13476  1483  00FF               	movwf	btemp+1
 13477  1484  087F               	movf	btemp+1,w
 13478  1485  00AA               	movwf	DIO_Write@u8_pins
 13479  1486  01AB               	clrf	DIO_Write@u8_value
 13480  1487  3003               	movlw	3
 13481  1488  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 13482                           
 13483                           ;SSD.c: 273:     switch(u8_SSD_ID)
 13484  148D  2CCA               	goto	l7278
 13485  148E                     l7260:
 13486                           
 13487                           ;SSD.c: 276:             DIO_Write(0,0x20,0);
 13488  148E  3020               	movlw	32
 13489  148F  00FF               	movwf	btemp+1
 13490  1490  087F               	movf	btemp+1,w
 13491  1491  00AA               	movwf	DIO_Write@u8_pins
 13492  1492  01AB               	clrf	DIO_Write@u8_value
 13493  1493  3000               	movlw	0
 13494  1494  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 13495  1499                     l7262:
 13496                           
 13497                           ;SSD.c: 277:             astr_SSDs[0].u8_SSD_State = 0 ;
 13498  1499  1683               	bsf	3,5	;RP0=1, select bank1
 13499  149A  1303               	bcf	3,6	;RP1=0, select bank1
 13500  149B  01A1               	clrf	(_astr_SSDs^(0+128)+1)
 13501                           
 13502                           ;SSD.c: 278:             break;
 13503  149C  2CE2               	goto	l491
 13504  149D                     l7264:
 13505                           
 13506                           ;SSD.c: 280:             DIO_Write(0,0x10,0);
 13507  149D  3010               	movlw	16
 13508  149E  00FF               	movwf	btemp+1
 13509  149F  087F               	movf	btemp+1,w
 13510  14A0  00AA               	movwf	DIO_Write@u8_pins
 13511  14A1  01AB               	clrf	DIO_Write@u8_value
 13512  14A2  3000               	movlw	0
 13513  14A3  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 13514  14A8                     l7266:
 13515                           
 13516                           ;SSD.c: 281:             astr_SSDs[1].u8_SSD_State = 0;
 13517  14A8  1683               	bsf	3,5	;RP0=1, select bank1
 13518  14A9  1303               	bcf	3,6	;RP1=0, select bank1
 13519  14AA  01A3               	clrf	(_astr_SSDs^(0+128)+3)
 13520                           
 13521                           ;SSD.c: 282:             break;
 13522  14AB  2CE2               	goto	l491
 13523  14AC                     l7268:
 13524                           
 13525                           ;SSD.c: 284:             DIO_Write(0,0x08,0);
 13526  14AC  3008               	movlw	8
 13527  14AD  00FF               	movwf	btemp+1
 13528  14AE  087F               	movf	btemp+1,w
 13529  14AF  00AA               	movwf	DIO_Write@u8_pins
 13530  14B0  01AB               	clrf	DIO_Write@u8_value
 13531  14B1  3000               	movlw	0
 13532  14B2  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 13533  14B7                     l7270:
 13534                           
 13535                           ;SSD.c: 285:             astr_SSDs[2].u8_SSD_State = 0;
 13536  14B7  1683               	bsf	3,5	;RP0=1, select bank1
 13537  14B8  1303               	bcf	3,6	;RP1=0, select bank1
 13538  14B9  01A5               	clrf	(_astr_SSDs^(0+128)+5)
 13539                           
 13540                           ;SSD.c: 286:             break;
 13541  14BA  2CE2               	goto	l491
 13542  14BB                     l7272:
 13543                           
 13544                           ;SSD.c: 288:             DIO_Write(0,0x04,0);
 13545  14BB  3004               	movlw	4
 13546  14BC  00FF               	movwf	btemp+1
 13547  14BD  087F               	movf	btemp+1,w
 13548  14BE  00AA               	movwf	DIO_Write@u8_pins
 13549  14BF  01AB               	clrf	DIO_Write@u8_value
 13550  14C0  3000               	movlw	0
 13551  14C1  160A  118A  2618  160A  118A  	fcall	_DIO_Write
 13552  14C6                     l7274:
 13553                           
 13554                           ;SSD.c: 289:             astr_SSDs[3].u8_SSD_State = 0;
 13555  14C6  1683               	bsf	3,5	;RP0=1, select bank1
 13556  14C7  1303               	bcf	3,6	;RP1=0, select bank1
 13557  14C8  01A7               	clrf	(_astr_SSDs^(0+128)+7)
 13558                           
 13559                           ;SSD.c: 290:             break;
 13560  14C9  2CE2               	goto	l491
 13561  14CA                     l7278:
 13562  14CA  1283               	bcf	3,5	;RP0=0, select bank0
 13563  14CB  1303               	bcf	3,6	;RP1=0, select bank0
 13564  14CC  0831               	movf	SSD_TurnOff@u8_SSD_ID,w
 13565  14CD  00AF               	movwf	??_SSD_TurnOff
 13566  14CE  01B0               	clrf	??_SSD_TurnOff+1
 13567                           
 13568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13569                           ; Switch size 1, requested type "simple"
 13570                           ; Number of cases is 1, Range of values is 0 to 0
 13571                           ; switch strategies available:
 13572                           ; Name         Instructions Cycles
 13573                           ; simple_byte            4     3 (average)
 13574                           ; direct_byte           11     8 (fixed)
 13575                           ; jumptable            260     6 (fixed)
 13576                           ;	Chosen strategy is simple_byte
 13577  14CF  0830               	movf	??_SSD_TurnOff+1,w
 13578  14D0  3A00               	xorlw	0	; case 0
 13579  14D1  1903               	skipnz
 13580  14D2  2CD4               	goto	l9850
 13581  14D3  2CE2               	goto	l491
 13582  14D4                     l9850:
 13583                           
 13584                           ; Switch size 1, requested type "simple"
 13585                           ; Number of cases is 4, Range of values is 0 to 3
 13586                           ; switch strategies available:
 13587                           ; Name         Instructions Cycles
 13588                           ; simple_byte           13     7 (average)
 13589                           ; direct_byte           20     8 (fixed)
 13590                           ; jumptable            260     6 (fixed)
 13591                           ;	Chosen strategy is simple_byte
 13592  14D4  082F               	movf	??_SSD_TurnOff,w
 13593  14D5  3A00               	xorlw	0	; case 0
 13594  14D6  1903               	skipnz
 13595  14D7  2C8E               	goto	l7260
 13596  14D8  3A01               	xorlw	1	; case 1
 13597  14D9  1903               	skipnz
 13598  14DA  2C9D               	goto	l7264
 13599  14DB  3A03               	xorlw	3	; case 2
 13600  14DC  1903               	skipnz
 13601  14DD  2CAC               	goto	l7268
 13602  14DE  3A01               	xorlw	1	; case 3
 13603  14DF  1903               	skipnz
 13604  14E0  2CBB               	goto	l7272
 13605  14E1  2CE2               	goto	l491
 13606  14E2                     l491:
 13607  14E2  0008               	return
 13608  14E3                     __end_of_SSD_TurnOff:
 13609                           
 13610                           	psect	text68
 13611  1618                     __ptext68:	
 13612 ;; *************** function _DIO_Write *****************
 13613 ;; Defined at:
 13614 ;;		line 157 in file "DIO.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;  u8_GPIO         1    wreg     unsigned char 
 13617 ;;  u8_pins         1   10[BANK0 ] unsigned char 
 13618 ;;  u8_value        1   11[BANK0 ] unsigned char 
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;  u8_GPIO         1   14[BANK0 ] unsigned char 
 13621 ;; Return value:  Size  Location     Type
 13622 ;;                  1    wreg      void 
 13623 ;; Registers used:
 13624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13625 ;; Tracked objects:
 13626 ;;		On entry : 0/0
 13627 ;;		On exit  : 0/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13630 ;;      Params:         0       2       0       0       0
 13631 ;;      Locals:         0       1       0       0       0
 13632 ;;      Temps:          0       2       0       0       0
 13633 ;;      Totals:         0       5       0       0       0
 13634 ;;Total ram usage:        5 bytes
 13635 ;; Hardware stack levels used:    1
 13636 ;; Hardware stack levels required when called:    3
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_Cooler_Turn
 13641 ;;		_Heater_Turn
 13642 ;;		_LM_init
 13643 ;;		_SSD_Update
 13644 ;;		_SSD_TurnOff
 13645 ;;		_Led_On
 13646 ;;		_Led_Off
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           
 13651                           ;psect for function _DIO_Write
 13652  1618                     _DIO_Write:
 13653                           
 13654                           ;incstack = 0
 13655                           ; Regs used in _DIO_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
 13656                           ;DIO_Write@u8_GPIO stored from wreg
 13657  1618  1283               	bcf	3,5	;RP0=0, select bank0
 13658  1619  1303               	bcf	3,6	;RP1=0, select bank0
 13659  161A  00AE               	movwf	DIO_Write@u8_GPIO
 13660  161B                     l7064:
 13661                           
 13662                           ;DIO.c: 157: void DIO_Write (uint8 u8_GPIO, uint8 u8_pins, uint8 u8_value);DIO.c: 158: {
      +                          ;DIO.c: 159:     switch(u8_GPIO)
 13663  161B  2E67               	goto	l7098
 13664  161C                     l7066:
 13665                           
 13666                           ;DIO.c: 162:    if (u8_value)
 13667  161C  082B               	movf	DIO_Write@u8_value,w
 13668  161D  1903               	btfsc	3,2
 13669  161E  2E20               	goto	u4521
 13670  161F  2E21               	goto	u4520
 13671  1620                     u4521:
 13672  1620  2E26               	goto	l7070
 13673  1621                     u4520:
 13674  1621                     l7068:
 13675                           
 13676                           ;DIO.c: 163:    {;DIO.c: 164:     ((PORTA))|=(u8_pins);
 13677  1621  082A               	movf	DIO_Write@u8_pins,w	;volatile
 13678  1622  00FF               	movwf	btemp+1
 13679  1623  087F               	movf	btemp+1,w
 13680  1624  0485               	iorwf	5,f	;volatile
 13681                           
 13682                           ;DIO.c: 165:    }
 13683  1625  2E80               	goto	l108
 13684  1626                     l7070:
 13685                           
 13686                           ;DIO.c: 167:    {;DIO.c: 168:     ((PORTA))&=~(u8_pins);
 13687  1626  092A               	comf	DIO_Write@u8_pins,w	;volatile
 13688  1627  00FF               	movwf	btemp+1
 13689  1628  087F               	movf	btemp+1,w
 13690  1629  0585               	andwf	5,f	;volatile
 13691  162A  2E80               	goto	l108
 13692  162B                     l7072:
 13693                           
 13694                           ;DIO.c: 172:    if (u8_value)
 13695  162B  082B               	movf	DIO_Write@u8_value,w
 13696  162C  1903               	btfsc	3,2
 13697  162D  2E2F               	goto	u4531
 13698  162E  2E30               	goto	u4530
 13699  162F                     u4531:
 13700  162F  2E35               	goto	l7076
 13701  1630                     u4530:
 13702  1630                     l7074:
 13703                           
 13704                           ;DIO.c: 173:    {;DIO.c: 174:     ((PORTB))|=(u8_pins);
 13705  1630  082A               	movf	DIO_Write@u8_pins,w	;volatile
 13706  1631  00FF               	movwf	btemp+1
 13707  1632  087F               	movf	btemp+1,w
 13708  1633  0486               	iorwf	6,f	;volatile
 13709                           
 13710                           ;DIO.c: 175:    }
 13711  1634  2E80               	goto	l108
 13712  1635                     l7076:
 13713                           
 13714                           ;DIO.c: 177:    {;DIO.c: 178:     ((PORTB))&=~(u8_pins);
 13715  1635  092A               	comf	DIO_Write@u8_pins,w	;volatile
 13716  1636  00FF               	movwf	btemp+1
 13717  1637  087F               	movf	btemp+1,w
 13718  1638  0586               	andwf	6,f	;volatile
 13719  1639  2E80               	goto	l108
 13720  163A                     l7078:
 13721                           
 13722                           ;DIO.c: 182:    if (u8_value)
 13723  163A  082B               	movf	DIO_Write@u8_value,w
 13724  163B  1903               	btfsc	3,2
 13725  163C  2E3E               	goto	u4541
 13726  163D  2E3F               	goto	u4540
 13727  163E                     u4541:
 13728  163E  2E44               	goto	l7082
 13729  163F                     u4540:
 13730  163F                     l7080:
 13731                           
 13732                           ;DIO.c: 183:    {;DIO.c: 184:     ((PORTC))|=(u8_pins);
 13733  163F  082A               	movf	DIO_Write@u8_pins,w	;volatile
 13734  1640  00FF               	movwf	btemp+1
 13735  1641  087F               	movf	btemp+1,w
 13736  1642  0487               	iorwf	7,f	;volatile
 13737                           
 13738                           ;DIO.c: 185:    }
 13739  1643  2E80               	goto	l108
 13740  1644                     l7082:
 13741                           
 13742                           ;DIO.c: 187:    {;DIO.c: 188:     ((PORTC))&=~(u8_pins);
 13743  1644  092A               	comf	DIO_Write@u8_pins,w	;volatile
 13744  1645  00FF               	movwf	btemp+1
 13745  1646  087F               	movf	btemp+1,w
 13746  1647  0587               	andwf	7,f	;volatile
 13747  1648  2E80               	goto	l108
 13748  1649                     l7084:
 13749                           
 13750                           ;DIO.c: 192:    if (u8_value)
 13751  1649  082B               	movf	DIO_Write@u8_value,w
 13752  164A  1903               	btfsc	3,2
 13753  164B  2E4D               	goto	u4551
 13754  164C  2E4E               	goto	u4550
 13755  164D                     u4551:
 13756  164D  2E53               	goto	l7088
 13757  164E                     u4550:
 13758  164E                     l7086:
 13759                           
 13760                           ;DIO.c: 193:    {;DIO.c: 194:     ((PORTD))|=(u8_pins);
 13761  164E  082A               	movf	DIO_Write@u8_pins,w	;volatile
 13762  164F  00FF               	movwf	btemp+1
 13763  1650  087F               	movf	btemp+1,w
 13764  1651  0488               	iorwf	8,f	;volatile
 13765                           
 13766                           ;DIO.c: 195:    }
 13767  1652  2E80               	goto	l108
 13768  1653                     l7088:
 13769                           
 13770                           ;DIO.c: 197:    {;DIO.c: 198:     ((PORTD))&=~(u8_pins);
 13771  1653  092A               	comf	DIO_Write@u8_pins,w	;volatile
 13772  1654  00FF               	movwf	btemp+1
 13773  1655  087F               	movf	btemp+1,w
 13774  1656  0588               	andwf	8,f	;volatile
 13775  1657  2E80               	goto	l108
 13776  1658                     l7090:
 13777                           
 13778                           ;DIO.c: 202:    if (u8_value)
 13779  1658  082B               	movf	DIO_Write@u8_value,w
 13780  1659  1903               	btfsc	3,2
 13781  165A  2E5C               	goto	u4561
 13782  165B  2E5D               	goto	u4560
 13783  165C                     u4561:
 13784  165C  2E62               	goto	l7094
 13785  165D                     u4560:
 13786  165D                     l7092:
 13787                           
 13788                           ;DIO.c: 203:    {;DIO.c: 204:     ((PORTE))|=(u8_pins);
 13789  165D  082A               	movf	DIO_Write@u8_pins,w	;volatile
 13790  165E  00FF               	movwf	btemp+1
 13791  165F  087F               	movf	btemp+1,w
 13792  1660  0489               	iorwf	9,f	;volatile
 13793                           
 13794                           ;DIO.c: 205:    }
 13795  1661  2E80               	goto	l108
 13796  1662                     l7094:
 13797                           
 13798                           ;DIO.c: 207:    {;DIO.c: 208:     ((PORTE))&=~(u8_pins);
 13799  1662  092A               	comf	DIO_Write@u8_pins,w	;volatile
 13800  1663  00FF               	movwf	btemp+1
 13801  1664  087F               	movf	btemp+1,w
 13802  1665  0589               	andwf	9,f	;volatile
 13803  1666  2E80               	goto	l108
 13804  1667                     l7098:
 13805  1667  082E               	movf	DIO_Write@u8_GPIO,w
 13806  1668  00AC               	movwf	??_DIO_Write
 13807  1669  01AD               	clrf	??_DIO_Write+1
 13808                           
 13809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13810                           ; Switch size 1, requested type "simple"
 13811                           ; Number of cases is 1, Range of values is 0 to 0
 13812                           ; switch strategies available:
 13813                           ; Name         Instructions Cycles
 13814                           ; simple_byte            4     3 (average)
 13815                           ; direct_byte           11     8 (fixed)
 13816                           ; jumptable            260     6 (fixed)
 13817                           ;	Chosen strategy is simple_byte
 13818  166A  082D               	movf	??_DIO_Write+1,w
 13819  166B  3A00               	xorlw	0	; case 0
 13820  166C  1903               	skipnz
 13821  166D  2E6F               	goto	l9852
 13822  166E  2E80               	goto	l108
 13823  166F                     l9852:
 13824                           
 13825                           ; Switch size 1, requested type "simple"
 13826                           ; Number of cases is 5, Range of values is 0 to 4
 13827                           ; switch strategies available:
 13828                           ; Name         Instructions Cycles
 13829                           ; simple_byte           16     9 (average)
 13830                           ; direct_byte           23     8 (fixed)
 13831                           ; jumptable            260     6 (fixed)
 13832                           ;	Chosen strategy is simple_byte
 13833  166F  082C               	movf	??_DIO_Write,w
 13834  1670  3A00               	xorlw	0	; case 0
 13835  1671  1903               	skipnz
 13836  1672  2E1C               	goto	l7066
 13837  1673  3A01               	xorlw	1	; case 1
 13838  1674  1903               	skipnz
 13839  1675  2E2B               	goto	l7072
 13840  1676  3A03               	xorlw	3	; case 2
 13841  1677  1903               	skipnz
 13842  1678  2E3A               	goto	l7078
 13843  1679  3A01               	xorlw	1	; case 3
 13844  167A  1903               	skipnz
 13845  167B  2E49               	goto	l7084
 13846  167C  3A07               	xorlw	7	; case 4
 13847  167D  1903               	skipnz
 13848  167E  2E58               	goto	l7090
 13849  167F  2E80               	goto	l108
 13850  1680                     l108:
 13851  1680  0008               	return
 13852  1681                     __end_of_DIO_Write:
 13853                           
 13854                           	psect	text69
 13855  1000                     __ptext69:	
 13856 ;; *************** function _Display_SetData *****************
 13857 ;; Defined at:
 13858 ;;		line 130 in file "Display.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;  u8_DisplayDa    1    wreg     unsigned char 
 13861 ;;  u8_DisplayMo    1   10[BANK0 ] unsigned char 
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;  u8_DisplayDa    1   11[BANK0 ] unsigned char 
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		wreg, btemp+1
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13873 ;;      Params:         0       1       0       0       0
 13874 ;;      Locals:         0       1       0       0       0
 13875 ;;      Temps:          0       0       0       0       0
 13876 ;;      Totals:         0       2       0       0       0
 13877 ;;Total ram usage:        2 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:    3
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_App_Update
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           
 13888                           ;psect for function _Display_SetData
 13889  1000                     _Display_SetData:
 13890                           
 13891                           ;incstack = 0
 13892                           ; Regs used in _Display_SetData: [wreg+btemp+1]
 13893                           ;Display_SetData@u8_DisplayData stored from wreg
 13894  1000  1283               	bcf	3,5	;RP0=0, select bank0
 13895  1001  1303               	bcf	3,6	;RP1=0, select bank0
 13896  1002  00AB               	movwf	Display_SetData@u8_DisplayData
 13897  1003                     l7902:
 13898                           
 13899                           ;Display.c: 130: void Display_SetData(uint8 u8_DisplayData,uint8 u8_DisplayMode);Display
      +                          .c: 131: {;Display.c: 132:     u8_Data=u8_DisplayData;
 13900  1003  082B               	movf	Display_SetData@u8_DisplayData,w
 13901  1004  00FF               	movwf	btemp+1
 13902  1005  087F               	movf	btemp+1,w
 13903  1006  00E0               	movwf	_u8_Data
 13904  1007                     l7904:
 13905                           
 13906                           ;Display.c: 133:     u8_Mode=u8_DisplayMode;
 13907  1007  082A               	movf	Display_SetData@u8_DisplayMode,w
 13908  1008  00FF               	movwf	btemp+1
 13909  1009  087F               	movf	btemp+1,w
 13910  100A  00DF               	movwf	_u8_Mode@Display$F109
 13911  100B                     l185:
 13912  100B  0008               	return
 13913  100C                     __end_of_Display_SetData:
 13914                           
 13915                           	psect	text70
 13916  1AF4                     __ptext70:	
 13917 ;; *************** function _CPU_SetSleep *****************
 13918 ;; Defined at:
 13919 ;;		line 34 in file "SLEEP.c"
 13920 ;; Parameters:    Size  Location     Type
 13921 ;;  u8_SleepMode    1    wreg     unsigned char 
 13922 ;; Auto vars:     Size  Location     Type
 13923 ;;  u8_SleepMode    1   10[BANK0 ] unsigned char 
 13924 ;; Return value:  Size  Location     Type
 13925 ;;                  1    wreg      void 
 13926 ;; Registers used:
 13927 ;;		wreg, btemp+1
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/0
 13930 ;;		On exit  : 0/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13933 ;;      Params:         0       0       0       0       0
 13934 ;;      Locals:         0       1       0       0       0
 13935 ;;      Temps:          0       0       0       0       0
 13936 ;;      Totals:         0       1       0       0       0
 13937 ;;Total ram usage:        1 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; Hardware stack levels required when called:    3
 13940 ;; This function calls:
 13941 ;;		Nothing
 13942 ;; This function is called by:
 13943 ;;		_App_init
 13944 ;;		_App_Update
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           
 13949                           ;psect for function _CPU_SetSleep
 13950  1AF4                     _CPU_SetSleep:
 13951                           
 13952                           ;incstack = 0
 13953                           ; Regs used in _CPU_SetSleep: [wreg+btemp+1]
 13954                           ;CPU_SetSleep@u8_SleepMode stored from wreg
 13955  1AF4  1283               	bcf	3,5	;RP0=0, select bank0
 13956  1AF5  1303               	bcf	3,6	;RP1=0, select bank0
 13957  1AF6  00AA               	movwf	CPU_SetSleep@u8_SleepMode
 13958  1AF7                     l7928:
 13959                           
 13960                           ;SLEEP.c: 34: void CPU_SetSleep(uint8 u8_SleepMode);SLEEP.c: 35: {;SLEEP.c: 36:     u8_M
      +                          ode=u8_SleepMode;
 13961  1AF7  082A               	movf	CPU_SetSleep@u8_SleepMode,w
 13962  1AF8  00FF               	movwf	btemp+1
 13963  1AF9  087F               	movf	btemp+1,w
 13964  1AFA  00E4               	movwf	_u8_Mode
 13965  1AFB                     l740:
 13966  1AFB  0008               	return
 13967  1AFC                     __end_of_CPU_SetSleep:
 13968                           
 13969                           	psect	text71
 13970  0887                     __ptext71:	
 13971 ;; *************** function _myIsr *****************
 13972 ;; Defined at:
 13973 ;;		line 50 in file "Interrupts.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;		None
 13976 ;; Auto vars:     Size  Location     Type
 13977 ;;  u8_counter      1    5[COMMON] unsigned char 
 13978 ;; Return value:  Size  Location     Type
 13979 ;;                  1    wreg      void 
 13980 ;; Registers used:
 13981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13982 ;; Tracked objects:
 13983 ;;		On entry : 0/0
 13984 ;;		On exit  : 0/0
 13985 ;;		Unchanged: 0/0
 13986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13987 ;;      Params:         0       0       0       0       0
 13988 ;;      Locals:         1       0       0       0       0
 13989 ;;      Temps:          0      10       0       0       0
 13990 ;;      Totals:         1      10       0       0       0
 13991 ;;Total ram usage:       11 bytes
 13992 ;; Hardware stack levels used:    1
 13993 ;; Hardware stack levels required when called:    2
 13994 ;; This function calls:
 13995 ;;		_EXT_INT_Callbk
 13996 ;;		_Timer_Callbk
 13997 ;;		i1___lbdiv
 13998 ;; This function is called by:
 13999 ;;		Interrupt level 1
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           
 14004                           ;psect for function _myIsr
 14005  0887                     _myIsr:
 14006  0887                     i1l6036:
 14007                           
 14008                           ;Interrupts.c: 52:     uint8 u8_counter;;Interrupts.c: 53:     for(u8_counter=0;u8_count
      +                          er<2;u8_counter++)
 14009  0887  01F5               	clrf	myIsr@u8_counter
 14010  0888                     i1l6042:
 14011                           
 14012                           ;Interrupts.c: 54:     {;Interrupts.c: 55:         if ( 1 == ((((* (ast_INTS[u8_counter]
      +                          .REGISTER)))&(ast_INTS[u8_counter].MASK))/(ast_INTS[u8_counter].MASK)))
 14013  0888  0875               	movf	myIsr@u8_counter,w
 14014  0889  1283               	bcf	3,5	;RP0=0, select bank0
 14015  088A  1303               	bcf	3,6	;RP1=0, select bank0
 14016  088B  00A0               	movwf	??_myIsr
 14017  088C  3001               	movlw	1
 14018  088D                     u442_25:
 14019  088D  1003               	clrc
 14020  088E  0DA0               	rlf	??_myIsr,f
 14021  088F  3EFF               	addlw	-1
 14022  0890  1D03               	skipz
 14023  0891  288D               	goto	u442_25
 14024  0892  1003               	clrc
 14025  0893  0D20               	rlf	??_myIsr,w
 14026  0894  3EAB               	addlw	(low ((_ast_INTS| 0+3)))& (0+255)
 14027  0895  0084               	movwf	4
 14028  0896  1383               	bcf	3,7	;select IRP bank1
 14029  0897  0800               	movf	0,w
 14030  0898  00FF               	movwf	btemp+1
 14031  0899  087F               	movf	btemp+1,w
 14032  089A  00F0               	movwf	i1___lbdiv@divisor
 14033  089B  0875               	movf	myIsr@u8_counter,w
 14034  089C  00A1               	movwf	??_myIsr+1
 14035  089D  3001               	movlw	1
 14036  089E                     u443_25:
 14037  089E  1003               	clrc
 14038  089F  0DA1               	rlf	??_myIsr+1,f
 14039  08A0  3EFF               	addlw	-1
 14040  08A1  1D03               	skipz
 14041  08A2  289E               	goto	u443_25
 14042  08A3  1003               	clrc
 14043  08A4  0D21               	rlf	??_myIsr+1,w
 14044  08A5  3EAB               	addlw	(low ((_ast_INTS| 0+3)))& (0+255)
 14045  08A6  0084               	movwf	4
 14046  08A7  0800               	movf	0,w
 14047  08A8  00A2               	movwf	??_myIsr+2
 14048  08A9  0875               	movf	myIsr@u8_counter,w
 14049  08AA  00A3               	movwf	??_myIsr+3
 14050  08AB  3001               	movlw	1
 14051  08AC                     u444_25:
 14052  08AC  1003               	clrc
 14053  08AD  0DA3               	rlf	??_myIsr+3,f
 14054  08AE  3EFF               	addlw	-1
 14055  08AF  1D03               	skipz
 14056  08B0  28AC               	goto	u444_25
 14057  08B1  1003               	clrc
 14058  08B2  0D23               	rlf	??_myIsr+3,w
 14059  08B3  3EA9               	addlw	(low ((_ast_INTS| 0+1)))& (0+255)
 14060  08B4  0084               	movwf	4
 14061  08B5  0800               	movf	0,w
 14062  08B6  00A4               	movwf	??_myIsr+4
 14063  08B7  0A84               	incf	4,f
 14064  08B8  0800               	movf	0,w
 14065  08B9  00A5               	movwf	??_myIsr+5
 14066  08BA  0824               	movf	??_myIsr+4,w
 14067  08BB  0084               	movwf	4
 14068  08BC  1783               	bsf	3,7
 14069  08BD  1C25               	btfss	??_myIsr+5,0
 14070  08BE  1383               	bcf	3,7
 14071  08BF  0800               	movf	0,w
 14072  08C0  0522               	andwf	??_myIsr+2,w
 14073  08C1  160A  158A  2516  120A  158A  	fcall	i1___lbdiv
 14074  08C6  3A01               	xorlw	1
 14075  08C7  1D03               	skipz
 14076  08C8  28CA               	goto	u445_21
 14077  08C9  28CB               	goto	u445_20
 14078  08CA                     u445_21:
 14079  08CA  290A               	goto	i1l6048
 14080  08CB                     u445_20:
 14081  08CB                     i1l6044:
 14082                           
 14083                           ;Interrupts.c: 56:         {;Interrupts.c: 57:            ast_INTS[u8_counter].aptrf_INT
      +                          ();
 14084  08CB  0875               	movf	myIsr@u8_counter,w
 14085  08CC  1283               	bcf	3,5	;RP0=0, select bank0
 14086  08CD  1303               	bcf	3,6	;RP1=0, select bank0
 14087  08CE  00A0               	movwf	??_myIsr
 14088  08CF  3001               	movlw	1
 14089  08D0                     u446_25:
 14090  08D0  1003               	clrc
 14091  08D1  0DA0               	rlf	??_myIsr,f
 14092  08D2  3EFF               	addlw	-1
 14093  08D3  1D03               	skipz
 14094  08D4  28D0               	goto	u446_25
 14095  08D5  1003               	clrc
 14096  08D6  0D20               	rlf	??_myIsr,w
 14097  08D7  3EA8               	addlw	(low (_ast_INTS| 0))& (0+255)
 14098  08D8  0084               	movwf	4
 14099  08D9  1383               	bcf	3,7	;select IRP bank1
 14100  08DA  0800               	movf	0,w
 14101  08DB  120A  118A  2067  120A  158A  	fcall	i1fptable
 14102  08E0                     i1l6046:
 14103                           
 14104                           ;Interrupts.c: 58:            ((* (ast_INTS[u8_counter].REGISTER)))&=~(ast_INTS[u8_count
      +                          er].MASK);
 14105  08E0  0875               	movf	myIsr@u8_counter,w
 14106  08E1  1283               	bcf	3,5	;RP0=0, select bank0
 14107  08E2  1303               	bcf	3,6	;RP1=0, select bank0
 14108  08E3  00A0               	movwf	??_myIsr
 14109  08E4  3001               	movlw	1
 14110  08E5                     u447_25:
 14111  08E5  1003               	clrc
 14112  08E6  0DA0               	rlf	??_myIsr,f
 14113  08E7  3EFF               	addlw	-1
 14114  08E8  1D03               	skipz
 14115  08E9  28E5               	goto	u447_25
 14116  08EA  1003               	clrc
 14117  08EB  0D20               	rlf	??_myIsr,w
 14118  08EC  3EAB               	addlw	(low ((_ast_INTS| 0+3)))& (0+255)
 14119  08ED  0084               	movwf	4
 14120  08EE  1383               	bcf	3,7	;select IRP bank1
 14121  08EF  0900               	comf	0,w
 14122  08F0  00FF               	movwf	btemp+1
 14123  08F1  0875               	movf	myIsr@u8_counter,w
 14124  08F2  00A1               	movwf	??_myIsr+1
 14125  08F3  3001               	movlw	1
 14126  08F4                     u448_25:
 14127  08F4  1003               	clrc
 14128  08F5  0DA1               	rlf	??_myIsr+1,f
 14129  08F6  3EFF               	addlw	-1
 14130  08F7  1D03               	skipz
 14131  08F8  28F4               	goto	u448_25
 14132  08F9  1003               	clrc
 14133  08FA  0D21               	rlf	??_myIsr+1,w
 14134  08FB  3EA9               	addlw	(low ((_ast_INTS| 0+1)))& (0+255)
 14135  08FC  0084               	movwf	4
 14136  08FD  0800               	movf	0,w
 14137  08FE  00A2               	movwf	??_myIsr+2
 14138  08FF  0A84               	incf	4,f
 14139  0900  0800               	movf	0,w
 14140  0901  00A3               	movwf	??_myIsr+3
 14141  0902  0822               	movf	??_myIsr+2,w
 14142  0903  0084               	movwf	4
 14143  0904  1783               	bsf	3,7
 14144  0905  1C23               	btfss	??_myIsr+3,0
 14145  0906  1383               	bcf	3,7
 14146  0907  087F               	movf	btemp+1,w
 14147  0908  0580               	andwf	0,f
 14148                           
 14149                           ;Interrupts.c: 59:            break;
 14150  0909  2914               	goto	i1l208
 14151  090A                     i1l6048:
 14152                           
 14153                           ;Interrupts.c: 61:     }
 14154  090A  3001               	movlw	1
 14155  090B  00FF               	movwf	btemp+1
 14156  090C  087F               	movf	btemp+1,w
 14157  090D  07F5               	addwf	myIsr@u8_counter,f
 14158  090E                     i1l6050:
 14159  090E  3002               	movlw	2
 14160  090F  0275               	subwf	myIsr@u8_counter,w
 14161  0910  1C03               	skipc
 14162  0911  2913               	goto	u449_21
 14163  0912  2914               	goto	u449_20
 14164  0913                     u449_21:
 14165  0913  2888               	goto	i1l6042
 14166  0914                     u449_20:
 14167  0914                     i1l208:
 14168  0914  1283               	bcf	3,5	;RP0=0, select bank0
 14169  0915  1303               	bcf	3,6	;RP1=0, select bank0
 14170  0916  0829               	movf	??_myIsr+9,w
 14171  0917  00FF               	movwf	btemp+1
 14172  0918  0828               	movf	??_myIsr+8,w
 14173  0919  008A               	movwf	10
 14174  091A  0827               	movf	??_myIsr+7,w
 14175  091B  0084               	movwf	4
 14176  091C  0E26               	swapf	(??_myIsr+6)^0,w
 14177  091D  0083               	movwf	3
 14178  091E  0EFE               	swapf	btemp,f
 14179  091F  0E7E               	swapf	btemp,w
 14180  0920  0009               	retfie
 14181  0921                     __end_of_myIsr:
 14182                           
 14183                           	psect	intentry
 14184  0004                     __pintentry:	
 14185                           ;incstack = 0
 14186                           ; Regs used in _myIsr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 14187                           
 14188  0004                     interrupt_function:
 14189  007E                     saved_w	set	btemp
 14190  0004  00FE               	movwf	btemp
 14191  0005  0E03               	swapf	3,w
 14192  0006  1283               	bcf	3,5	;RP0=0, select bank0
 14193  0007  1303               	bcf	3,6	;RP1=0, select bank0
 14194  0008  00A6               	movwf	??_myIsr+6
 14195  0009  0804               	movf	4,w
 14196  000A  00A7               	movwf	??_myIsr+7
 14197  000B  080A               	movf	10,w
 14198  000C  00A8               	movwf	??_myIsr+8
 14199  000D  087F               	movf	btemp+1,w
 14200  000E  00A9               	movwf	??_myIsr+9
 14201  000F  120A  158A  2887   	ljmp	_myIsr
 14202                           
 14203                           	psect	text72
 14204  1D16                     __ptext72:	
 14205 ;; *************** function i1___lbdiv *****************
 14206 ;; Defined at:
 14207 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbdiv.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  dividend        1    wreg     unsigned char 
 14210 ;;  divisor         1    0[COMMON] unsigned char 
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;  dividend        1    1[COMMON] unsigned char 
 14213 ;;  quotient        1    3[COMMON] unsigned char 
 14214 ;;  counter         1    2[COMMON] unsigned char 
 14215 ;; Return value:  Size  Location     Type
 14216 ;;                  1    wreg      unsigned char 
 14217 ;; Registers used:
 14218 ;;		wreg, status,2, status,0, btemp+1
 14219 ;; Tracked objects:
 14220 ;;		On entry : 0/0
 14221 ;;		On exit  : 0/0
 14222 ;;		Unchanged: 0/0
 14223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14224 ;;      Params:         1       0       0       0       0
 14225 ;;      Locals:         3       0       0       0       0
 14226 ;;      Temps:          0       0       0       0       0
 14227 ;;      Totals:         4       0       0       0       0
 14228 ;;Total ram usage:        4 bytes
 14229 ;; Hardware stack levels used:    1
 14230 ;; This function calls:
 14231 ;;		Nothing
 14232 ;; This function is called by:
 14233 ;;		_myIsr
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           
 14238                           ;psect for function i1___lbdiv
 14239  1D16                     i1___lbdiv:
 14240                           
 14241                           ;incstack = 0
 14242                           ; Regs used in i1___lbdiv: [wreg+status,2+status,0+btemp+1]
 14243                           ;i1___lbdiv@dividend stored from wreg
 14244  1D16  00F1               	movwf	i1___lbdiv@dividend
 14245  1D17                     i1l6010:
 14246  1D17  01F3               	clrf	i1___lbdiv@quotient
 14247  1D18                     i1l6012:
 14248  1D18  0870               	movf	i1___lbdiv@divisor,w
 14249  1D19  1903               	btfsc	3,2
 14250  1D1A  2D1C               	goto	u438_21
 14251  1D1B  2D1D               	goto	u438_20
 14252  1D1C                     u438_21:
 14253  1D1C  2D3D               	goto	i1l6032
 14254  1D1D                     u438_20:
 14255  1D1D                     i1l6014:
 14256  1D1D  01F2               	clrf	i1___lbdiv@counter
 14257  1D1E  0AF2               	incf	i1___lbdiv@counter,f
 14258  1D1F  2D26               	goto	i1l6020
 14259  1D20                     i1l6016:
 14260  1D20  1003               	clrc
 14261  1D21  0DF0               	rlf	i1___lbdiv@divisor,f
 14262  1D22                     i1l6018:
 14263  1D22  3001               	movlw	1
 14264  1D23  00FF               	movwf	btemp+1
 14265  1D24  087F               	movf	btemp+1,w
 14266  1D25  07F2               	addwf	i1___lbdiv@counter,f
 14267  1D26                     i1l6020:
 14268  1D26  1FF0               	btfss	i1___lbdiv@divisor,7
 14269  1D27  2D29               	goto	u439_21
 14270  1D28  2D2A               	goto	u439_20
 14271  1D29                     u439_21:
 14272  1D29  2D20               	goto	i1l6016
 14273  1D2A                     u439_20:
 14274  1D2A                     i1l6022:
 14275  1D2A  1003               	clrc
 14276  1D2B  0DF3               	rlf	i1___lbdiv@quotient,f
 14277  1D2C  0870               	movf	i1___lbdiv@divisor,w
 14278  1D2D  0271               	subwf	i1___lbdiv@dividend,w
 14279  1D2E  1C03               	skipc
 14280  1D2F  2D31               	goto	u440_21
 14281  1D30  2D32               	goto	u440_20
 14282  1D31                     u440_21:
 14283  1D31  2D35               	goto	i1l6028
 14284  1D32                     u440_20:
 14285  1D32                     i1l6024:
 14286  1D32  0870               	movf	i1___lbdiv@divisor,w
 14287  1D33  02F1               	subwf	i1___lbdiv@dividend,f
 14288  1D34                     i1l6026:
 14289  1D34  1473               	bsf	i1___lbdiv@quotient,0
 14290  1D35                     i1l6028:
 14291  1D35  1003               	clrc
 14292  1D36  0CF0               	rrf	i1___lbdiv@divisor,f
 14293  1D37                     i1l6030:
 14294  1D37  3001               	movlw	1
 14295  1D38  02F2               	subwf	i1___lbdiv@counter,f
 14296  1D39  1D03               	btfss	3,2
 14297  1D3A  2D3C               	goto	u441_21
 14298  1D3B  2D3D               	goto	u441_20
 14299  1D3C                     u441_21:
 14300  1D3C  2D2A               	goto	i1l6022
 14301  1D3D                     u441_20:
 14302  1D3D                     i1l6032:
 14303  1D3D  0873               	movf	i1___lbdiv@quotient,w
 14304  1D3E                     i1l1168:
 14305  1D3E  0008               	return
 14306  1D3F                     __end_ofi1___lbdiv:
 14307                           
 14308                           	psect	text73
 14309  1C8B                     __ptext73:	
 14310 ;; *************** function _EXT_INT_Callbk *****************
 14311 ;; Defined at:
 14312 ;;		line 99 in file "MainAppSW.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;		None
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;		None
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  1    wreg      void 
 14319 ;; Registers used:
 14320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14326 ;;      Params:         0       0       0       0       0
 14327 ;;      Locals:         0       0       0       0       0
 14328 ;;      Temps:          0       0       0       0       0
 14329 ;;      Totals:         0       0       0       0       0
 14330 ;;Total ram usage:        0 bytes
 14331 ;; Hardware stack levels used:    1
 14332 ;; Hardware stack levels required when called:    1
 14333 ;; This function calls:
 14334 ;;		_Timer_Start
 14335 ;;		i1_CPU_SetSleep
 14336 ;; This function is called by:
 14337 ;;		_myIsr
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341                           
 14342                           ;psect for function _EXT_INT_Callbk
 14343  1C8B                     _EXT_INT_Callbk:
 14344  1C8B                     i1l5952:	
 14345                           ;incstack = 0
 14346                           ; Regs used in _EXT_INT_Callbk: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 14347                           
 14348                           
 14349                           ;MainAppSW.c: 101:     if(u8_WaterHeaterStatus == 11)
 14350  1C8B  300B               	movlw	11
 14351  1C8C  067B               	xorwf	_u8_WaterHeaterStatus,w
 14352  1C8D  1D03               	btfss	3,2
 14353  1C8E  2C90               	goto	u435_21
 14354  1C8F  2C91               	goto	u435_20
 14355  1C90                     u435_21:
 14356  1C90  2CA6               	goto	i1l5960
 14357  1C91                     u435_20:
 14358  1C91                     i1l5954:
 14359                           
 14360                           ;MainAppSW.c: 102:     {;MainAppSW.c: 103:         u8_WaterHeaterStatus = 10;
 14361  1C91  300A               	movlw	10
 14362  1C92  00FF               	movwf	btemp+1
 14363  1C93  087F               	movf	btemp+1,w
 14364  1C94  00FB               	movwf	_u8_WaterHeaterStatus
 14365  1C95                     i1l5956:
 14366                           
 14367                           ;MainAppSW.c: 104:         Timer_Start(1,5000);
 14368  1C95  3088               	movlw	136
 14369  1C96  00F0               	movwf	Timer_Start@u16_Timer_Count
 14370  1C97  3013               	movlw	19
 14371  1C98  00F1               	movwf	Timer_Start@u16_Timer_Count+1
 14372  1C99  3001               	movlw	1
 14373  1C9A  160A  118A  2549  160A  158A  	fcall	_Timer_Start
 14374  1C9F                     i1l5958:
 14375                           
 14376                           ;MainAppSW.c: 105:         CPU_SetSleep(25);
 14377  1C9F  3019               	movlw	25
 14378  1CA0  160A  158A  22EC  160A  158A  	fcall	i1_CPU_SetSleep
 14379                           
 14380                           ;MainAppSW.c: 106:    }
 14381  1CA5  2CAA               	goto	i1l330
 14382  1CA6                     i1l5960:
 14383                           
 14384                           ;MainAppSW.c: 108:     {;MainAppSW.c: 109:         u8_WaterHeaterStatus = 11;
 14385  1CA6  300B               	movlw	11
 14386  1CA7  00FF               	movwf	btemp+1
 14387  1CA8  087F               	movf	btemp+1,w
 14388  1CA9  00FB               	movwf	_u8_WaterHeaterStatus
 14389  1CAA                     i1l330:
 14390  1CAA  0008               	return
 14391  1CAB                     __end_of_EXT_INT_Callbk:
 14392                           
 14393                           	psect	text74
 14394  1B9F                     __ptext74:	
 14395 ;; *************** function _Timer_Callbk *****************
 14396 ;; Defined at:
 14397 ;;		line 90 in file "MainAppSW.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;		None
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;		None
 14402 ;; Return value:  Size  Location     Type
 14403 ;;                  1    wreg      void 
 14404 ;; Registers used:
 14405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 14406 ;; Tracked objects:
 14407 ;;		On entry : 0/0
 14408 ;;		On exit  : 0/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14411 ;;      Params:         0       0       0       0       0
 14412 ;;      Locals:         0       0       0       0       0
 14413 ;;      Temps:          0       0       0       0       0
 14414 ;;      Totals:         0       0       0       0       0
 14415 ;;Total ram usage:        0 bytes
 14416 ;; Hardware stack levels used:    1
 14417 ;; Hardware stack levels required when called:    1
 14418 ;; This function calls:
 14419 ;;		_Timer_SetValue
 14420 ;; This function is called by:
 14421 ;;		_myIsr
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           
 14426                           ;psect for function _Timer_Callbk
 14427  1B9F                     _Timer_Callbk:
 14428  1B9F                     i1l5948:	
 14429                           ;incstack = 0
 14430                           ; Regs used in _Timer_Callbk: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 14431                           
 14432                           
 14433                           ;MainAppSW.c: 92:     Timer_SetValue(1,5000);
 14434  1B9F  3088               	movlw	136
 14435  1BA0  00F0               	movwf	Timer_SetValue@u16_Timer_Count
 14436  1BA1  3013               	movlw	19
 14437  1BA2  00F1               	movwf	Timer_SetValue@u16_Timer_Count+1
 14438  1BA3  3001               	movlw	1
 14439  1BA4  160A  118A  21C5  160A  158A  	fcall	_Timer_SetValue
 14440  1BA9                     i1l5950:
 14441                           
 14442                           ;MainAppSW.c: 93:     u8_MainLoopStatus=15;
 14443  1BA9  300F               	movlw	15
 14444  1BAA  00FF               	movwf	btemp+1
 14445  1BAB  087F               	movf	btemp+1,w
 14446  1BAC  1283               	bcf	3,5	;RP0=0, select bank0
 14447  1BAD  1303               	bcf	3,6	;RP1=0, select bank0
 14448  1BAE  00E5               	movwf	_u8_MainLoopStatus
 14449  1BAF                     i1l325:
 14450  1BAF  0008               	return
 14451  1BB0                     __end_of_Timer_Callbk:
 14452                           
 14453                           	psect	text75
 14454  11C5                     __ptext75:	
 14455 ;; *************** function _Timer_SetValue *****************
 14456 ;; Defined at:
 14457 ;;		line 527 in file "TIMER.c"
 14458 ;; Parameters:    Size  Location     Type
 14459 ;;  u8_Timer_CH_    1    wreg     unsigned char 
 14460 ;;  u16_Timer_Co    2    0[COMMON] unsigned int 
 14461 ;; Auto vars:     Size  Location     Type
 14462 ;;  u8_Timer_CH_    1    4[COMMON] unsigned char 
 14463 ;; Return value:  Size  Location     Type
 14464 ;;                  1    wreg      void 
 14465 ;; Registers used:
 14466 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14467 ;; Tracked objects:
 14468 ;;		On entry : 0/0
 14469 ;;		On exit  : 0/0
 14470 ;;		Unchanged: 0/0
 14471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14472 ;;      Params:         2       0       0       0       0
 14473 ;;      Locals:         1       0       0       0       0
 14474 ;;      Temps:          2       0       0       0       0
 14475 ;;      Totals:         5       0       0       0       0
 14476 ;;Total ram usage:        5 bytes
 14477 ;; Hardware stack levels used:    1
 14478 ;; This function calls:
 14479 ;;		Nothing
 14480 ;; This function is called by:
 14481 ;;		_Timer_Callbk
 14482 ;; This function uses a non-reentrant model
 14483 ;;
 14484                           
 14485                           
 14486                           ;psect for function _Timer_SetValue
 14487  11C5                     _Timer_SetValue:
 14488                           
 14489                           ;incstack = 0
 14490                           ; Regs used in _Timer_SetValue: [wreg-fsr0h+status,2+status,0]
 14491                           ;Timer_SetValue@u8_Timer_CH_NO stored from wreg
 14492  11C5  00F4               	movwf	Timer_SetValue@u8_Timer_CH_NO
 14493  11C6                     i1l5414:
 14494                           
 14495                           ;TIMER.c: 527: void Timer_SetValue(uint8 u8_Timer_CH_NO, uint16 u16_Timer_Count);TIMER.c
      +                          : 528: {;TIMER.c: 529:  switch(u8_Timer_CH_NO)
 14496  11C6  2A00               	goto	i1l5436
 14497  11C7                     i1l5416:
 14498                           
 14499                           ;TIMER.c: 533:    if(u16_Timer_Count > 255)
 14500  11C7  3001               	movlw	1
 14501  11C8  0271               	subwf	Timer_SetValue@u16_Timer_Count+1,w
 14502  11C9  3000               	movlw	0
 14503  11CA  1903               	skipnz
 14504  11CB  0270               	subwf	Timer_SetValue@u16_Timer_Count,w
 14505  11CC  1C03               	skipc
 14506  11CD  29CF               	goto	u404_21
 14507  11CE  29D0               	goto	u404_20
 14508  11CF                     u404_21:
 14509  11CF  29D1               	goto	i1l5420
 14510  11D0                     u404_20:
 14511  11D0  2A13               	goto	i1l651
 14512  11D1                     i1l5420:
 14513                           
 14514                           ;TIMER.c: 537:    {;TIMER.c: 539:                 u16_Timer_Count = 255 - u16_Timer_Coun
      +                          t;
 14515  11D1  30FF               	movlw	255
 14516  11D2  00F2               	movwf	??_Timer_SetValue
 14517  11D3  0870               	movf	Timer_SetValue@u16_Timer_Count,w
 14518  11D4  0272               	subwf	??_Timer_SetValue,w
 14519  11D5  00F0               	movwf	Timer_SetValue@u16_Timer_Count
 14520  11D6  0971               	comf	Timer_SetValue@u16_Timer_Count+1,w
 14521  11D7  1803               	skipnc
 14522  11D8  3E01               	addlw	1
 14523  11D9  00F1               	movwf	Timer_SetValue@u16_Timer_Count+1
 14524                           
 14525                           ;TIMER.c: 540:     TMR0 = u16_Timer_Count;
 14526  11DA  0870               	movf	Timer_SetValue@u16_Timer_Count,w
 14527  11DB  1283               	bcf	3,5	;RP0=0, select bank0
 14528  11DC  1303               	bcf	3,6	;RP1=0, select bank0
 14529  11DD  0081               	movwf	1	;volatile
 14530  11DE  2A13               	goto	i1l651
 14531  11DF                     i1l645:	
 14532                           ;TIMER.c: 548:    else
 14533                           
 14534                           
 14535                           ;TIMER.c: 549:    {;TIMER.c: 551:                 u16_Timer_Count = 65535 - u16_Timer_Co
      +                          unt;
 14536  11DF  09F0               	comf	Timer_SetValue@u16_Timer_Count,f
 14537  11E0  09F1               	comf	Timer_SetValue@u16_Timer_Count+1,f
 14538  11E1                     i1l5424:
 14539                           
 14540                           ;TIMER.c: 553:                 TMR1L = u16_Timer_Count & 0x00FF;
 14541  11E1  0870               	movf	Timer_SetValue@u16_Timer_Count,w
 14542  11E2  1283               	bcf	3,5	;RP0=0, select bank0
 14543  11E3  1303               	bcf	3,6	;RP1=0, select bank0
 14544  11E4  008E               	movwf	14	;volatile
 14545  11E5                     i1l5426:
 14546                           
 14547                           ;TIMER.c: 554:                 TMR1H = (u16_Timer_Count & 0xFF00)>>8;
 14548  11E5  0871               	movf	Timer_SetValue@u16_Timer_Count+1,w
 14549  11E6  008F               	movwf	15	;volatile
 14550  11E7  2A13               	goto	i1l651
 14551  11E8                     i1l5428:
 14552                           
 14553                           ;TIMER.c: 560:    if(u16_Timer_Count > 255)
 14554  11E8  3001               	movlw	1
 14555  11E9  0271               	subwf	Timer_SetValue@u16_Timer_Count+1,w
 14556  11EA  3000               	movlw	0
 14557  11EB  1903               	skipnz
 14558  11EC  0270               	subwf	Timer_SetValue@u16_Timer_Count,w
 14559  11ED  1C03               	skipc
 14560  11EE  29F0               	goto	u405_21
 14561  11EF  29F1               	goto	u405_20
 14562  11F0                     u405_21:
 14563  11F0  29F2               	goto	i1l5432
 14564  11F1                     u405_20:
 14565  11F1  2A13               	goto	i1l651
 14566  11F2                     i1l5432:
 14567                           
 14568                           ;TIMER.c: 565:    {;TIMER.c: 566:                 u16_Timer_Count = 255 - u16_Timer_Coun
      +                          t;
 14569  11F2  30FF               	movlw	255
 14570  11F3  00F2               	movwf	??_Timer_SetValue
 14571  11F4  0870               	movf	Timer_SetValue@u16_Timer_Count,w
 14572  11F5  0272               	subwf	??_Timer_SetValue,w
 14573  11F6  00F0               	movwf	Timer_SetValue@u16_Timer_Count
 14574  11F7  0971               	comf	Timer_SetValue@u16_Timer_Count+1,w
 14575  11F8  1803               	skipnc
 14576  11F9  3E01               	addlw	1
 14577  11FA  00F1               	movwf	Timer_SetValue@u16_Timer_Count+1
 14578                           
 14579                           ;TIMER.c: 567:                 TMR2 = u16_Timer_Count;
 14580  11FB  0870               	movf	Timer_SetValue@u16_Timer_Count,w
 14581  11FC  1283               	bcf	3,5	;RP0=0, select bank0
 14582  11FD  1303               	bcf	3,6	;RP1=0, select bank0
 14583  11FE  0091               	movwf	17	;volatile
 14584  11FF  2A13               	goto	i1l651
 14585  1200                     i1l5436:
 14586  1200  0874               	movf	Timer_SetValue@u8_Timer_CH_NO,w
 14587  1201  00F2               	movwf	??_Timer_SetValue
 14588  1202  01F3               	clrf	??_Timer_SetValue+1
 14589                           
 14590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14591                           ; Switch size 1, requested type "simple"
 14592                           ; Number of cases is 1, Range of values is 0 to 0
 14593                           ; switch strategies available:
 14594                           ; Name         Instructions Cycles
 14595                           ; simple_byte            4     3 (average)
 14596                           ; direct_byte           11     8 (fixed)
 14597                           ; jumptable            260     6 (fixed)
 14598                           ;	Chosen strategy is simple_byte
 14599  1203  0873               	movf	??_Timer_SetValue+1,w
 14600  1204  3A00               	xorlw	0	; case 0
 14601  1205  1903               	skipnz
 14602  1206  2A08               	goto	i1l9854
 14603  1207  2A13               	goto	i1l651
 14604  1208                     i1l9854:
 14605                           
 14606                           ; Switch size 1, requested type "simple"
 14607                           ; Number of cases is 3, Range of values is 0 to 2
 14608                           ; switch strategies available:
 14609                           ; Name         Instructions Cycles
 14610                           ; simple_byte           10     6 (average)
 14611                           ; direct_byte           17     8 (fixed)
 14612                           ; jumptable            260     6 (fixed)
 14613                           ;	Chosen strategy is simple_byte
 14614  1208  0872               	movf	??_Timer_SetValue,w
 14615  1209  3A00               	xorlw	0	; case 0
 14616  120A  1903               	skipnz
 14617  120B  29C7               	goto	i1l5416
 14618  120C  3A01               	xorlw	1	; case 1
 14619  120D  1903               	skipnz
 14620  120E  29DF               	goto	i1l645
 14621  120F  3A03               	xorlw	3	; case 2
 14622  1210  1903               	skipnz
 14623  1211  29E8               	goto	i1l5428
 14624  1212  2A13               	goto	i1l651
 14625  1213                     i1l651:
 14626  1213  0008               	return
 14627  1214                     __end_of_Timer_SetValue:
 14628                           
 14629                           	psect	text76
 14630  1AEC                     __ptext76:	
 14631 ;; *************** function i1_CPU_SetSleep *****************
 14632 ;; Defined at:
 14633 ;;		line 34 in file "SLEEP.c"
 14634 ;; Parameters:    Size  Location     Type
 14635 ;;  u8_SleepMode    1    wreg     unsigned char 
 14636 ;; Auto vars:     Size  Location     Type
 14637 ;;  u8_SleepMode    1    0[COMMON] unsigned char 
 14638 ;; Return value:  Size  Location     Type
 14639 ;;                  1    wreg      void 
 14640 ;; Registers used:
 14641 ;;		wreg, btemp+1
 14642 ;; Tracked objects:
 14643 ;;		On entry : 0/0
 14644 ;;		On exit  : 0/0
 14645 ;;		Unchanged: 0/0
 14646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14647 ;;      Params:         0       0       0       0       0
 14648 ;;      Locals:         1       0       0       0       0
 14649 ;;      Temps:          0       0       0       0       0
 14650 ;;      Totals:         1       0       0       0       0
 14651 ;;Total ram usage:        1 bytes
 14652 ;; Hardware stack levels used:    1
 14653 ;; This function calls:
 14654 ;;		Nothing
 14655 ;; This function is called by:
 14656 ;;		_EXT_INT_Callbk
 14657 ;; This function uses a non-reentrant model
 14658 ;;
 14659                           
 14660                           
 14661                           ;psect for function i1_CPU_SetSleep
 14662  1AEC                     i1_CPU_SetSleep:
 14663                           
 14664                           ;incstack = 0
 14665                           ; Regs used in i1_CPU_SetSleep: [wreg+btemp+1]
 14666                           ;i1CPU_SetSleep@u8_SleepMode stored from wreg
 14667  1AEC  00F0               	movwf	i1CPU_SetSleep@u8_SleepMode
 14668  1AED                     i1l5946:
 14669                           
 14670                           ;SLEEP.c: 34: void CPU_SetSleep(uint8 u8_SleepMode);SLEEP.c: 35: {;SLEEP.c: 36:     u8_M
      +                          ode=u8_SleepMode;
 14671  1AED  0870               	movf	i1CPU_SetSleep@u8_SleepMode,w
 14672  1AEE  00FF               	movwf	btemp+1
 14673  1AEF  087F               	movf	btemp+1,w
 14674  1AF0  1283               	bcf	3,5	;RP0=0, select bank0
 14675  1AF1  1303               	bcf	3,6	;RP1=0, select bank0
 14676  1AF2  00E4               	movwf	_u8_Mode
 14677  1AF3                     i1l740:
 14678  1AF3  0008               	return
 14679  1AF4                     __end_ofi1_CPU_SetSleep:
 14680                           
 14681                           	psect	text77
 14682  1549                     __ptext77:	
 14683 ;; *************** function _Timer_Start *****************
 14684 ;; Defined at:
 14685 ;;		line 312 in file "TIMER.c"
 14686 ;; Parameters:    Size  Location     Type
 14687 ;;  u8_Timer_CH_    1    wreg     unsigned char 
 14688 ;;  u16_Timer_Co    2    0[COMMON] unsigned int 
 14689 ;; Auto vars:     Size  Location     Type
 14690 ;;  u8_Timer_CH_    1    4[COMMON] unsigned char 
 14691 ;; Return value:  Size  Location     Type
 14692 ;;                  1    wreg      void 
 14693 ;; Registers used:
 14694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 14695 ;; Tracked objects:
 14696 ;;		On entry : 0/0
 14697 ;;		On exit  : 0/0
 14698 ;;		Unchanged: 0/0
 14699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14700 ;;      Params:         2       0       0       0       0
 14701 ;;      Locals:         1       0       0       0       0
 14702 ;;      Temps:          2       0       0       0       0
 14703 ;;      Totals:         5       0       0       0       0
 14704 ;;Total ram usage:        5 bytes
 14705 ;; Hardware stack levels used:    1
 14706 ;; This function calls:
 14707 ;;		Nothing
 14708 ;; This function is called by:
 14709 ;;		_EXT_INT_Callbk
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713                           
 14714                           ;psect for function _Timer_Start
 14715  1549                     _Timer_Start:
 14716                           
 14717                           ;incstack = 0
 14718                           ; Regs used in _Timer_Start: [wreg-fsr0h+status,2+status,0+btemp+1]
 14719                           ;Timer_Start@u8_Timer_CH_NO stored from wreg
 14720  1549  00F4               	movwf	Timer_Start@u8_Timer_CH_NO
 14721  154A                     i1l5442:
 14722                           
 14723                           ;TIMER.c: 312: void Timer_Start(uint8 u8_Timer_CH_NO, uint16 u16_Timer_Count);TIMER.c: 3
      +                          13: {;TIMER.c: 314:  switch(u8_Timer_CH_NO)
 14724  154A  2D9C               	goto	i1l5474
 14725  154B                     i1l5444:
 14726                           
 14727                           ;TIMER.c: 318:    if(u16_Timer_Count > 255)
 14728  154B  3001               	movlw	1
 14729  154C  0271               	subwf	Timer_Start@u16_Timer_Count+1,w
 14730  154D  3000               	movlw	0
 14731  154E  1903               	skipnz
 14732  154F  0270               	subwf	Timer_Start@u16_Timer_Count,w
 14733  1550  1C03               	skipc
 14734  1551  2D53               	goto	u406_21
 14735  1552  2D54               	goto	u406_20
 14736  1553                     u406_21:
 14737  1553  2D55               	goto	i1l589
 14738  1554                     u406_20:
 14739  1554  2DAF               	goto	i1l599
 14740  1555                     i1l589:	
 14741                           ;TIMER.c: 322:    else
 14742                           
 14743                           
 14744                           ;TIMER.c: 323:    {;TIMER.c: 325:     au8_Timer_Started[0]=1;
 14745  1555  1683               	bsf	3,5	;RP0=1, select bank1
 14746  1556  1303               	bcf	3,6	;RP1=0, select bank1
 14747  1557  01B6               	clrf	_au8_Timer_Started^(0+128)
 14748  1558  0AB6               	incf	_au8_Timer_Started^(0+128),f
 14749  1559                     i1l5448:
 14750                           
 14751                           ;TIMER.c: 328:                 u16_Timer_Count = 255 - u16_Timer_Count;
 14752  1559  30FF               	movlw	255
 14753  155A  00F2               	movwf	??_Timer_Start
 14754  155B  0870               	movf	Timer_Start@u16_Timer_Count,w
 14755  155C  0272               	subwf	??_Timer_Start,w
 14756  155D  00F0               	movwf	Timer_Start@u16_Timer_Count
 14757  155E  0971               	comf	Timer_Start@u16_Timer_Count+1,w
 14758  155F  1803               	skipnc
 14759  1560  3E01               	addlw	1
 14760  1561  00F1               	movwf	Timer_Start@u16_Timer_Count+1
 14761                           
 14762                           ;TIMER.c: 331:                 TMR0 = u16_Timer_Count;
 14763  1562  0870               	movf	Timer_Start@u16_Timer_Count,w
 14764  1563  1283               	bcf	3,5	;RP0=0, select bank0
 14765  1564  1303               	bcf	3,6	;RP1=0, select bank0
 14766  1565  0081               	movwf	1	;volatile
 14767  1566                     i1l5450:
 14768                           
 14769                           ;TIMER.c: 334:     (OPTION_REG)&=~(0x20);
 14770  1566  30DF               	movlw	223
 14771  1567  00FF               	movwf	btemp+1
 14772  1568  087F               	movf	btemp+1,w
 14773  1569  1683               	bsf	3,5	;RP0=1, select bank1
 14774  156A  1303               	bcf	3,6	;RP1=0, select bank1
 14775  156B  0581               	andwf	1,f	;volatile
 14776  156C  2DAF               	goto	i1l599
 14777  156D                     i1l593:	
 14778                           ;TIMER.c: 342:    else
 14779                           
 14780                           
 14781                           ;TIMER.c: 343:    {;TIMER.c: 346:                 u16_Timer_Count = 65535 - u16_Timer_Co
      +                          unt;
 14782  156D  09F0               	comf	Timer_Start@u16_Timer_Count,f
 14783  156E  09F1               	comf	Timer_Start@u16_Timer_Count+1,f
 14784  156F                     i1l5454:
 14785                           
 14786                           ;TIMER.c: 349:                 TMR1L = u16_Timer_Count & 0x00FF;
 14787  156F  0870               	movf	Timer_Start@u16_Timer_Count,w
 14788  1570  1283               	bcf	3,5	;RP0=0, select bank0
 14789  1571  1303               	bcf	3,6	;RP1=0, select bank0
 14790  1572  008E               	movwf	14	;volatile
 14791  1573                     i1l5456:
 14792                           
 14793                           ;TIMER.c: 350:                 TMR1H = (u16_Timer_Count & 0xFF00)>>8;
 14794  1573  0871               	movf	Timer_Start@u16_Timer_Count+1,w
 14795  1574  008F               	movwf	15	;volatile
 14796  1575                     i1l5458:
 14797                           
 14798                           ;TIMER.c: 353:     au8_Timer_Started[1]=1;
 14799  1575  1683               	bsf	3,5	;RP0=1, select bank1
 14800  1576  1303               	bcf	3,6	;RP1=0, select bank1
 14801  1577  01B7               	clrf	(_au8_Timer_Started^(0+128)+1)
 14802  1578  0AB7               	incf	(_au8_Timer_Started^(0+128)+1),f
 14803  1579                     i1l5460:
 14804                           
 14805                           ;TIMER.c: 356:                 (T1CON)|=(0x01);
 14806  1579  1283               	bcf	3,5	;RP0=0, select bank0
 14807  157A  1303               	bcf	3,6	;RP1=0, select bank0
 14808  157B  1410               	bsf	16,0	;volatile
 14809  157C  2DAF               	goto	i1l599
 14810  157D                     i1l5462:
 14811                           
 14812                           ;TIMER.c: 361:             u16_Timer_Count = 255 - u16_Timer_Count;
 14813  157D  30FF               	movlw	255
 14814  157E  00F2               	movwf	??_Timer_Start
 14815  157F  0870               	movf	Timer_Start@u16_Timer_Count,w
 14816  1580  0272               	subwf	??_Timer_Start,w
 14817  1581  00F0               	movwf	Timer_Start@u16_Timer_Count
 14818  1582  0971               	comf	Timer_Start@u16_Timer_Count+1,w
 14819  1583  1803               	skipnc
 14820  1584  3E01               	addlw	1
 14821  1585  00F1               	movwf	Timer_Start@u16_Timer_Count+1
 14822                           
 14823                           ;TIMER.c: 362:    if(u16_Timer_Count > 255)
 14824  1586  3001               	movlw	1
 14825  1587  0271               	subwf	Timer_Start@u16_Timer_Count+1,w
 14826  1588  3000               	movlw	0
 14827  1589  1903               	skipnz
 14828  158A  0270               	subwf	Timer_Start@u16_Timer_Count,w
 14829  158B  1C03               	skipc
 14830  158C  2D8E               	goto	u407_21
 14831  158D  2D8F               	goto	u407_20
 14832  158E                     u407_21:
 14833  158E  2D90               	goto	i1l5466
 14834  158F                     u407_20:
 14835  158F  2DAF               	goto	i1l599
 14836  1590                     i1l5466:
 14837                           
 14838                           ;TIMER.c: 367:    {;TIMER.c: 368:                 TMR2 = u16_Timer_Count;
 14839  1590  0870               	movf	Timer_Start@u16_Timer_Count,w
 14840  1591  1283               	bcf	3,5	;RP0=0, select bank0
 14841  1592  1303               	bcf	3,6	;RP1=0, select bank0
 14842  1593  0091               	movwf	17	;volatile
 14843  1594                     i1l5468:
 14844                           
 14845                           ;TIMER.c: 369:     au8_Timer_Started[2]=1;
 14846  1594  1683               	bsf	3,5	;RP0=1, select bank1
 14847  1595  1303               	bcf	3,6	;RP1=0, select bank1
 14848  1596  01B8               	clrf	(_au8_Timer_Started^(0+128)+2)
 14849  1597  0AB8               	incf	(_au8_Timer_Started^(0+128)+2),f
 14850  1598                     i1l5470:
 14851                           
 14852                           ;TIMER.c: 370:                 (T2CON)|=(0x04);
 14853  1598  1283               	bcf	3,5	;RP0=0, select bank0
 14854  1599  1303               	bcf	3,6	;RP1=0, select bank0
 14855  159A  1512               	bsf	18,2	;volatile
 14856  159B  2DAF               	goto	i1l599
 14857  159C                     i1l5474:
 14858  159C  0874               	movf	Timer_Start@u8_Timer_CH_NO,w
 14859  159D  00F2               	movwf	??_Timer_Start
 14860  159E  01F3               	clrf	??_Timer_Start+1
 14861                           
 14862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14863                           ; Switch size 1, requested type "simple"
 14864                           ; Number of cases is 1, Range of values is 0 to 0
 14865                           ; switch strategies available:
 14866                           ; Name         Instructions Cycles
 14867                           ; simple_byte            4     3 (average)
 14868                           ; direct_byte           11     8 (fixed)
 14869                           ; jumptable            260     6 (fixed)
 14870                           ;	Chosen strategy is simple_byte
 14871  159F  0873               	movf	??_Timer_Start+1,w
 14872  15A0  3A00               	xorlw	0	; case 0
 14873  15A1  1903               	skipnz
 14874  15A2  2DA4               	goto	i1l9856
 14875  15A3  2DAF               	goto	i1l599
 14876  15A4                     i1l9856:
 14877                           
 14878                           ; Switch size 1, requested type "simple"
 14879                           ; Number of cases is 3, Range of values is 0 to 2
 14880                           ; switch strategies available:
 14881                           ; Name         Instructions Cycles
 14882                           ; simple_byte           10     6 (average)
 14883                           ; direct_byte           17     8 (fixed)
 14884                           ; jumptable            260     6 (fixed)
 14885                           ;	Chosen strategy is simple_byte
 14886  15A4  0872               	movf	??_Timer_Start,w
 14887  15A5  3A00               	xorlw	0	; case 0
 14888  15A6  1903               	skipnz
 14889  15A7  2D4B               	goto	i1l5444
 14890  15A8  3A01               	xorlw	1	; case 1
 14891  15A9  1903               	skipnz
 14892  15AA  2D6D               	goto	i1l593
 14893  15AB  3A03               	xorlw	3	; case 2
 14894  15AC  1903               	skipnz
 14895  15AD  2D7D               	goto	i1l5462
 14896  15AE  2DAF               	goto	i1l599
 14897  15AF                     i1l599:
 14898  15AF  0008               	return
 14899  15B0                     __end_of_Timer_Start:
 14900  0004                     
 14901                           	psect	functab
 14902  0066                     __pfunctab:
 14903  0066                     fptable:
 14904  0066  2866               	goto	fptable	;no entries
 14905  0067                     __i1fptable:
 14906  0067                     i1fptable:
 14907  0067  00FF               	movwf	(btemp+1)& (0+127)
 14908  0068  3000               	movlw	high i1fptable
 14909  0069  008A               	movwf	10
 14910  006A  087F               	movf	(btemp+1)& (0+127),w
 14911  006B  0782               	addwf	2,f
 14912  006C                     i1fpbase:
 14913  006C  286C               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
 14914  006D                     fp__Timer_Callbk:
 14915  006D  160A  158A  2B9F   	ljmp	_Timer_Callbk
 14916  0070                     fp__EXT_INT_Callbk:
 14917  0070  160A  158A  2C8B   	ljmp	_EXT_INT_Callbk
 14918  0073                     __end_of__i1fptable:
 14919  007E                     btemp	set	126	;btemp
 14920  007E                     wtemp0	set	126
 14921                           
 14922                           	psect	config
 14923                           
 14924                           ;Config register CONFIG @ 0x2007
 14925                           ;	Oscillator Selection bits
 14926                           ;	FOSC = HS, HS oscillator
 14927                           ;	Watchdog Timer Enable bit
 14928                           ;	WDTE = OFF, WDT disabled
 14929                           ;	Power-up Timer Enable bit
 14930                           ;	PWRTE = OFF, PWRT disabled
 14931                           ;	Brown-out Reset Enable bit
 14932                           ;	BOREN = OFF, BOR disabled
 14933                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 14934                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
 14935                           ;	Data EEPROM Memory Code Protection bit
 14936                           ;	CPD = OFF, Data EEPROM code protection off
 14937                           ;	Flash Program Memory Write Enable bits
 14938                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 14939                           ;	In-Circuit Debugger Mode bit
 14940                           ;	DEBUG = 0x1, unprogrammed default
 14941                           ;	Flash Program Memory Code Protection bit
 14942                           ;	CP = OFF, Code protection off
 14943  2007                     	org	8199
 14944  2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        86
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     60      70
    BANK1            80     23      79
    BANK3            96      9      83
    BANK2            96      0       0

Pointer List with Targets:

    ADC_init@ptrf_ADC_cbk	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    ptrf_ADC_cbk	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), 

    EEPROM_Read@pu8_Data	PTR unsigned char  size(1) Largest target is 1
		 -> App_init@temp(BANK0[1]), u8_SetTemperature(COMMON[1]), 

    ExternInt_Init@pstr_ExternIntCfg.ExternInt_CBF_Ptr	PTR FTN()void  size(1) Largest target is 1
		 -> EXT_INT_Callbk(), 

    ExternInt_Init@pstr_ExternIntCfg	PTR struct ExternInt_Cfg_s size(1) Largest target is 3
		 -> App_init@zft(BANK0[3]), 

    I2C_Master_Read@pu8_Data	PTR unsigned char  size(1) Largest target is 1
		 -> App_init@temp(BANK0[1]), u8_SetTemperature(COMMON[1]), 

    TemperatureAVGReading_Read@pu8_AVGtemperature	PTR unsigned char  size(1) Largest target is 1
		 -> u8_AVG_Temperature(COMMON[1]), 

    Timer_Init@st_Timer_cfg.aptrf_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Timer_Callbk(), 

    Timer_Init@st_Timer_cfg	PTR struct str_Timer_cfg_t size(1) Largest target is 5
		 -> App_init@MyTimer(BANK0[5]), 

    pushButton_GetStatus@pu8_BtnState	PTR unsigned char  size(1) Largest target is 1
		 -> App_Update@u8_BtnDownStatus(BANK3[1]), App_Update@u8_BtnUpStatus(BANK3[1]), 

    MyTimer.aptrf_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Timer_Callbk(), 

    S230str_Timer_cfg_t$aptrf_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Timer_Callbk(), 

    F166.aptrf_INT	PTR FTN()void  size(1) Largest target is 1
		 -> Timer_Callbk(), 

    zft.ExternInt_CBF_Ptr	PTR FTN()void  size(1) Largest target is 1
		 -> EXT_INT_Callbk(), 

    S202ExternInt_Cfg_s$ExternInt_CBF_Ptr	PTR FTN()void  size(1) Largest target is 1
		 -> EXT_INT_Callbk(), 

    F162.ExternInt_CBF_Ptr	PTR FTN()void  size(1) Largest target is 1
		 -> EXT_INT_Callbk(), 

    LM_Read@pu8_temperature	PTR unsigned char  size(1) Largest target is 1
		 -> TemperatureAVGReading_Update@u8_LMTemperature(BANK3[1]), App_Update@u8_CurrentTemperature(BANK3[1]), 

    INT_SetCallBackFunc@ptrf_CallBkFunc	PTR FTN()void  size(1) Largest target is 1
		 -> EXT_INT_Callbk(), Timer_Callbk(), 

    INT_SetCallBackFunc@pu8_Register	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PIR1(SFR0[1]), INTCON(SFR0[1]), 

    S124ST_INTs_t$REGISTER	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PIR1(SFR0[1]), INTCON(SFR0[1]), 

    ast_INTS.REGISTER	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PIR1(SFR0[1]), INTCON(SFR0[1]), 

    S124ST_INTs_t$aptrf_INT	PTR FTN()void  size(1) Largest target is 1
		 -> EXT_INT_Callbk(), Timer_Callbk(), 

    ast_INTS.aptrf_INT	PTR FTN()void  size(1) Largest target is 1
		 -> EXT_INT_Callbk(), Timer_Callbk(), 

    DIO_Read@pu8_data	PTR unsigned char  size(1) Largest target is 24
		 -> STA_buttons.samples(BANK3[2]), STA_buttons(BANK3[24]), 

    ADC_ReadResult@ptru16_Result	PTR unsigned int  size(1) Largest target is 2
		 -> u16_ADCReading(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    _Timer_Callbk->_Timer_SetValue
    _EXT_INT_Callbk->_Timer_Start

Critical Paths under _main in BANK0

    _pushButton_Init->_DIO_init
    _Timer_Init->_INT_SetCallBackFunc
    _LM_init->_ADC_init
    _Led_Init->_DIO_init
    _Heater_Init->_DIO_init
    _ExternInt_Init->_INT_SetCallBackFunc
    _EEPROM_Read->_I2C_Master_AckEN
    _EEPROM_Read->_I2C_Master_Read
    _EEPROM_Read->_I2C_Master_Write
    _EEPROM_Init->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Display_Init->_SSD_Init
    _SSD_Init->_DIO_init
    _Cooler_Init->_DIO_init
    _pushButton_Update->_DIO_Read
    _DIO_Read->___lbdiv
    _LM_Update->_ADC_ReadResult
    _SSD_Update->_DIO_Write
    _Display_Update->_SSD_SetValue
    _SSD_SetValue->___awdiv
    _TemperatureAVGReading_Read->___lwdiv
    _LM_Read->___fltol
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _LED_ACTION->_Led_Off
    _LED_ACTION->_Led_On
    _Led_Toggle->_DIO_Toggle
    _Led_On->_DIO_Write
    _Led_Off->_DIO_Write
    _Heater_Cooler_action->_Cooler_Turn
    _Heater_Cooler_action->_Heater_Turn
    _Heater_Turn->_DIO_Write
    _Cooler_Turn->_DIO_Write
    _EEPROM_Write->_I2C_Master_Write
    _Display_TurnOff->_SSD_TurnOff
    _SSD_TurnOff->_DIO_Write

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _TemperatureAVGReading_Update->_LM_Read
    _App_Update->_LM_Read
    _LM_Read->___fltol
    ___fltol->___fldiv

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    _App_MainLoop->_App_Update
    _LM_Read->___fltol

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   92293
                       _App_MainLoop
                           _App_init
 ---------------------------------------------------------------------------------
 (1) _App_init                                             9     9      0   29807
                                             33 BANK0      9     9      0
                       _CPU_SetSleep
                        _Cooler_Init
                       _Display_Init
                        _EEPROM_Init
                        _EEPROM_Read
                       _EEPROM_Write
                   _ExternInt_Enable
                     _ExternInt_Init
                        _Heater_Init
                      _INT_SetEnable
                           _Led_Init
         _TemperatureAVGReading_init
                         _Timer_Init
                    _pushButton_Init
 ---------------------------------------------------------------------------------
 (2) _pushButton_Init                                      3     3      0    3407
                                             15 BANK0      3     3      0
                           _DIO_init
 ---------------------------------------------------------------------------------
 (2) _Timer_Init                                           3     3      0    1413
                                             16 BANK0      3     3      0
                _INT_SetCallBackFunc
 ---------------------------------------------------------------------------------
 (2) _TemperatureAVGReading_init                           0     0      0    5486
                            _LM_init
 ---------------------------------------------------------------------------------
 (3) _LM_init                                              0     0      0    5486
                           _ADC_init
                          _DIO_Write
 ---------------------------------------------------------------------------------
 (4) _ADC_init                                             7     3      4     490
                                             10 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Led_Init                                             3     3      0    3407
                                             15 BANK0      3     3      0
                           _DIO_init
 ---------------------------------------------------------------------------------
 (2) _INT_SetEnable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Heater_Init                                          0     0      0    3376
                           _DIO_init
 ---------------------------------------------------------------------------------
 (2) _ExternInt_Init                                       3     3      0     948
                                             16 BANK0      3     3      0
                _INT_SetCallBackFunc
 ---------------------------------------------------------------------------------
 (3) _INT_SetCallBackFunc                                  6     2      4     757
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ExternInt_Enable                                     3     3      0      31
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          2     1      1     371
                                             11 BANK0      2     1      1
                   _I2C_Master_AckEN
              _I2C_Master_EnableRead
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                 _I2C_Master_WaitACK
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_WaitACK                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      1     1      0      67
                                             10 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_EnableRead                                0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_AckEN                                     1     1      0      31
                                             10 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Init                                          0     0      0    3980
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Init                                      9     5      4    3980
                                             24 BANK0      9     5      4
                           _DIO_init
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     421
                                             10 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _Display_Init                                         0     0      0    3407
                           _SSD_Init
 ---------------------------------------------------------------------------------
 (3) _SSD_Init                                             3     3      0    3407
                                             15 BANK0      3     3      0
                           _DIO_init
 ---------------------------------------------------------------------------------
 (2) _Cooler_Init                                          0     0      0    3376
                           _DIO_init
 ---------------------------------------------------------------------------------
 (3) _DIO_init                                             5     3      2    3376
                                             10 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _App_MainLoop                                         0     0      0   62486
                         _App_Update
                    _CPU_SleepUpdate
                     _Display_Update
                         _SSD_Update
       _TemperatureAVGReading_Update
                  _pushButton_Update
 ---------------------------------------------------------------------------------
 (2) _pushButton_Update                                    3     3      0    3035
                                             19 BANK0      3     3      0
                           _DIO_Read
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     801
                                             10 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _DIO_Read                                             5     3      2    1577
                                             14 BANK0      5     3      2
                             ___bmul (ARG)
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     746
                                             10 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _TemperatureAVGReading_Update                         2     2      0    6709
                                              4 BANK3      2     2      0
                            _LM_Read
                          _LM_Update
 ---------------------------------------------------------------------------------
 (3) _LM_Update                                            0     0      0     199
                     _ADC_ReadResult
                _ADC_startConversion
 ---------------------------------------------------------------------------------
 (4) _ADC_startConversion                                  1     1      0      34
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ADC_ReadResult                                       3     3      0     165
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SSD_Update                                           2     2      0    5542
                                             15 BANK0      2     2      0
                      _DIO_PortWrite
                          _DIO_Write
 ---------------------------------------------------------------------------------
 (3) _DIO_PortWrite                                        4     3      1     546
                                             10 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Display_Update                                       2     2      0    3154
                                             22 BANK0      2     2      0
                       _SSD_SetState
                       _SSD_SetValue
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     793
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1165
                                             10 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _SSD_SetValue                                         4     3      1     414
                                             18 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _SSD_SetState                                         3     2      1     782
                                             10 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _CPU_SleepUpdate                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _App_Update                                           5     5      0   44046
                                              4 BANK3      5     5      0
                       _CPU_SetSleep
                        _Cooler_Turn
                    _Display_SetData
                    _Display_TurnOff
                       _EEPROM_Write
               _Heater_Cooler_action
                        _Heater_Turn
                         _LED_ACTION
                            _LM_Read
         _TemperatureAVGReading_Read
                         _Timer_Stop
               _pushButton_GetStatus
 ---------------------------------------------------------------------------------
 (3) _pushButton_GetStatus                                 4     3      1     335
                                             10 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Timer_Stop                                           3     3      0      31
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _TemperatureAVGReading_Read                           6     6      0     658
                                             17 BANK0      6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                             10 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LM_Read                                              1     1      0    6312
                                             22 BANK1      1     1      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     566
                                             10 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             58 BANK0      2     2      0
                                             18 BANK1      4     0      4
                                              0 BANK3      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3353
                                             24 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                             10 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1863
                                             50 BANK0      8     0      8
                                              0 BANK1     18    18      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_ACTION                                           0     0      0   10631
                            _Led_Off
                             _Led_On
                         _Led_Toggle
 ---------------------------------------------------------------------------------
 (4) _Led_Toggle                                           3     3      0     577
                                             14 BANK0      3     3      0
                         _DIO_Toggle
 ---------------------------------------------------------------------------------
 (5) _DIO_Toggle                                           4     3      1     546
                                             10 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _Led_On                                               3     3      0    5027
                                             15 BANK0      3     3      0
                          _DIO_Write
 ---------------------------------------------------------------------------------
 (4) _Led_Off                                              3     3      0    5027
                                             15 BANK0      3     3      0
                          _DIO_Write
 ---------------------------------------------------------------------------------
 (3) _Heater_Cooler_action                                 3     3      0   10054
                                             16 BANK0      3     3      0
                        _Cooler_Turn
                        _Heater_Turn
 ---------------------------------------------------------------------------------
 (3) _Heater_Turn                                          1     1      0    5027
                                             15 BANK0      1     1      0
                          _DIO_Write
 ---------------------------------------------------------------------------------
 (4) _Cooler_Turn                                          1     1      0    5027
                                             15 BANK0      1     1      0
                          _DIO_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     363
                                             11 BANK0      2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      31
                                             10 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Display_TurnOff                                      0     0      0    5027
                        _SSD_TurnOff
 ---------------------------------------------------------------------------------
 (4) _SSD_TurnOff                                          3     3      0    5027
                                             15 BANK0      3     3      0
                          _DIO_Write
 ---------------------------------------------------------------------------------
 (4) _DIO_Write                                            5     3      2    4996
                                             10 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _Display_SetData                                      2     1      1     242
                                             10 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CPU_SetSleep                                         1     1      0      31
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myIsr                                               11    11      0     986
                                              5 COMMON     1     1      0
                                              0 BANK0     10    10      0
                     _EXT_INT_Callbk *
                       _Timer_Callbk *
                          i1___lbdiv
 ---------------------------------------------------------------------------------
 (7) i1___lbdiv                                            4     3      1     188
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _Timer_Callbk                                         0     0      0     299
                     _Timer_SetValue
 ---------------------------------------------------------------------------------
 (8) _Timer_SetValue                                       5     3      2     299
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _EXT_INT_Callbk                                       0     0      0     321
                        _Timer_Start
                     i1_CPU_SetSleep
 ---------------------------------------------------------------------------------
 (8) i1_CPU_SetSleep                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Timer_Start                                          5     3      2     299
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_MainLoop
     _App_Update
       _CPU_SetSleep
       _Cooler_Turn
         _DIO_Write
       _Display_SetData
       _Display_TurnOff
         _SSD_TurnOff
           _DIO_Write
       _EEPROM_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _Heater_Cooler_action
         _Cooler_Turn
           _DIO_Write
         _Heater_Turn
           _DIO_Write
       _Heater_Turn
         _DIO_Write
       _LED_ACTION
         _Led_Off
           _DIO_Write
         _Led_On
           _DIO_Write
         _Led_Toggle
           _DIO_Toggle
       _LM_Read
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _TemperatureAVGReading_Read
         ___lwdiv
       _Timer_Stop
       _pushButton_GetStatus
     _CPU_SleepUpdate
     _Display_Update
       _SSD_SetState
       _SSD_SetValue
         ___awdiv (ARG)
         ___awmod (ARG)
       ___awdiv
       ___awmod
     _SSD_Update
       _DIO_PortWrite
       _DIO_Write
     _TemperatureAVGReading_Update
       _LM_Read
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _LM_Update
         _ADC_ReadResult
         _ADC_startConversion
     _pushButton_Update
       _DIO_Read
         ___bmul (ARG)
         ___lbdiv (ARG)
       ___bmul
   _App_init
     _CPU_SetSleep
     _Cooler_Init
       _DIO_init
     _Display_Init
       _SSD_Init
         _DIO_init
     _EEPROM_Init
       _I2C_Master_Init
         _DIO_init
         ___lldiv
     _EEPROM_Read
       _I2C_Master_AckEN
         _I2C_Master_Wait
       _I2C_Master_EnableRead
         _I2C_Master_Wait
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_WaitACK
       _I2C_Master_Write
         _I2C_Master_Wait
     _EEPROM_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _ExternInt_Enable
     _ExternInt_Init
       _INT_SetCallBackFunc
     _Heater_Init
       _DIO_init
     _INT_SetEnable
     _Led_Init
       _DIO_init
     _TemperatureAVGReading_init
       _LM_init
         _ADC_init
         _DIO_Write
     _Timer_Init
       _INT_SetCallBackFunc
     _pushButton_Init
       _DIO_init

 _myIsr (ROOT)
   _EXT_INT_Callbk *
     _Timer_Start
     i1_CPU_SetSleep
   _Timer_Callbk *
     _Timer_SetValue
   i1___lbdiv *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      9      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3C      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F4      12        0.0%
ABS                  0      0      F4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jul 18 22:38:15 2020

                             SSD_SetValue@u8_SSD_ID 0035                                       ??_Cooler_Turn 002F  
                                      ___fldiv@aexp 00D6                                        ___fldiv@bexp 00D5  
                                                 pc 0002                                          _SSD_Update 0D30  
                                      ___fldiv@sign 00CE                                      ___bmul@product 002B  
                       __size_of_I2C_Master_WaitACK 0007                                                  l21 17CF  
                                                l22 17DB                                                  l31 1F08  
                                                l23 17FF                                                  l26 1BC0  
                                                l43 1B50                                                  l36 1F3E  
                                                l46 1BF5                                                  l87 1766  
                                      ___awdiv@sign 002F                             SSD_SetValue@u8_SSD_Data 0032  
                                                fsr 0004                                     _pushButton_Init 141D  
                              __end_of_App_MainLoop 1DEE                                        _SSD_SetValue 1E92  
                               __Umul8_16@word_mpld 0030                                        _SSD_SetState 1B35  
                                       _SSD_TurnOff 147F                             _au8_PrescalerValueTable 0190  
                                               l211 0803                                                 l108 1680  
                                               l140 1E5A                                                 l150 1DBF  
                                               l240 1548                                                 l400 07FE  
                                               l129 0886                                                 l218 1F79  
                                               l234 1D15                                                 l404 07F2  
                                               l173 0D2F                                                 l237 1B27  
                                               l336 10E3                                                 l344 1F03  
                                               l185 100B                                                 l169 1C43  
                                               l353 0A75                                                 l426 1179  
                                               l450 13C1                                                 l195 1B5E  
                                               l188 1B6E                                                 l604 105F  
                                               l540 0E8A                                                 l357 0C29  
                                               l533 0E3B                                    ??i1_CPU_SetSleep 0070  
                                               l198 1C07                                                 l702 1052  
                                               l614 1099                                                 l454 0E36  
                                               l375 1DC0                                                 l711 1B32  
                                               l800 1B9E                                                 l545 0EC4  
                                               l537 0E62                                                 l570 0F76  
                                               l491 14E2                                                 l475 1EC8  
                                               l803 1AE5                                                 l571 0F78  
                                               l555 0EF1                                                 l740 1AFB  
                                               l724 1AE4                                                 l572 0F7A  
                                               l396 147E                                                 l573 0F7D  
                                               l478 1B42                                                 l806 1AEB  
                                               l574 0F7F                                                 l558 0F08  
                                               l735 1E91                                                 l744 1B0D  
                                               l728 1E23                                                 l816 126B  
                                               l584 0FFF                                                 l841 1C78  
                                               l770 1B1A                                                 l818 126F  
                                               l843 1C8A                                                 l827 12B9  
                                               l675 11C4                                                 l579 0FB9  
                                               l684 1310                                                 l764 1367  
                                               l693 112E                                                 l774 1B7E  
                                               l782 1B8E                                                 l870 1BD1  
                                               l767 1B0E                                                 l839 1C76  
                                               l792 1BE3                                                 l873 1CEE  
                                               l786 1CC6                                                 l787 1CC9  
                                               l788 1CCA                                                 l796 1C71  
                                               l876 1266                                                 l988 1C5A  
                                               l998 1617                                    ??_ExternInt_Init 0030  
                                               fsr0 0004                                                 indf 0000  
                                      ___awmod@sign 002F                                        ___flmul@aexp 0046  
                                      ___flmul@bexp 004B                                         _STA_buttons 01B8  
                                      ___flmul@sign 0045                                        ___flmul@temp 0050  
                                      ___flmul@prod 004C                              _au8_TemperatureSamples 01D0  
                                      ___fltol@exp1 005B                                                l1115 16E9  
                                              l1311 0452                                                l1128 141C  
                                              l1313 0668                                                l1234 1FFF  
                                              l1155 09AD                                                l1148 09C4  
                                              l1158 09C4                                                l1335 0654  
                                              l1327 05A2                                                l1351 03D3  
                                              l1408 0AFB                                                l1168 1D92  
                                              l1409 0B07                                                l1370 1D55  
                                              l1363 03C7                                                l1372 1D67  
                                              l1357 033F                                                l1395 0A9A  
                                              l1397 0B31                                                l5080 1EA4  
                                              l5082 1EAB                                                l5074 1E95  
                                              l5076 1E96                                                l7110 1E2D  
                                              l5078 1E9D                                                l5086 1EB2  
                                              l7112 1E32                                                l7120 1E41  
                                              l8000 1E8B                                                l7200 1F12  
                                              l7130 1B14                                                l7114 1E37  
                                              l7106 1E27                                                l8010 1062  
                                              l8002 1056                                                l7202 1F20  
                                              l7116 1E3C                                                l7108 1E28  
                                              l7140 1D5E                                                l7132 1D42  
                                              l8004 1057                                                l8100 168F  
                                              l7220 16FA                                                l7070 1626  
                                              l7310 12CD                                                l7142 1D63  
                                              l7134 1D44                                                l8022 107C  
                                              l8014 106A                                                l8110 16A4  
                                              l8102 1693                                                l7206 1F2E  
                                              l7230 1719                                                l7222 1701  
                                              l7214 16ED                                                l7150 178D  
                                              l7080 163F                                                l7072 162B  
                                              l7064 161B                                                l7128 1B0E  
                                              l7312 12DC                                                l7136 1D4B  
                                              l7400 0965                                                l8024 1082  
                                              l8016 1070                                                l8008 1060  
                                              l8120 16C7                                                l8112 16A7  
                                              l8104 1698                                                l7240 173A  
                                              l7232 1720                                                l7224 1706  
                                              l7216 16EE                                                l8040 1325  
                                              l7160 17B1                                                l7152 1793  
                                              l7090 1658                                                l7082 1644  
                                              l7074 1630                                                l7066 161C  
                                              l7330 10F4                                                l7314 12EB  
                                              l7306 12BD                                                l7138 1D4F  
                                              l7402 096D                                                l8018 1074  
                                              l8130 16E0                                                l8122 16CD  
                                              l8114 16AE                                                l8106 169C  
                                              l8202 0C9E                                                l7242 173F  
                                              l7234 1727                                                l7226 170D  
                                              l7218 16F3                                                l8050 135F  
                                              l8042 1326                                                l7170 17CD  
                                              l7162 17B9                                                l7154 1797  
                                              l7146 176A                                                l7092 165D  
                                              l7084 1649                                                l7076 1635  
                                              l7068 1621                                                l7260 148E  
                                              l7332 1100                                                l7308 12BE  
                                              l7500 0414                                                l7412 097D  
                                              l7404 0971                                                l8028 1086  
                                              l8132 16E5                                                l8124 16CE  
                                              l8116 16B2                                                l8108 169E  
                                              l8140 13C9                                                l8204 0CA7  
                                              l7244 1746                                                l7236 172C  
                                              l7228 1714                                                l8052 1362  
                                              l8044 1329                                                l8036 1314  
                                              l8060 1CBF                                                l8220 1B51  
                                              l8300 11A2                                                l7164 17BD  
                                              l7156 179B                                                l7148 176B  
                                              l7094 1662                                                l7086 164E  
                                              l7078 163A                                                l7270 14B7  
                                              l7262 1499                                                l7350 1B7B  
                                              l7334 110C                                                l7326 10E7  
                                              l7318 12FA                                                l7510 0435  
                                              l7502 041B                                                l7422 099A  
                                              l7414 0988                                                l7406 0975  
                                              l8126 16D5                                                l8118 16B6  
                                              l8150 13DF                                                l8142 13CE  
                                              l8206 0CBA                                                l8214 0D1C  
                                              l7190 1BB7                                                l7430 1D6C  
                                              l7238 1733                                                l8046 132A  
                                              l8038 1322                                                l8054 1CAE  
                                              l8070 1B96                                                l8062 1C5E  
                                              l8222 0801                                                l7174 17D0  
                                              l7166 17C1                                                l7158 17A2  
                                              l7182 17E1                                                l8230 1432  
                                              l7088 1653                                                l7272 14BB  
                                              l7264 149D                                                l7352 1B7F  
                                              l7360 1BDA                                                l7256 1BE7  
                                              l7328 10E8                                                l7600 0601  
                                              l7520 045A                                                l7512 043A  
                                              l7504 0425                                                l7424 09B2  
                                              l7416 0993                                                l8128 16DB  
                                              l8160 13FB                                                l8152 13E2  
                                              l8144 13D0                                                l8136 13C2  
                                              l8208 0D0B                                                l7192 1BBB  
                                              l7440 1D7E                                                l7432 1D71  
                                              l8080 1C4C                                                l7248 174D  
                                              l8048 1357                                                l8056 1CB3  
                                              l8072 1B9B                                                l8064 1C63  
                                              l8304 11AE                                                l7176 17DC  
                                              l7168 17C9                                                l8320 0E52  
                                              l8312 0E3A                                                l8240 1464  
                                              l8232 1440                                                l8224 1420  
                                              l7098 1667                                                l7274 14C6  
                                              l7266 14A8                                                l7258 1482  
                                              l7346 1B6F                                                l7354 1B86  
                                              l7362 1BDF                                                l7338 1118  
                                              l7290 101B                                                l7610 063D  
                                              l7602 0610                                                l7530 047E  
                                              l7522 0466                                                l7514 0444  
                                              l7506 042B                                                l7426 09B7  
                                              l8170 1418                                                l8162 1401  
                                              l8154 13E9                                                l8146 13D4  
                                              l8138 13C5                                                l7194 1BBF  
                                              l7442 1D86                                                l7434 1D74  
                                              l7450 1D91                                                l8082 1C50  
                                              l7370 15CE                                                l8058 1CB8  
                                              l8066 1C68                                                l8074 1AE5  
                                              l8250 126A                                                l8330 0E7A  
                                              l8322 0E65                                                l8314 0E3E  
                                              l8402 0FE9                                                l8234 1444  
                                              l8226 1422                                                l7268 14AC  
                                              l7348 1B76                                                l7356 1B8B  
                                              l7284 1BF9                                                l7292 1026  
                                              l7612 0640                                                l7604 0620  
                                              l7540 04BD                                                l7524 046E  
                                              l7516 0446                                                l7508 042E  
                                              l7700 0270                                                l7460 1FC7  
                                              l8500 0B50                                                l8092 1681  
                                              l8164 1408                                                l8156 13ED  
                                              l8148 13D9                                                l7196 1F07  
                                              l7188 1BB3                                                l7444 1D88  
                                              l7436 1D76                                                l7428 1D6B  
                                              l8084 1C52                                                l8076 1C47  
                                              l8180 1C3E                                                l7380 15FF  
                                              l7372 15D2                                                l7364 15B0  
                                              l8068 1B8F                                                l8332 0E8E  
                                              l8324 0E69                                                l8316 0E48  
                                              l8236 1452                                                l8228 142E  
                                              l8244 1468                                                l7278 14CA  
                                              l7358 1BD5                                                l7294 1031  
                                              l7286 100F                                                l7614 0646  
                                              l7606 062F                                                l7550 04E8  
                                              l7542 04C7                                                l7534 0489  
                                              l7518 0448                                                l7710 0302  
                                              l7702 029D                                                l7630 0084  
                                              l7390 0921                                                l7470 1FED  
                                              l7462 1FCE                                                l7454 1FBA  
                                              l8510 0B80                                                l8502 0B5C  
                                              l8094 1684                                                l8158 13F1  
                                              l8166 140E                                                l7198 1F0C  
                                              l7446 1D89                                                l7438 1D7A  
                                              l8086 1C54                                                l8078 1C48  
                                              l8174 1B43                                                l8182 1C41  
                                              l7382 1600                                                l7374 15D6  
                                              l7366 15C2                                                l8254 1273  
                                              l8350 0EE0                                                l8342 0EAF  
                                              l8318 0E4C                                                l8238 1456  
                                              l7288 1010                                                l7616 064A  
                                              l7608 0633                                                l7560 0541  
                                              l7552 04EB                                                l7544 04C9  
                                              l7536 049B                                                l7528 0477  
                                              l7480 03D4                                                l7712 030B  
                                              l7720 031F                                                l7704 02C3  
                                              l7640 0099                                                l7632 0085  
                                              l7624 0073                                                l7392 0930  
                                              l7800 0AFF                                                l7472 1FEE  
                                              l7464 1FD2                                                l7456 1FBE  
                                              l8520 0BA1                                                l8512 0B81  
                                              l8504 0B62                                                l8096 1688  
                                              l8168 1413                                                l8192 0C37  
                                              l8600 0E20                                                l7448 1D8B  
                                              l8088 1C59                                                l8184 1C42  
                                              l8176 1C2E                                                l7384 1609  
                                              l7376 15DF                                                l7368 15C5  
                                              l8256 1287                                                l8264 12A6  
                                              l8360 0F29                                                l8344 0EC6  
                                              l8336 0E99                                                l8328 0E74  
                                              l7298 103C                                                l7618 064E  
                                              l7570 0564                                                l7546 04CE  
                                              l7554 04F6                                                l7562 0545  
                                              l7538 04B3                                                l7490 03F7  
                                              l7482 03DD                                                l7722 0323  
                                              l7714 030F                                                l7706 02EB  
                                              l7650 00B1                                                l7642 00A1  
                                              l7634 008A                                                l7626 007A  
                                              l7810 0B29                                                l7802 0B09  
                                              l7474 1FF5                                                l7466 1FD6  
                                              l7458 1FC4                                                l8530 0BC1  
                                              l8522 0BA9                                                l8514 0B87  
                                              l8506 0B69                                                l8098 168D  
                                              l8194 0C39                                                l8186 0C2A  
                                              l8602 0E2B                                                l8178 1C3A  
                                              l7378 15F1                                                l7386 160F  
                                              l8282 1C7A                                                l8258 1290  
                                              l8290 1ADF                                                l8354 0EF3  
                                              l8338 0E9F                                                l7580 0582  
                                              l7572 0568                                                l7564 054B  
                                              l7556 0518                                                l7548 04E4  
                                              l7492 03FC                                                l7484 03E7  
                                              l7740 0374                                                l7732 0344  
                                              l7724 0324                                                l7716 0310  
                                              l7708 02F4                                                l7660 00CD  
                                              l7652 00B6                                                l7644 00A6  
                                              l7636 008F                                                l7628 0080  
                                              l7396 093B                                                l7804 0B1F  
                                              l7468 1FE7                                                l7476 1FFB  
                                              l8540 0BDC                                                l8532 0BC9  
                                              l8524 0BAF                                                l8516 0B8E  
                                              l8508 0B7A                                                l7900 1B38  
                                              l8196 0C87                                                l8188 0C30  
                                              l8604 0E30                                                l7820 0822  
                                              l8612 0669                                                l8292 117D  
                                              l8380 0F87                                                l8372 0F65  
                                              l8356 0F0B                                                l8364 0F30  
                                              l8348 0ECB                                                l8700 09F9  
                                              l7902 1003                                                l7590 05A9  
                                              l7582 0585                                                l7574 056B  
                                              l7566 0553                                                l7558 0519  
                                              l7494 0406                                                l7486 03ED  
                                              l7750 03AB                                                l7734 0349  
                                              l7742 037A                                                l7726 0328  
                                              l7718 0319                                                l7670 00F0  
                                              l7662 00D2                                                l7654 00BB  
                                              l7646 00AC                                                l7638 0097  
                                              l7398 0962                                                l7806 0B24  
                                              l8550 0BFC                                                l8542 0BE2  
                                              l8534 0BCF                                                l8526 0BB4  
                                              l8518 0B9C                                                l8198 0C8C  
                                              l8606 0E32                                                l7822 0829  
                                              l7814 0807                                                l8630 070D  
                                              l8614 066F                                                l8470 1217  
                                              l8278 1C75                                                l7910 1F42  
                                              l8294 117E                                                l8390 0F91  
                                              l8374 0F74                                                l8358 0F15  
                                              l8366 0F43                                                l8710 0A13  
                                              l8702 09FE                                                l7904 1007  
                                              l7592 05B0                                                l7584 0589  
                                              l7576 0576                                                l7568 0555  
                                              l7496 0408                                                l7488 03F0  
                                              l7760 03C0                                                l7752 03AD  
                                              l7744 0387                                                l7736 0357  
                                              l7728 033C                                                l7680 017E  
                                              l7672 00FD                                                l7664 00D7  
                                              l7656 00C3                                                l7648 00B0  
                                              l7808 0B28                                                l8552 0C00  
                                              l8536 0BD1                                                l8528 0BB9  
                                              l8560 0C24                                                l7840 085C  
                                              l7816 0808                                                l8640 076D  
                                              l8632 071F                                                l8624 0678  
                                              l8480 1243                                                l8472 1222  
                                              l7912 1F54                                                l8296 118A  
                                              l7920 1D11                                                l8392 0FBD  
                                              l8384 0F8C                                                l8376 0F82  
                                              l8368 0F56                                                l8720 0A41  
                                              l8712 0A26                                                l8704 0A03  
                                              l7906 1B5F                                                l7930 109A  
                                              l7594 05C0                                                l7586 059D  
                                              l7578 057C                                                l7498 040A  
                                              l7762 03CB                                                l7754 03B3  
                                              l7746 0392                                                l7738 035B  
                                              l7690 01E0                                                l7682 019A  
                                              l7674 011A                                                l7658 00C5  
                                              l7770 0A82                                                l8554 0C02  
                                              l8546 0BE7                                                l8538 0BD6  
                                              l8490 0B32                                                l8570 0D34  
                                              l7922 1B1B                                                l7834 084B  
                                              l7818 0818                                                l8642 077F  
                                              l8634 0733                                                l8626 068A  
                                              l8618 0676                                                l8730 1DC0  
                                              l8482 1249                                                l8474 1227  
                                              l7914 1F64                                                l8298 1196  
                                              l8722 0A49                                                l8714 0A2C  
                                              l8706 0A08                                                l7908 1B6B  
                                              l7940 10E1                                                l7932 10AE  
                                              l7596 05C4                                                l7756 03BB  
                                              l7748 03A1                                                l7692 01FD  
                                              l7684 01A3                                                l7676 0136  
                                              l7668 00E0                                                l7780 0AB0  
                                              l7772 0A92                                                l8548 0BF1  
                                              l8492 0B38                                                l7860 1D9A  
                                              l8580 0D56                                                l7924 1B21  
                                              l7828 083A                                                l8644 0793  
                                              l8636 0745                                                l8652 07CD  
                                              l8732 1DC8                                                l8468 1BC1  
                                              l8484 1253                                                l8476 1234  
                                              l7916 1F69                                                l8396 0FC4  
                                              l8724 0A60                                                l8716 0A30  
                                              l8708 0A0D                                                l7934 10BA  
                                              l7950 1EE6                                                l7942 1EC9  
                                              l7598 05F9                                                l7758 03BF  
                                              l7694 0216                                                l7686 01B3  
                                              l7678 0162                                                l7790 0AD6  
                                              l7782 0AB4                                                l7774 0AA2  
                                              l7766 0A79                                                l7926 14E6  
                                              l8558 0C0F                                                l7862 1D9D  
                                              l7870 1DA6                                                l8590 0DA1  
                                              l8582 0D63                                                l8574 0D3B  
                                              l8670 1DFC                                                l8662 1DEE  
                                              l8646 07A7                                                l8638 0759  
                                              l8654 07F2                                                l8734 1DE1  
                                              l8486 125B                                                l8478 1239  
                                              l7918 1CEF                                                l8398 0FD7  
                                              l8726 0A6A                                                l8718 0A35  
                                              l7928 1AF7                                                l7936 10BF  
                                              l7960 1EFC                                                l7952 1EEB  
                                              l7944 1ED1                                                l7696 0233  
                                              l7688 01D0                                                l7792 0ADF  
                                              l7784 0ABD                                                l7768 0A7E  
                                              l8496 0B3F                                                l7864 1DA0  
                                              l7856 1D96                                                l8592 0DC4  
                                              l8584 0D70                                                l8576 0D3C  
                                              l8568 0D30                                                l8680 1E15  
                                              l8672 1E01                                                l8664 1DF4  
                                              l7848 086D                                                l8656 07F8  
                                              l8648 07B9                                                l8736 1DE7  
                                              l7880 136E                                                l8488 1261  
                                              l9800 0F6F                                                l8728 0A6F  
                                              l8760 1B28                                                l7938 10D5  
                                              l7954 1EF0                                                l7946 1ED7  
                                              l7698 0260                                                l7794 0AE6  
                                              l7786 0AC4                                                l7778 0AAB  
                                              l7970 113F                                                l8498 0B44  
                                              l7866 1DA3                                                l7858 1D97  
                                              l8594 0DE7                                                l8578 0D49  
                                              l8682 1E19                                                l7882 137A  
                                              l7890 139E                                                l9810 11B6  
                                              l9802 0F9C                                                l8690 09C5  
                                              l7964 1CCE                                                l7948 1EE0  
                                              l7796 0AF1                                                l7788 0AC8  
                                              l7972 114B                                                l8588 0D7E  
                                              l8684 1E1F                                                l8668 1DFB  
                                              l9820 1755                                                l7884 1386  
                                              l7892 13B4                                                l9812 127F  
                                              l9804 0FCF                                                l8692 09CF  
                                              l7958 1EF7                                                l7798 0AF5  
                                              l7974 1157                                                l7966 1132  
                                              l8686 1B04                                                l9830 1DAE  
                                              l8598 0E0A                                                l8678 1E0A  
                                              l9822 07E4                                                l7886 1392  
                                              l7878 136B                                                l9814 12B1  
                                              l9806 0FF4                                                l8694 09D5  
                                              l7992 1E61                                                l9840 108E  
                                              l7968 1133                                                l8688 1B0C  
                                              l9832 0D24                                                l9824 0875  
                                              l9816 1C82                                                l9808 17EB  
                                              l8696 09DB                                                l9850 14D4  
                                              l9842 1044                                                l7994 1E6E  
                                              l7986 1E5E                                                l7978 1163  
                                              l9834 1EBA                                                l9826 1F36  
                                              l9818 13A6                                                l8698 09ED  
                                              l9852 166F                                                l9844 1E49  
                                              l7996 1E72                                                l9836 0C19  
                                              l9828 0E12                                                l9846 1302  
                                              l7998 1E78                                                l9838 116B  
                                              l9790 1470                                                l9848 1120  
                                              l9792 0EB9                                                l9794 0ED8  
                                              l9796 0EFD                                                l9798 0F3B  
                               __end_of_Heater_Init 1B5F                         ADC_init@u8_ADC_adjustResult 002A  
                                              u5000 03F7                                                u5001 03F6  
                                              u5010 03FC                                                u5011 03FB  
                                              u5100 04E8                                                u5020 042B  
                                              u5101 04E7                                                u5021 042A  
                                              u5030 0435                                                u5031 0434  
                                              _PIE1 008C                                                u5200 0589  
                                              u5120 0518                                                u5040 043A  
                                              u6000 135F                                                u5201 0588  
                                              u5121 0517                                                u5041 0439  
                                              u6001 135E                                                u5210 059D  
                                              u5130 053D                                                u5050 045A  
                                              u6010 1CB3                                                u5211 059C  
                                              u5115 04EF                                                u5051 0459  
                                              u6011 1CB2                                                u5220 05A8  
                                              u5140 054B                                                u5060 047E  
                                              u5300 008A                                                u6100 16A4  
                                              u6020 1CBF                                                u5221 05A7  
                                              u5141 054A                                                u5125 0514  
                                              u5061 047D                                                u5301 0089  
                                              u6101 16A3                                                u6021 1CBE  
                                              u5230 05B0                                                u5150 0553  
                                              u5070 04CE                                                u5310 008F  
                                              u6030 1C63                                                u5231 05AF  
                                              u5151 0552                                                u5135 0526  
                                              u5071 04CD                                                u5311 008E  
                                              u6031 1C62                                                u4520 1621  
                                              u5240 05C4                                                u5136 0529  
                                              u5320 00B0                                                u6120 16B6  
                                              u6200 13DF                                                u6040 1B96  
                                              u4521 1620                                                u5241 05C3  
                                              u5137 0530                                                u5401 018C  
                                              u5321 00AF                                                u6121 16B5  
                                              u6201 13DE                                                u6041 1B95  
                            ?_I2C_Master_EnableRead 0070                                                u4530 1630  
                                              u5250 05E1                                                u5170 0568  
                                              u5138 0533                                                u4610 1D63  
                                              u5402 0193                                                u5330 00B6  
                                              u6050 1AEB                                                u4531 162F  
                                              u5171 0567                                                u5139 053A  
                                              u4611 1D62                                                u5403 019A  
                                              u5331 00B5                                                u6115 16A8  
                                              u6051 1AEA                                                u4540 163F  
                                              u4700 1BDA                                                u5260 0610  
                                              u5500 02D1                                                u5340 00BB  
                                              u6140 16C7                                                u6220 13F1  
                                              u4620 1F0C                                                u6060 1C4C  
                                              u6300 1290                                                u4541 163E  
                                              u4701 1BD9                                                u5261 060F  
                                              u5165 0559                                                u5085 04D0  
                                              u4605 1D56                                                u5421 01C2  
                                              u5341 00BA                                                u6141 16C6  
                                              u6221 13F0                                                u4621 1F0B  
                                              u6061 1C4B                                                u6301 128F  
                                              u4550 164E                                                u5270 062F  
                                              u5190 0582                                                u5422 01C9  
                                              u5350 00D2                                                u6230 13FB  
                                              u6070 1C59                                                u4630 16F3  
                                              u4710 15C2                                                u6310 0E48  
                                              u4551 164D                                                u5271 062E  
                                              u5255 05DC                                                u5191 0581  
                                              u5095 04D9                                                u5511 02DD  
                                              u5431 01EF                                                u5423 01D0  
                                              u5415 019C                                                u5351 00D1  
                                              u6135 16B7                                                u6231 13FA  
                                              u6215 13E3                                                u6071 1C58  
                                              u4631 16F2                                                u4711 15C1  
                                              u6311 0E47                                                u4560 165D  
                                              u5280 064A                                                u5600 0349  
                                              u5512 02E4                                                u5432 01F6  
                                              u5360 00D7                                                u4800 0975  
                                              u6400 0BDC                                                u6160 16DB  
                                              u6080 1688                                                u4640 1706  
                                              u6320 0E73                                                u4561 165C  
                                              u5281 0649                                                u5265 060C  
                                              u5185 056F                                                u5601 0348  
                                              u5513 02EB                                                u5505 02CC  
                                              u5433 01FD                                                u5361 00D6  
                                              u4801 0974                                                u6401 0BDB  
                                              u6161 16DA                                                u6145 16C3  
                                              u6081 1687                                                u4641 1705  
                                              u6321 0E72                                                u4570 1B14  
                                              u5610 035B                                                u5290 0084  
                                              u4810 097C                                                u6410 0BE2  
                                              u6170 16E0                                                u6090 1693  
                                              u6250 140E                                                u4650 1719  
                                              u4730 15D6                                                u6330 0E98  
                                              u4571 1B13                                                u5275 062B  
                                              u5611 035A                                                u5451 0225  
                                              u5371 0128                                                u5291 0083  
                                              u4811 097B                                                u6411 0BE1  
                                              u6171 16DF                                                u6155 16CF  
                                              u6091 1692                                                u6251 140D  
                                              u6235 13F7                                                u4651 1718  
                                              u4731 15D5                                                u6331 0E97  
                                              u4580 1B1A                                                u5620 036A  
                                              u5540 030F                                                u5452 022C  
                                              u5372 012F                                                u5700 0AC3  
                                              u6420 0BFC                                                u6260 1413  
                                              u6180 13C9                                                u4900 1D86  
                                              u6500 0745                                                u4660 172C  
                                              u6340 0F15                                                u4581 1B19  
                                              u5541 030E                                                u5525 02ED  
                                              u5461 0252                                                u5453 0233  
                                              u5445 01FF                                                u5381 0144  
                                              u5373 0136                                                u5701 0AC2  
                                              u6421 0BFB                                                u6261 1412  
                                              u6245 1402                                                u6181 13C8  
                                              u4901 1D85                                                u6501 0744  
                                              u4661 172B                                                u4725 15C7  
                                              u6341 0F14                                                u4590 1D4F  
                                              u5630 0387                                                u5462 0259  
                                              u5382 014B                                                u4830 0992  
                                              u6350 0B3E                                                u6190 13D4  
                                              u6270 0C36                                                u6430 0D3A  
                                              u4910 1D91                                                u6510 077F  
                                              u4670 173F                                                u4750 15F1  
                                              u4591 1D4E                                                u5631 0386  
                                              u5535 0304                                                u5471 027F  
                                              u5463 0260                                                u5391 0170  
                                              u5383 0152                                                u4831 0991  
                                              u6351 0B3D                                                u6191 13D3  
                                              u6271 0C35                                                u6431 0D39  
                                              u4911 1D90                                                u6511 077E  
                                              u4671 173E                                                u4751 15F0  
                                              u4680 1B76                                                u5640 03A1  
                                              u5560 0323                                                u5480 02A9  
                                              u5472 0286                                                u5392 0177  
                                              u4840 0999                                                u5720 0AE5  
                                              u4920 1FC4                                                u6360 0BA9  
                                              u6280 0C9D                                                u6440 0D7D  
                                              u5800 0818                                                u6520 07B9  
                                              u4681 1B75                                                u5641 03A0  
                                              u5625 0365                                                u5561 0322  
                                              u5473 028D                                                u5393 017E  
                                              u4841 0998                                                u4825 097E  
                                              u5721 0AE4                                                u4921 1FC3  
                                              u6361 0BA8                                                u6281 0C9C  
                                              u6441 0D7C                                                u5801 0817  
                                              u6521 07B8                                                u4745 15D8  
                                              _PIR1 000C                                                u4690 1B86  
                                              u5650 03BF                                                u5570 0328  
                                              u6370 0BAF                                                u6290 0CA7  
                                              u6450 0E30                                                u5810 0839  
                                              u6530 07FE                                                u4770 160F  
                                              u4691 1B85                                                u5651 03BE  
                                              u5635 0383                                                u5571 0327  
                                              u5555 0312                                                u5491 02B5  
                                              u5715 0AD7                                                u6371 0BAE  
                                              u6291 0CA6                                                u6451 0E2F  
                                              u5811 0838                                                u6531 07FD  
                                              u4771 160E                                                u4755 15ED  
                                              u5900 10D5                                                u5580 033C  
                                              u5492 02BC                                                u4860 09B2  
                                              u4780 0930                                                u5740 0AF5  
                                              u5660 0A7E                                                u4940 1FD6  
                                              u6380 0BC9                                                u6540 1DFA  
                                              u5820 084A                                                u6460 0675  
                                              u5901 10D4                                                u5645 039D  
                                              u5581 033B                                                u5493 02C3  
                                              u5485 02A4                                                u4861 09B1  
                                              u4781 092F                                                u5741 0AF4  
                                              u5661 0A7D                                                u4941 1FD5  
                                              u6381 0BC8                                                u6541 1DF9  
                                              u5821 0849                                                u6461 0674  
                                              u4765 1601                                                u5910 1ED7  
                                              u5590 0343                                                u4870 09B7  
                                              u4790 0959                                                u5750 0AFB  
                                              u5670 0A82                                                u6390 0BCF  
                                              u6550 1E1F                                                u5830 085B  
                                              u6470 068A                                                u5911 1ED6  
                                              u5591 0342                                                u4871 09B6  
                                              u4855 099E                                                u5751 0AFA  
                                              u5735 0AEA                                                u5671 0A81  
                                              u4935 1FC8                                                u6391 0BCE  
                                              u6551 1E1E                                                u5831 085A  
                                              u6471 0689                                                u5920 1EE0  
                                              u5760 0AFF                                                u5680 0AA2  
                                              u4960 1FE7                                                u6560 1B0C  
                                              u4880 1D71                                                u5840 086C  
                                              u6480 070C                                                u5905 10D1  
                                              u5921 1EDF                                                u5761 0AFE  
                                              u5681 0AA1                                                u4961 1FE6  
                                              u6561 1B0B                                                u4881 1D70  
                                              u5841 086B                                                u6481 070B  
                                              u5930 1EF0                                                u5770 0B14  
                                              u4890 1D7E                                                u6490 071F  
                                              u6570 0A49                                                u5931 1EEF  
                                              u4795 0954                                                u4955 1FD7  
                                              u4891 1D7D                                                u6491 071E  
                                              u6571 0A48                                                u5940 1EFC  
                                              u5780 0B24                                                u4980 1FFB  
                                              u6580 1DC8                                                u5941 1EFB  
                                              u5781 0B23                                                u4981 1FFA  
                                              u4965 1FE3                                                u6581 1DC7  
                                              u4990 03ED                                                u5790 0B28  
                                              u5950 1E78                                                u5870 1F69  
                                              u4991 03EC                                                u5791 0B27  
                                              u5775 0B0F                                                u5695 0AB5  
                                              u4975 1FEF                                                u5951 1E77  
                                              u5871 1F68                                                u5855 1F45  
                                              u5960 105E                                                u5961 105D  
                                              u5865 1F59                                                u5890 10AE  
                                              u5970 1069                                                u5891 10AD  
                                              u5971 1068                                                u5980 107B  
                                              u5981 107A                                                u5885 1F6E  
                                              u5990 1338                                                u5895 10AA  
                                              u5995 1333                                                _TMR0 0001  
                               __end_of_Heater_Turn 1C08                                                _TMR2 0011  
                                __size_of_DIO_Write 0069                                     __end_of_LM_Read 1549  
                                              _main 1B28                                                btemp 007E  
                                   __end_of_LM_init 1D16                      ??_TemperatureAVGReading_Update 005C  
                                              start 0012                                    __end_of_ADC_init 1800  
                                   ___fldiv@new_exp 00CF                                   _pushButton_Update 0669  
                                   __end_of_Led_Off 112F                                   ___bmul@multiplier 002C  
                      ??_TemperatureAVGReading_Read 0031                                          _App_Update 0B32  
                                ?_pushButton_Update 0070                        ??_TemperatureAVGReading_init 0031  
                                  __end_of_DIO_Read 0887                                __end_of_EEPROM_Write 1CEF  
                                  __end_of_DIO_init 1767                                     ??_DIO_PortWrite 002B  
        TemperatureAVGReading_Update@u8_LoopCounter 01DF                                    ?_I2C_Master_Init 0038  
                                  ?_I2C_Master_Read 0070                                    ?_I2C_Master_Wait 0070  
                      pushButton_GetStatus@u8_BtnId 002D                                    ?_I2C_Master_Stop 0070  
                                   myIsr@u8_counter 0075                              LM_Read@pu8_temperature 00DB  
                                     ___fltol@sign1 005A                                               ?_main 0070  
                               __end_of_Cooler_Init 1B51                                     __end_of___fldiv 0669  
                                   __end_of___awdiv 16EA                                     __end_of___lbdiv 1D93  
                               ??_pushButton_Update 0033                                     __end_of___awmod 141D  
                                   __end_of___flmul 03D4                                     __end_of___fltol 09C5  
                                   __end_of___lldiv 1618                                 __end_of_Cooler_Turn 1BF6  
                                   ___awdiv@divisor 002A                                               _T1CON 0010  
                                             _T2CON 0012                                     __end_of___lwdiv 2000  
                                             i1l208 0914                                               i1l330 1CAA  
                                             i1l325 1BAF                                               i1l651 1213  
                                             i1l740 1AF3                                               i1l645 11DF  
                                             i1l593 156D                                               i1l589 1555  
                                             i1l599 15AF                                   ?_ExternInt_Enable 0070  
                                   ___awdiv@counter 002E                                          _Led_Toggle 100C  
                                             _TMR1H 000F                                               _TMR1L 000E  
                                             _PORTA 0005                                               _PORTB 0006  
                                             _PORTC 0007                                               _PORTD 0008  
                                             _PORTE 0009                                               _TRISA 0085  
                                             _TRISB 0086                                               _TRISC 0087  
                                             _TRISD 0088                                               _TRISE 0089  
                                ??_ExternInt_Enable 002A                                 __size_of_LED_ACTION 003B  
                               __size_of_DIO_Toggle 0037                                       ?_CPU_SetSleep 0070  
                                             _myIsr 0887                                  __size_of_LM_Update 000D  
                                             fpbase 0000                                    __end_of_SSD_Init 13C2  
                                             pclath 000A                                               status 0003  
                                             wtemp0 007E                           __end_of_pushButton_Update 07FF  
                                __size_ofi1___lbdiv 0029                                     ___lbdiv@divisor 002A  
                                   ___lbdiv@counter 002C                                __size_of_EEPROM_Init 0011  
                              __size_of_EEPROM_Read 0053                                    __end_of_App_init 0A76  
                           __end_of_pushButton_Init 147F                                    __end_of_Led_Init 11C5  
                          CPU_SetSleep@u8_SleepMode 002A                                     __initialization 0015  
                                      __end_of_main 1B35                              I2C_Master_Init@u8_Mode 0040  
                                       ?_SSD_Update 0070                     ExternInt_Init@pstr_ExternIntCfg 0032  
                                            ??_main 005C                                   __end_of_DIO_Write 1681  
                                 ?_I2C_Master_AckEN 0070                                         _Heater_Init 1B51  
                                ??_I2C_Master_AckEN 002A                                   ?_I2C_Master_Start 0070  
                                 ?_I2C_Master_Write 0070                                         _Heater_Turn 1BF6  
                                    ??_CPU_SetSleep 002A                                   _au8_Timer_Started 00B6  
                              __end_of_Display_Init 1C44                                 _ADC_startConversion 1BB0  
                                ??_I2C_Master_Start 002A                                           ??_LM_Read 005C  
                                            _ADCON0 001F                                              _ADCON1 009F  
                                ??_I2C_Master_Write 002A                                              _ADRESH 001E  
                                            ?_myIsr 0070                                              _ADRESL 009E  
                                  ___awdiv@dividend 002C                                           ??_LM_init 0031  
                               Led_Toggle@u8_led_ID 0030                                 ADC_init@u8_ADC_Mode 002B  
                                 Led_Init@u8_LED_ID 0031                                    ??_EXT_INT_Callbk 0075  
                           __size_of_Timer_SetValue 004F                                              i1l1168 1D3E  
                               Heater_Turn@u8_State 002F                                              i1l6010 1D17  
                                            i1l6020 1D26                                              i1l6012 1D18  
                                            i1l6030 1D37                                              i1l6022 1D2A  
                                            i1l6014 1D1D                                              i1l6024 1D32  
                                            i1l6016 1D20                                              i1l6032 1D3D  
                                            i1l6026 1D34                                              i1l6018 1D22  
                                            i1l6050 090E                                              i1l6042 0888  
                                            i1l5420 11D1                                              i1l6028 1D35  
                                            i1l6044 08CB                                              i1l6036 0887  
                                            i1l5414 11C6                                              i1l6046 08E0  
                                            i1l5432 11F2                                              i1l5424 11E1  
                                            i1l5416 11C7                                              i1l6048 090A  
                                            i1l5450 1566                                              i1l5442 154A  
                                            i1l5426 11E5                                              i1l5460 1579  
                                            i1l5444 154B                                              i1l5428 11E8  
                                            i1l5436 1200                                              i1l5470 1598  
                                            i1l5462 157D                                              i1l5454 156F  
                                            i1l5456 1573                                              i1l5448 1559  
                                            i1l5466 1590                                              i1l5458 1575  
                                            i1l5474 159C                                              i1l5468 1594  
                                            i1l5950 1BA9                                              i1l5960 1CA6  
                                            i1l5952 1C8B                                              i1l5946 1AED  
                                            i1l5954 1C91                                              i1l5948 1B9F  
                                            i1l5956 1C95                                              i1l5958 1C9F  
                                            _INTCON 000B                                              i1l9854 1208  
                                            i1l9856 15A4                                              u404_20 11D0  
                                            u404_21 11CF                                              u405_20 11F1  
                                            u405_21 11F0                                              u406_20 1554  
                                            u406_21 1553                                              u407_20 158F  
                                            u407_21 158E                                              u440_20 1D32  
                                            u440_21 1D31                                              u441_20 1D3D  
                                            u441_21 1D3C                          i1CPU_SetSleep@u8_SleepMode 0070  
                                            u442_25 088D                                              u435_20 1C91  
                                            u435_21 1C90                                              u443_25 089E  
                                            u444_25 08AC                                              u445_20 08CB  
                                            u445_21 08CA                                              u438_20 1D1D  
                                            u438_21 1D1C                                              u446_25 08D0  
                                            u439_20 1D2A                                              u439_21 1D29  
                                            u447_25 08E5                                              u448_25 08F4  
                                            u449_20 0914                                              u449_21 0913  
                                        __i1fptable 0067                                           ??_Led_Off 002F  
                                            _SSPADD 0093                                              _SSPCON 0014  
                                            _SSPBUF 0013                                    __end_of___xxtofl 0B32  
                                            _Led_On 12BA                                     _u8_Mode@ADC$F29 0061  
                          __size_of_CPU_SleepUpdate 000A                                ?_ADC_startConversion 0070  
                     __size_of_Heater_Cooler_action 004A                                              ___bmul 1C44  
                                       ?_App_Update 0070                               __size_of_App_MainLoop 002E  
                                       _Cooler_Init 1B43                                     _u16_LED_Counter 00BC  
                                       _Cooler_Turn 1BE4                                           ??___fldiv 00C5  
                                         ??___awdiv 002E                                           ??___lbdiv 002B  
                                         ??___awmod 002E                                           ??___flmul 0040  
                                         ??___fltol 01DA                                           ??___lldiv 0032  
                                         ??___lwdiv 002E                                          _Timer_Init 0E37  
                                 __end_of_LM_Update 1B28                                          _Timer_Stop 1053  
                                  ___awdiv@quotient 0030                                     ___awmod@divisor 002A  
                                   ___awmod@counter 002E                                DIO_PortWrite@u8_GPIO 002D  
                                     ??_Timer_Start 0072                         __end_of_INT_SetCallBackFunc 1F7A  
                                 __end_ofi1___lbdiv 1D3F                                              fptable 0066  
                                       ?_Led_Toggle 0070                                        __pdataCOMMON 007B  
                                            fptotal 0000                        I2C_Master_AckEN@u8_ACK_State 002A  
                                __size_of__Umul8_16 0029                                              saved_w 007E  
                                   _Display_SetData 1000                                           ?_ADC_init 002A  
                      Timer_SetValue@u8_Timer_CH_NO 0074                                    ___lbdiv@dividend 002B  
                                   _Display_TurnOff 1B5F                                 __size_of_SSD_Update 0107  
                                         ?_DIO_Read 002E                                        ___xxtofl@arg 0034  
                                      ___xxtofl@exp 0033                                        ___xxtofl@val 002A  
                           __end_of__initialization 0062                                           ?_DIO_init 002A  
                                      _App_MainLoop 1DC0                          __size_of_pushButton_Update 0196  
                                        ___fltol@f1 00D7                                        ??_LED_ACTION 0032  
                                      ??_DIO_Toggle 002B                               __size_of_EEPROM_Write 0024  
                      __end_of_pushButton_GetStatus 117A                                 ___bmul@multiplicand 002A  
                __end_of_TemperatureAVGReading_Read 1E92                          _TemperatureAVGReading_Read 1E5B  
                             ??_ADC_startConversion 002A                            pushButton_Update@counter 0035  
                                  ?_pushButton_Init 0070                  __end_of_TemperatureAVGReading_init 1AE5  
                        _TemperatureAVGReading_init 1ADF                                      __pcstackCOMMON 0070  
                                   App_init@MyTimer 0045                                        __pidataBANK0 1ADD  
                                      __pidataBANK1 1C1B                                        __pidataBANK3 1F7A  
                                     __end_of_myIsr 0921                                  _au8_PrescalerValue 00B0  
                                  ___lbdiv@quotient 002D                                           ?_SSD_Init 0070  
                                   fp__Timer_Callbk 006D                                        ?_SSD_TurnOff 0070  
                   INT_SetCallBackFunc@pu8_Register 002A                          INT_SetCallBackFunc@u8_MASK 002C  
                                        ??_ADC_init 002E                             ??_I2C_Master_EnableRead 002A  
                       I2C_Master_Init@u32_Baudrate 0038                                  __end_of_LED_ACTION 1F04  
                                __end_of_DIO_Toggle 1E5B                                           ?_App_init 0070  
                                         ?_Led_Init 0070                                 __end_of_Timer_Start 15B0  
                                           ??_myIsr 0020                                 __size_of_App_Update 00F8  
                     Display_SetData@u8_DisplayData 002B                       Display_SetData@u8_DisplayMode 002A  
                                      _EEPROM_Write 1CCB                                          __pbssBANK0 005C  
                                        __pbssBANK1 00A0                                          __pbssBANK3 01D0  
                                        ??_DIO_Read 0030                                          ??_DIO_init 002C  
                                 _u8_PB_TickCounter 005D                                             ?_Led_On 0070  
                               __size_of_Led_Toggle 0047                                   __end_of__Umul8_16 1D68  
                                        __pmaintext 1B28                          __end_of_I2C_Master_WaitACK 1AEC  
                              __end_of_CPU_SetSleep 1AFC                                             ?___bmul 002A  
                                        __pintentry 0004                             I2C_Master_Read@pu8_Data 002A  
                                       ?_Timer_Init 0070                                         ?_Timer_Stop 0070  
                                 ??_CPU_SleepUpdate 002A                             __size_of_ADC_ReadResult 003B  
                           __end_of_Display_SetData 100C                                          ??_SSD_Init 002F  
                             __size_of_Display_Init 0016                              __size_of_INT_SetEnable 0003  
                           __end_of_Display_TurnOff 1B6F                                           ?___xxtofl 002A  
                                     ?_Timer_Callbk 0070                                          ??_App_init 0041  
                                    _u8_SSD_Current 0077        TemperatureAVGReading_Update@u8_LMTemperature 01DE  
                         _au8_Timer0_PrescalerTable 01AE                                             _LM_Read 14E3  
                                        ??_Led_Init 002F                                             _SSPCON2 0091  
                                    _Timer_SetValue 11C5                                             _LM_init 1CEF  
                                           _SSPSTAT 0094                       Timer_SetValue@u16_Timer_Count 0070  
                             EEPROM_Read@u8_Address 002C                                             i1fpbase 006C  
                                           _Led_Off 10E4                           __size_of_ExternInt_Enable 0019  
                        Timer_Start@u16_Timer_Count 0070                                     __size_of_Led_On 0057  
                                   Led_On@u8_led_ID 0031                                             _u8_Data 0060  
                                      _Display_Init 1C2E                                             _u8_Mode 0064  
      TemperatureAVGReading_Read@pu8_AVGtemperature 0033                                     __size_of___bmul 0017  
                                      ??_SSD_Update 002F                                             ___fldiv 03D4  
                                           ___awdiv 1681                                             ___lbdiv 1D68  
                                           ___awmod 13C2                                             ___flmul 0073  
                                           ___fltol 0921                                             ___lldiv 15B0  
                                           ___lwdiv 1FBA                               __end_of_DIO_PortWrite 1DC0  
                                           __ptext1 09C5                                             __ptext2 141D  
                                           __ptext3 0E37                                             __ptext4 1ADF  
                                           __ptext5 1CEF                                             __ptext6 1767  
                                           __ptext7 117A                                             __ptext8 0801  
                                           __ptext9 1B51                                 __size_of__i1fptable 000C  
                           __size_of_Display_Update 0106                                         _Timer_Start 1549  
                                i1___lbdiv@dividend 0071                            App_Update@u8_BtnUpStatus 01E1  
                                      ?_Heater_Init 0070                                          ??___xxtofl 002E  
                                  ___awmod@dividend 002C                                      ??_Timer_Callbk 0075  
                                      ?_Heater_Turn 0070                                           _DIO_Write 1618  
                          __size_of_I2C_Master_Init 0057                            __size_of_I2C_Master_Read 0017  
                            __end_of_Timer_SetValue 1214                            __size_of_I2C_Master_Wait 000D  
                              _pushButton_GetStatus 112F                            __size_of_I2C_Master_Stop 0010  
TemperatureAVGReading_Read@u16_CurrentAvgTemerature 0034                                             clrloop0 1AFD  
                              end_of_initialization 0062                             __size_ofi1_CPU_SetSleep 0008  
                           I2C_Master_Write@u8_Data 002A                                 __size_of_Timer_Init 01C9  
                                __end_of_SSD_Update 0E37                                 __size_of_Timer_Stop 0047  
                           __size_of_ExternInt_Init 0053                                       ??_EEPROM_Init 0041  
                                     ??_EEPROM_Read 002C                           __size_of_I2C_Master_AckEN 0020  
                                     _INT_SetEnable 0801                               DIO_PortWrite@u8_value 002A  
                         __size_of_I2C_Master_Start 0010                           __size_of_I2C_Master_Write 0012  
                                   ___lldiv@divisor 002A                                     ___lldiv@counter 0037  
                                i1___lbdiv@quotient 0073                                        ??_App_Update 01DE  
                                      ?_Cooler_Init 0070                                        ?_Cooler_Turn 0070  
                                  ?_Display_SetData 002A                                           _LM_Update 1B1B  
                                      ??_Led_Toggle 002E                              Timer_Init@st_Timer_cfg 0032  
                              __size_of_SSD_TurnOff 0064                                    ?_Display_TurnOff 0070  
                                     ___xxtofl@sign 0032                               ?_pushButton_GetStatus 002A  
                                        ?_DIO_Write 002A                        __end_of_Heater_Cooler_action 10E4  
                                    _u16_ADCReading 0062                                     ?_Timer_SetValue 0070  
                                         i1___lbdiv 1D16                                         ___fldiv@grs 00D1  
                                       ___fldiv@rem 00CA                                   DIO_Write@u8_value 002B  
                                 __size_of_ADC_init 0099                                  __end_of_App_Update 0C2A  
                                 SSD_Init@u8_SSD_ID 0031                                         ___flmul@grs 0047  
                                    ?_INT_SetEnable 0070                               __size_of_CPU_SetSleep 0008  
                                 __size_of_DIO_Read 0083                                   __size_of_DIO_init 007D  
                                _u8_APP_TickCounter 00C3                                      __end_of_Led_On 1311  
                       ?_TemperatureAVGReading_Read 0070                                  __end_of_Led_Toggle 1053  
                               __end_of_EEPROM_Init 1BD2                                 __end_of_EEPROM_Read 1267  
                       ?_TemperatureAVGReading_init 0070                                      __end_of___bmul 1C5B  
                         Timer_Start@u8_Timer_CH_NO 0074                                      _ADC_ReadResult 1F04  
                                     __pidataCOMMON 07FF                                       ?_SSD_SetValue 0032  
                                     ?_SSD_SetState 002A                                ADC_init@ptrf_ADC_cbk 002D  
                                        ?_LM_Update 0070                                   __size_of_SSD_Init 005A  
                               start_initialization 0015                                      _u8_DisplayMode 00EE  
                                        ?i1___lbdiv 0070                                        _CPU_SetSleep 1AF4  
                    __size_of_I2C_Master_EnableRead 0010                        __size_of_INT_SetCallBackFunc 003B  
                     __end_of_I2C_Master_EnableRead 1B9F                                   __size_of_App_init 00B1  
                    ADC_init@u8_ADC_Channels_Config 0030                                   __size_of_Led_Init 004B  
                       __end_of_ADC_startConversion 1BC1                                   ??_I2C_Master_Init 003C  
                                 ??_I2C_Master_Read 002A                                   ??_I2C_Master_Wait 002A  
                                 ??_I2C_Master_Stop 002A                                    _ExternInt_Enable 1C72  
                                   _CPU_SleepUpdate 1B04                  INT_SetCallBackFunc@u8_INT_Priority 002F  
                                          ??_Led_On 002F                                __end_of_Timer_Callbk 1BB0  
                              SSD_TurnOff@u8_SSD_ID 0031                             __size_of_EXT_INT_Callbk 0020  
                                 fp__EXT_INT_Callbk 0070                                            ??___bmul 002B  
                            __end_of_ADC_ReadResult 1F3F                                          init_fetch0 1C08  
                                      ??_Timer_Init 0030                                           __Umul8_16 1D3F  
                                      ??_Timer_Stop 002A                                         __pdataBANK0 0064  
                                       __pdataBANK1 00DC                                         __pdataBANK3 0190  
                                    ??_SSD_SetValue 0033                                      ??_SSD_SetState 002B  
                          __size_of_pushButton_Init 0062                                      _Display_Update 0C2A  
                                __end_of__i1fptable 0073                                           ___fldiv@a 0052  
                                         ___fldiv@b 0056                              ??_pushButton_GetStatus 002B  
                                _I2C_Master_WaitACK 1AE5                       ADC_startConversion@u8_channel 002A  
                                         ___flmul@a 003C                                           ___flmul@b 0038  
                                       __pbssCOMMON 0076                                           ___latbits 0002  
                                       ??_DIO_Write 002C                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00C5                                       __pcstackBANK3 01DA  
                   App_Update@u8_CurrentTemperature 01E0                                __size_of_Heater_Init 000E  
                                 __size_of___xxtofl 00BC                                            ?_LM_Read 0070  
                                 _u8_MainLoopStatus 0065                                __size_of_Heater_Turn 0012  
                                          ?_LM_init 0070                                 _au8_Timer_Prescalar 00B9  
                                   ??_INT_SetEnable 002A                                 ?_I2C_Master_WaitACK 0070  
                                    i1_CPU_SetSleep 1AEC                                    DIO_Read@pu8_data 002F  
                                    _ExternInt_Init 1267                                    _I2C_Master_AckEN 1CAB  
                                __end_of_Timer_Init 1000                                            ?_Led_Off 0070  
                                __end_of_Timer_Stop 109A                                         _EEPROM_Init 1BC1  
                                       _EEPROM_Read 1214                                    _I2C_Master_Start 1B6F  
                                  _I2C_Master_Write 1BD2                                    ___lwdiv@dividend 002C  
                                         __pfunctab 0066                               _u8_DisplayTickCounter 005E  
                              _Heater_Cooler_action 109A                                     ?_ADC_ReadResult 0070  
                                          ?___fldiv 0052                                            ?___awdiv 002A  
                                          ?___lbdiv 002A                                            ?___awmod 002A  
                                          ?___flmul 0038                                            ?___fltol 00D7  
                                          ?___lldiv 002A                                ??_I2C_Master_WaitACK 002A  
                                        ?__Umul8_16 002A                                            ?___lwdiv 002A  
                            __end_of_Display_Update 0D30                                __size_of_Cooler_Init 000E  
                              __size_of_Cooler_Turn 0012                                           _astr_SSDs 00A0  
                                      ?_Timer_Start 0070                                         ??_LM_Update 002D  
                                          _ADC_init 1767                                         ??i1___lbdiv 0071  
                            __end_ofi1_CPU_SetSleep 1AF4                                    ___lwdiv@quotient 002F  
                            __end_of_ExternInt_Init 12BA                 __size_of_TemperatureAVGReading_Read 0037  
                                    __size_of_myIsr 009A                             __end_of_CPU_SleepUpdate 1B0E  
               __size_of_TemperatureAVGReading_init 0006                                            _DIO_Read 0804  
                                 i1___lbdiv@divisor 0070                                   i1___lbdiv@counter 0072  
                                  _au8_SSD_DataMask 00DC                                   interrupt_function 0004  
                                          _DIO_init 16EA                                           clear_ram0 1AFC  
                  pushButton_GetStatus@pu8_BtnState 002A                               ?_Heater_Cooler_action 0070  
                                 DIO_Toggle@u8_GPIO 002D                                    DIO_Write@u8_GPIO 002E  
                                   ?_Display_Update 0070                                            _SSD_Init 1368  
                                 DIO_Toggle@u8_pins 002A                                    DIO_Write@u8_pins 002A  
                                  ??_Timer_SetValue 0072            TemperatureAVGReading_Read@u8_LoopCounter 0036  
                            _u16_SettingModeCounter 00BE                                _u8_WaterHeaterStatus 007B  
                                   ?i1_CPU_SetSleep 0070                                   ??_pushButton_Init 002F  
                                          _App_init 09C5                                            _Led_Init 117A  
                                          i1fptable 0067                                     ?_ExternInt_Init 0070  
                                          i1fptotal 0004                                    __size_of_LM_Read 0066  
                                      App_init@F162 00EB                                        App_init@F166 00E6  
                                  __size_of_LM_init 0027                                __end_of_SSD_SetValue 1EC9  
                              __end_of_SSD_SetState 1B43                                       ?_App_MainLoop 0070  
                             __size_of_Timer_Callbk 0011                                  _u8_AVG_Temperature 0079  
                 ExternInt_Enable@u8_ExternInt_Type 002C                                        App_init@temp 0044  
                      _u8_Heating_Element_Led_State 0078                                    __size_of_Led_Off 004B  
                            __size_of_DIO_PortWrite 002D                            ADC_init@u8_ADC_prescaler 002C  
                                    _EXT_INT_Callbk 1C8B                                     DIO_Read@u8_GPIO 0032  
                        App_Update@u8_BtnDownStatus 01E2                                 _INT_SetCallBackFunc 1F3F  
                                       ??__Umul8_16 002C                                     DIO_Read@u8_pins 002E  
                INT_SetCallBackFunc@ptrf_CallBkFunc 002D                                    __size_of___fldiv 0295  
                                  __size_of___awdiv 0069                                    __size_of___lbdiv 002B  
                                  __size_of___awmod 005B                                    __size_of___flmul 0361  
                                  __size_of___fltol 00A4                                    __size_of___lldiv 0068  
                                  __size_of___lwdiv 0046                                       ??_SSD_TurnOff 002F  
                          __end_of_ExternInt_Enable 1C8B                                     _I2C_Master_Init 1311  
                                   _I2C_Master_Read 1C5B                                            ___xxtofl 0A76  
                                   _I2C_Master_Wait 1B0E                         ADC_ReadResult@ptru16_Result 002C  
                                   _I2C_Master_Stop 1B7F                                     ___lwdiv@divisor 002A  
                          Timer_Stop@u8_Timer_CH_NO 002C                __end_of_TemperatureAVGReading_Update 1E24  
             __size_of_TemperatureAVGReading_Update 0036                        _TemperatureAVGReading_Update 1DEE  
                                      _Timer_Callbk 1B9F                                     ___lwdiv@counter 002E  
                                          _ast_INTS 00A8                            __size_of_Display_SetData 000C  
                                          __ptext10 1267                                            __ptext11 1F3F  
                                          __ptext20 15B0                                            __ptext12 1C72  
                                          __ptext21 1C2E                                            __ptext13 1214  
                                          __ptext30 1DEE                                            __ptext22 1368  
                                          __ptext14 1AE5                                            __ptext31 1B1B  
                                          __ptext23 1B43                                            __ptext15 1C5B  
                                          __ptext40 1B35                                            __ptext32 1BB0  
                                          __ptext24 16EA                                            __ptext16 1B8F  
                                          __ptext41 1B04                                            __ptext33 1F04  
                                          __ptext25 1DC0                                            __ptext17 1CAB  
                                          __ptext50 0073                                            __ptext42 0B32  
                                          __ptext34 0D30                                            __ptext26 0669  
                                          __ptext18 1BC1                                            __ptext51 1D3F  
                                          __ptext43 112F                                            __ptext35 1D93  
                                          __ptext27 1C44                                            __ptext19 1311  
                                          __ptext60 1BE4                                            __ptext52 03D4  
                                          __ptext44 1053                                            __ptext36 0C2A  
                                          __ptext28 0804                                            __ptext61 1CCB  
                                          __ptext53 1EC9                                            __ptext45 1E5B  
                                          __ptext37 13C2                                            __ptext29 1D68  
                                          __ptext70 1AF4                                            __ptext62 1BD2  
                                          __ptext54 100C                                            __ptext46 1FBA  
                                          __ptext38 1681                                            __ptext71 0887  
                                          __ptext63 1B7F                                            __ptext55 1E24  
                                          __ptext47 14E3                                            __ptext39 1E92  
                                          __ptext72 1D16                                            __ptext64 1B6F  
                                          __ptext56 12BA                                            __ptext48 0A76  
                                          __ptext73 1C8B                                            __ptext65 1B0E  
                                          __ptext57 10E4                                            __ptext49 0921  
                                          __ptext74 1B9F                                            __ptext66 1B5F  
                                          __ptext58 109A                                            __ptext75 11C5  
                                          __ptext67 147F                                            __ptext59 1BF6  
                                          __ptext76 1AEC                                            __ptext68 1618  
                                          __ptext77 1549                                            __ptext69 1000  
                              ?_INT_SetCallBackFunc 002A                                       ?_EEPROM_Write 002B  
                                  ?_CPU_SleepUpdate 0070                                _u8_Mode@Display$F109 005F  
                               Cooler_Turn@u8_State 002F                                      ??_App_MainLoop 005C  
                          __size_of_Display_TurnOff 0010                                       __size_of_main 000D  
                                     _u8_ModuleMode 005C                              __end_of_EXT_INT_Callbk 1CAB  
                                 _u8_SetTemperature 007A                                          _LED_ACTION 1EC9  
                                        _DIO_Toggle 1E24                              ??_Heater_Cooler_action 0030  
                                   DIO_init@u8_pins 002A                                     DIO_init@u8_port 002E  
                               EEPROM_Read@pu8_Data 002B                            __end_of_I2C_Master_AckEN 1CCB  
                          SSD_SetState@u8_SSD_State 002A                                    Led_Off@u8_led_ID 0031  
                                     _DIO_PortWrite 1D93                              EEPROM_Write@u8_Address 002C  
                          __end_of_I2C_Master_Start 1B7F                            __end_of_I2C_Master_Write 1BE4  
                                       App_init@zft 0041                                __size_of_Timer_Start 0067  
                               __end_of_SSD_TurnOff 14E3                                            init_ram0 1C0C  
                             ??_INT_SetCallBackFunc 002E                                      ??_EEPROM_Write 002C  
                           _u16_DisplayBlinkCounter 00C0                       ?_TemperatureAVGReading_Update 0070  
                                          intlevel1 0066                           _au8_Timer1_PrescalerTable 01A4  
                             _I2C_Master_EnableRead 1B8F                                        ?_EEPROM_Init 0070  
                                      ?_EEPROM_Read 002B                                    ___lldiv@dividend 002E  
                                  ??_ADC_ReadResult 002A                                     ?_EXT_INT_Callbk 0070  
                                      _ptrf_ADC_cbk 00C4                                       ?_Display_Init 0070  
                      __size_of_ADC_startConversion 0011                             __end_of_I2C_Master_Init 1368  
                           __end_of_I2C_Master_Read 1C72                             __end_of_I2C_Master_Wait 1B1B  
                    pushButton_Init@u8_PushbuttonID 0031                                   _u8_TR_TickCounter 00C2  
                           __end_of_I2C_Master_Stop 1B8F                                      ?_DIO_PortWrite 002A  
                            __Umul8_16@multiplicand 002A                                          _OPTION_REG 0081  
                                     ??_Heater_Init 002F                                    ___lldiv@quotient 0033  
                                     ??_Heater_Turn 002F                       __size_of_pushButton_GetStatus 004B  
                             __size_of_SSD_SetValue 0037                               __size_of_SSD_SetState 000E  
                              DIO_init@u8_direction 002B                               __end_of_INT_SetEnable 0804  
                             SSD_SetState@u8_SSD_ID 002C                                 EEPROM_Write@u8_Data 002B  
                                 ??_Display_SetData 002B                                __Umul8_16@multiplier 0032  
                                       ?_LED_ACTION 0070                                         ?_DIO_Toggle 002A  
                                  ??_Display_Update 0036                                      ??_Display_Init 0032  
                                 __Umul8_16@product 002E                                   ??_Display_TurnOff 0032  
                                _u8_SSD_TickCounter 0076                                       ??_Cooler_Init 002F  
